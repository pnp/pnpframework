### YamlMime:ManagedReference
items:
- uid: AngleSharp.Dom.AngleSharpExtensions
  commentId: T:AngleSharp.Dom.AngleSharpExtensions
  id: AngleSharpExtensions
  parent: AngleSharp.Dom
  children:
  - AngleSharp.Dom.AngleSharpExtensions.PartialMatch(AngleSharp.Dom.ITokenList,System.String)
  langs:
  - csharp
  - vb
  name: AngleSharpExtensions
  nameWithType: AngleSharpExtensions
  fullName: AngleSharp.Dom.AngleSharpExtensions
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/AngleSharpExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AngleSharpExtensions
    path: ../src/lib/PnP.Framework/Modernization/Extensions/AngleSharpExtensions.cs
    startLine: 8
  assemblies:
  - PnP.Framework
  namespace: AngleSharp.Dom
  summary: "\nExtension methods for AngleSharp\n"
  example: []
  syntax:
    content: public static class AngleSharpExtensions
    content.vb: Public Module AngleSharpExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AngleSharp.Dom.AngleSharpExtensions.PartialMatch(AngleSharp.Dom.ITokenList,System.String)
  commentId: M:AngleSharp.Dom.AngleSharpExtensions.PartialMatch(AngleSharp.Dom.ITokenList,System.String)
  id: PartialMatch(AngleSharp.Dom.ITokenList,System.String)
  isExtensionMethod: true
  parent: AngleSharp.Dom.AngleSharpExtensions
  langs:
  - csharp
  - vb
  name: PartialMatch(ITokenList, String)
  nameWithType: AngleSharpExtensions.PartialMatch(ITokenList, String)
  fullName: AngleSharp.Dom.AngleSharpExtensions.PartialMatch(AngleSharp.Dom.ITokenList, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/AngleSharpExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PartialMatch
    path: ../src/lib/PnP.Framework/Modernization/Extensions/AngleSharpExtensions.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: AngleSharp.Dom
  summary: "\nPerforms a partial match on a list of tokens (e.g. classes on an element)\n"
  example: []
  syntax:
    content: public static string PartialMatch(this ITokenList tokenList, string filter)
    parameters:
    - id: tokenList
      type: AngleSharp.Dom.ITokenList
      description: List of tokens to search in
    - id: filter
      type: System.String
      description: Partial token to match via an StartsWidth
    return:
      type: System.String
      description: First matching token if found, null if no match
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PartialMatch(tokenList As ITokenList, filter As String) As String
  overload: AngleSharp.Dom.AngleSharpExtensions.PartialMatch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AngleSharp.Dom
  commentId: N:AngleSharp.Dom
  name: AngleSharp.Dom
  nameWithType: AngleSharp.Dom
  fullName: AngleSharp.Dom
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: AngleSharp.Dom.AngleSharpExtensions.PartialMatch*
  commentId: Overload:AngleSharp.Dom.AngleSharpExtensions.PartialMatch
  name: PartialMatch
  nameWithType: AngleSharpExtensions.PartialMatch
  fullName: AngleSharp.Dom.AngleSharpExtensions.PartialMatch
- uid: AngleSharp.Dom.ITokenList
  commentId: T:AngleSharp.Dom.ITokenList
  parent: AngleSharp.Dom
  isExternal: true
  name: ITokenList
  nameWithType: ITokenList
  fullName: AngleSharp.Dom.ITokenList
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

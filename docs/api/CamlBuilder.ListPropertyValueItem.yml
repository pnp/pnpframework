### YamlMime:ManagedReference
items:
- uid: CamlBuilder.ListPropertyValueItem
  commentId: T:CamlBuilder.ListPropertyValueItem
  id: ListPropertyValueItem
  parent: CamlBuilder
  children:
  - CamlBuilder.ListPropertyValueItem.#ctor(System.String)
  - CamlBuilder.ListPropertyValueItem.AutoHyperLink
  - CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding
  - CamlBuilder.ListPropertyValueItem.AutoNewLine
  - CamlBuilder.ListPropertyValueItem.Default
  - CamlBuilder.ListPropertyValueItem.ExpandXml
  - CamlBuilder.ListPropertyValueItem.HtmlEncode
  - CamlBuilder.ListPropertyValueItem.Select
  - CamlBuilder.ListPropertyValueItem.StripWs
  - CamlBuilder.ListPropertyValueItem.UrlEncode
  - CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl
  langs:
  - csharp
  - vb
  name: ListPropertyValueItem
  nameWithType: ListPropertyValueItem
  fullName: CamlBuilder.ListPropertyValueItem
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ListPropertyValueItem
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 7
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nRepresents an item to be used by ListProperty value.\n"
  example: []
  syntax:
    content: public class ListPropertyValueItem
    content.vb: Public Class ListPropertyValueItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - CamlBuilder.ListPropertyValueItem.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - CamlBuilder.ListPropertyValueItem.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{CamlBuilder.ListPropertyValueItem,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CamlBuilder.ListPropertyValueItem.AutoHyperLink
  commentId: P:CamlBuilder.ListPropertyValueItem.AutoHyperLink
  id: AutoHyperLink
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: AutoHyperLink
  nameWithType: ListPropertyValueItem.AutoHyperLink
  fullName: CamlBuilder.ListPropertyValueItem.AutoHyperLink
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AutoHyperLink
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nTrue to surround text with anchor tags if the text appears like a\nhyperlink, for example, www.microsoft.com.\n"
  example: []
  syntax:
    content: public bool? AutoHyperLink { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AutoHyperLink As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.AutoHyperLink*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding
  commentId: P:CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding
  id: AutoHyperLinkNoEncoding
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: AutoHyperLinkNoEncoding
  nameWithType: ListPropertyValueItem.AutoHyperLinkNoEncoding
  fullName: CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AutoHyperLinkNoEncoding
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 19
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nTrue to surround text with anchor tags if the text appears like a\nhyperlink (for example, www.microsoft.com) but without HTML encoding.\n"
  example: []
  syntax:
    content: public bool? AutoHyperLinkNoEncoding { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AutoHyperLinkNoEncoding As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.AutoNewLine
  commentId: P:CamlBuilder.ListPropertyValueItem.AutoNewLine
  id: AutoNewLine
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: AutoNewLine
  nameWithType: ListPropertyValueItem.AutoNewLine
  fullName: CamlBuilder.ListPropertyValueItem.AutoNewLine
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AutoNewLine
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nTrue to insert break-line tags into the text stream and to\nreplace multiple spaces with a nonbreaking space (&amp;nbsp;).\n"
  example: []
  syntax:
    content: public bool? AutoNewLine { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AutoNewLine As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.AutoNewLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.Default
  commentId: P:CamlBuilder.ListPropertyValueItem.Default
  id: Default
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ListPropertyValueItem.Default
  fullName: CamlBuilder.ListPropertyValueItem.Default
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Default
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 30
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nSets the default ProgID for the application that created the list.\n"
  example: []
  syntax:
    content: public string Default { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Default As String
  overload: CamlBuilder.ListPropertyValueItem.Default*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.ExpandXml
  commentId: P:CamlBuilder.ListPropertyValueItem.ExpandXml
  id: ExpandXml
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: ExpandXml
  nameWithType: ListPropertyValueItem.ExpandXml
  fullName: CamlBuilder.ListPropertyValueItem.ExpandXml
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExpandXml
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 36
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nTrue to re-pass the rendered content through the Collaborative Application\nMarkup Language (CAML) interpreter, which allows CAML to render CAML.\n"
  example: []
  syntax:
    content: public bool? ExpandXml { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property ExpandXml As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.ExpandXml*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.HtmlEncode
  commentId: P:CamlBuilder.ListPropertyValueItem.HtmlEncode
  id: HtmlEncode
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: HtmlEncode
  nameWithType: ListPropertyValueItem.HtmlEncode
  fullName: CamlBuilder.ListPropertyValueItem.HtmlEncode
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: HtmlEncode
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 43
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nTrue to convert embedded characters so that they are displayed as text in the\nbrowser. In other words, characters that could be confused with HTML tags are \nconverted to entities.\n"
  example: []
  syntax:
    content: public bool? HtmlEncode { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property HtmlEncode As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.HtmlEncode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.Select
  commentId: P:CamlBuilder.ListPropertyValueItem.Select
  id: Select
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: ListPropertyValueItem.Select
  fullName: CamlBuilder.ListPropertyValueItem.Select
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Select
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 48
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nSpecifies a field in the List of Lists table.\n"
  example: []
  syntax:
    content: public string Select { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Select As String
  overload: CamlBuilder.ListPropertyValueItem.Select*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.StripWs
  commentId: P:CamlBuilder.ListPropertyValueItem.StripWs
  id: StripWs
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: StripWs
  nameWithType: ListPropertyValueItem.StripWs
  fullName: CamlBuilder.ListPropertyValueItem.StripWs
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: StripWs
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 53
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nTrue to remove white space from the beginning and end of the value returned by the element.\n"
  example: []
  syntax:
    content: public bool? StripWs { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property StripWs As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.StripWs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.UrlEncode
  commentId: P:CamlBuilder.ListPropertyValueItem.UrlEncode
  id: UrlEncode
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: UrlEncode
  nameWithType: ListPropertyValueItem.UrlEncode
  fullName: CamlBuilder.ListPropertyValueItem.UrlEncode
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UrlEncode
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nTrue to convert special characters, such as spaces, to quoted UTF-8 format,\nfor example, %c3%ab for character ë.\n"
  example: []
  syntax:
    content: public bool? UrlEncode { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property UrlEncode As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.UrlEncode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl
  commentId: P:CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl
  id: UrlEncodeAsUrl
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: UrlEncodeAsUrl
  nameWithType: ListPropertyValueItem.UrlEncodeAsUrl
  fullName: CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UrlEncodeAsUrl
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 65
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nLike URLEncode, but true to specify that the string to encode is a path component of a\nURL and not to encode the forward slash (/).\n"
  example: []
  syntax:
    content: public bool? UrlEncodeAsUrl { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property UrlEncodeAsUrl As Boolean?
  overload: CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CamlBuilder.ListPropertyValueItem.#ctor(System.String)
  commentId: M:CamlBuilder.ListPropertyValueItem.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: CamlBuilder.ListPropertyValueItem
  langs:
  - csharp
  - vb
  name: ListPropertyValueItem(String)
  nameWithType: ListPropertyValueItem.ListPropertyValueItem(String)
  fullName: CamlBuilder.ListPropertyValueItem.ListPropertyValueItem(System.String)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Caml/ListPropertyValueItem.cs
    startLine: 71
  assemblies:
  - PnP.Framework
  namespace: CamlBuilder
  summary: "\nCreates an instance of ListPropertyValueItem with initial specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">select</code>\n"
  example: []
  syntax:
    content: public ListPropertyValueItem(string select)
    parameters:
    - id: select
      type: System.String
      description: Specifies a field in the List of Lists table.
    content.vb: Public Sub New(select As String)
  overload: CamlBuilder.ListPropertyValueItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CamlBuilder
  commentId: N:CamlBuilder
  name: CamlBuilder
  nameWithType: CamlBuilder
  fullName: CamlBuilder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CamlBuilder.ListPropertyValueItem.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ListPropertyValueItem>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ListPropertyValueItem>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<CamlBuilder.ListPropertyValueItem>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ListPropertyValueItem)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of CamlBuilder.ListPropertyValueItem)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ListPropertyValueItem)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ListPropertyValueItem>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ListPropertyValueItem>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<CamlBuilder.ListPropertyValueItem>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ListPropertyValueItem)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ListPropertyValueItem)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of CamlBuilder.ListPropertyValueItem)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CamlBuilder.ListPropertyValueItem.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{CamlBuilder.ListPropertyValueItem,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ListPropertyValueItem, T>(Expression<Func<ListPropertyValueItem, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ListPropertyValueItem, T>(Expression<Func<ListPropertyValueItem, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<CamlBuilder.ListPropertyValueItem, T>(System.Linq.Expressions.Expression<System.Func<CamlBuilder.ListPropertyValueItem, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ListPropertyValueItem, T)(Expression(Of Func(Of ListPropertyValueItem, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of CamlBuilder.ListPropertyValueItem, T)(System.Linq.Expressions.Expression(Of System.Func(Of CamlBuilder.ListPropertyValueItem, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ListPropertyValueItem, T)(Expression(Of Func(Of ListPropertyValueItem, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ListPropertyValueItem, T>
    nameWithType: ObjectExtensions.Set<ListPropertyValueItem, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<CamlBuilder.ListPropertyValueItem, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CamlBuilder.ListPropertyValueItem
    name: ListPropertyValueItem
    nameWithType: ListPropertyValueItem
    fullName: CamlBuilder.ListPropertyValueItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ListPropertyValueItem, T)
    nameWithType: ObjectExtensions.Set(Of ListPropertyValueItem, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of CamlBuilder.ListPropertyValueItem, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CamlBuilder.ListPropertyValueItem
    name: ListPropertyValueItem
    nameWithType: ListPropertyValueItem
    fullName: CamlBuilder.ListPropertyValueItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: CamlBuilder.ListPropertyValueItem.AutoHyperLink*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.AutoHyperLink
  name: AutoHyperLink
  nameWithType: ListPropertyValueItem.AutoHyperLink
  fullName: CamlBuilder.ListPropertyValueItem.AutoHyperLink
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding
  name: AutoHyperLinkNoEncoding
  nameWithType: ListPropertyValueItem.AutoHyperLinkNoEncoding
  fullName: CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding
- uid: CamlBuilder.ListPropertyValueItem.AutoNewLine*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.AutoNewLine
  name: AutoNewLine
  nameWithType: ListPropertyValueItem.AutoNewLine
  fullName: CamlBuilder.ListPropertyValueItem.AutoNewLine
- uid: CamlBuilder.ListPropertyValueItem.Default*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.Default
  name: Default
  nameWithType: ListPropertyValueItem.Default
  fullName: CamlBuilder.ListPropertyValueItem.Default
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CamlBuilder.ListPropertyValueItem.ExpandXml*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.ExpandXml
  name: ExpandXml
  nameWithType: ListPropertyValueItem.ExpandXml
  fullName: CamlBuilder.ListPropertyValueItem.ExpandXml
- uid: CamlBuilder.ListPropertyValueItem.HtmlEncode*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.HtmlEncode
  name: HtmlEncode
  nameWithType: ListPropertyValueItem.HtmlEncode
  fullName: CamlBuilder.ListPropertyValueItem.HtmlEncode
- uid: CamlBuilder.ListPropertyValueItem.Select*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.Select
  name: Select
  nameWithType: ListPropertyValueItem.Select
  fullName: CamlBuilder.ListPropertyValueItem.Select
- uid: CamlBuilder.ListPropertyValueItem.StripWs*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.StripWs
  name: StripWs
  nameWithType: ListPropertyValueItem.StripWs
  fullName: CamlBuilder.ListPropertyValueItem.StripWs
- uid: CamlBuilder.ListPropertyValueItem.UrlEncode*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.UrlEncode
  name: UrlEncode
  nameWithType: ListPropertyValueItem.UrlEncode
  fullName: CamlBuilder.ListPropertyValueItem.UrlEncode
- uid: CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl
  name: UrlEncodeAsUrl
  nameWithType: ListPropertyValueItem.UrlEncodeAsUrl
  fullName: CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl
- uid: CamlBuilder.ListPropertyValueItem.#ctor*
  commentId: Overload:CamlBuilder.ListPropertyValueItem.#ctor
  name: ListPropertyValueItem
  nameWithType: ListPropertyValueItem.ListPropertyValueItem
  fullName: CamlBuilder.ListPropertyValueItem.ListPropertyValueItem

### YamlMime:ManagedReference
items:
- uid: Microsoft.SharePoint.Client.FeatureExtensions
  commentId: T:Microsoft.SharePoint.Client.FeatureExtensions
  id: FeatureExtensions
  parent: Microsoft.SharePoint.Client
  children:
  - Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  - Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Site,System.Guid)
  - Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Web,System.Guid)
  - Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Site,System.Guid)
  - Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Web,System.Guid)
  langs:
  - csharp
  - vb
  name: FeatureExtensions
  nameWithType: FeatureExtensions
  fullName: Microsoft.SharePoint.Client.FeatureExtensions
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FeatureExtensions
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nClass that deals with feature activation and deactivation\n"
  example: []
  syntax:
    content: public static class FeatureExtensions
    content.vb: Public Module FeatureExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  id: ActivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: ActivateFeature(Web, Guid, Boolean, Int32)
  nameWithType: FeatureExtensions.ActivateFeature(Web, Guid, Boolean, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Web, System.Guid, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ActivateFeature
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 21
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nActivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static void ActivateFeature(this Web web, Guid featureID, bool sandboxed = false, int pollingIntervalSeconds = 30)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to be processed - can be root web or sub web
    - id: featureID
      type: System.Guid
      description: ID of the feature to activate
    - id: sandboxed
      type: System.Boolean
      description: Set to true if the feature is defined in a sandboxed solution
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ActivateFeature(web As Web, featureID As Guid, sandboxed As Boolean = False, pollingIntervalSeconds As Integer = 30)
  overload: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  id: ActivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: ActivateFeatureAsync(Web, Guid, Boolean, Int32)
  nameWithType: FeatureExtensions.ActivateFeatureAsync(Web, Guid, Boolean, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Web, System.Guid, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ActivateFeatureAsync
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 34
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nActivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static async Task ActivateFeatureAsync(this Web web, Guid featureID, bool sandboxed = false, int pollingIntervalSeconds = 30)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to be processed - can be root web or sub web
    - id: featureID
      type: System.Guid
      description: ID of the feature to activate
    - id: sandboxed
      type: System.Boolean
      description: Set to true if the feature is defined in a sandboxed solution
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ActivateFeatureAsync(web As Web, featureID As Guid, sandboxed As Boolean = False, pollingIntervalSeconds As Integer = 30) As Task
  overload: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  id: ActivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: ActivateFeature(Site, Guid, Boolean, Int32)
  nameWithType: FeatureExtensions.ActivateFeature(Site, Guid, Boolean, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Site, System.Guid, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ActivateFeature
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 48
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nActivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static void ActivateFeature(this Site site, Guid featureID, bool sandboxed = false, int pollingIntervalSeconds = 30)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: featureID
      type: System.Guid
      description: ID of the feature to activate
    - id: sandboxed
      type: System.Boolean
      description: Set to true if the feature is defined in a sandboxed solution
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ActivateFeature(site As Site, featureID As Guid, sandboxed As Boolean = False, pollingIntervalSeconds As Integer = 30)
  overload: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  id: ActivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: ActivateFeatureAsync(Site, Guid, Boolean, Int32)
  nameWithType: FeatureExtensions.ActivateFeatureAsync(Site, Guid, Boolean, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync(Microsoft.SharePoint.Client.Site, System.Guid, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ActivateFeatureAsync
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 61
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nActivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static async Task ActivateFeatureAsync(this Site site, Guid featureID, bool sandboxed = false, int pollingIntervalSeconds = 30)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: featureID
      type: System.Guid
      description: ID of the feature to activate
    - id: sandboxed
      type: System.Boolean
      description: Set to true if the feature is defined in a sandboxed solution
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ActivateFeatureAsync(site As Site, featureID As Guid, sandboxed As Boolean = False, pollingIntervalSeconds As Integer = 30) As Task
  overload: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  id: DeactivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: DeactivateFeature(Web, Guid, Int32)
  nameWithType: FeatureExtensions.DeactivateFeature(Web, Guid, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Web, System.Guid, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeactivateFeature
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 74
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nDeactivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static void DeactivateFeature(this Web web, Guid featureID, int pollingIntervalSeconds = 30)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to be processed - can be root web or sub web
    - id: featureID
      type: System.Guid
      description: ID of the feature to deactivate
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub DeactivateFeature(web As Web, featureID As Guid, pollingIntervalSeconds As Integer = 30)
  overload: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  id: DeactivateFeatureAsync(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: DeactivateFeatureAsync(Web, Guid, Int32)
  nameWithType: FeatureExtensions.DeactivateFeatureAsync(Web, Guid, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Web, System.Guid, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeactivateFeatureAsync
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 86
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nDeactivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static async Task DeactivateFeatureAsync(this Web web, Guid featureID, int pollingIntervalSeconds = 30)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to be processed - can be root web or sub web
    - id: featureID
      type: System.Guid
      description: ID of the feature to deactivate
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeactivateFeatureAsync(web As Web, featureID As Guid, pollingIntervalSeconds As Integer = 30) As Task
  overload: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  id: DeactivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: DeactivateFeature(Site, Guid, Int32)
  nameWithType: FeatureExtensions.DeactivateFeature(Site, Guid, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Site, System.Guid, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeactivateFeature
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 99
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nDeactivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static void DeactivateFeature(this Site site, Guid featureID, int pollingIntervalSeconds = 30)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: featureID
      type: System.Guid
      description: ID of the feature to deactivate
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub DeactivateFeature(site As Site, featureID As Guid, pollingIntervalSeconds As Integer = 30)
  overload: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  id: DeactivateFeatureAsync(Microsoft.SharePoint.Client.Site,System.Guid,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: DeactivateFeatureAsync(Site, Guid, Int32)
  nameWithType: FeatureExtensions.DeactivateFeatureAsync(Site, Guid, Int32)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync(Microsoft.SharePoint.Client.Site, System.Guid, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeactivateFeatureAsync
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 111
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nDeactivates a site collection or site scoped feature\n"
  example: []
  syntax:
    content: public static async Task DeactivateFeatureAsync(this Site site, Guid featureID, int pollingIntervalSeconds = 30)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: featureID
      type: System.Guid
      description: ID of the feature to deactivate
    - id: pollingIntervalSeconds
      type: System.Int32
      description: The time in seconds between polls for &quot;IsActive&quot;
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeactivateFeatureAsync(site As Site, featureID As Guid, pollingIntervalSeconds As Integer = 30) As Task
  overload: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Site,System.Guid)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Site,System.Guid)
  id: IsFeatureActive(Microsoft.SharePoint.Client.Site,System.Guid)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: IsFeatureActive(Site, Guid)
  nameWithType: FeatureExtensions.IsFeatureActive(Site, Guid)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Site, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsFeatureActive
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 124
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if a feature is active\n"
  example: []
  syntax:
    content: public static bool IsFeatureActive(this Site site, Guid featureID)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to operate against
    - id: featureID
      type: System.Guid
      description: ID of the feature to check
    return:
      type: System.Boolean
      description: True if active, false otherwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsFeatureActive(site As Site, featureID As Guid) As Boolean
  overload: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Site,System.Guid)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Site,System.Guid)
  id: IsFeatureActiveAsync(Microsoft.SharePoint.Client.Site,System.Guid)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: IsFeatureActiveAsync(Site, Guid)
  nameWithType: FeatureExtensions.IsFeatureActiveAsync(Site, Guid)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Site, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsFeatureActiveAsync
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 135
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if a feature is active\n"
  example: []
  syntax:
    content: public static async Task<bool> IsFeatureActiveAsync(this Site site, Guid featureID)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to operate against
    - id: featureID
      type: System.Guid
      description: ID of the feature to check
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if active, false otherwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsFeatureActiveAsync(site As Site, featureID As Guid) As Task(Of Boolean)
  overload: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Web,System.Guid)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Web,System.Guid)
  id: IsFeatureActive(Microsoft.SharePoint.Client.Web,System.Guid)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: IsFeatureActive(Web, Guid)
  nameWithType: FeatureExtensions.IsFeatureActive(Web, Guid)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Web, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsFeatureActive
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 147
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if a feature is active\n"
  example: []
  syntax:
    content: public static bool IsFeatureActive(this Web web, Guid featureID)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to operate against
    - id: featureID
      type: System.Guid
      description: ID of the feature to check
    return:
      type: System.Boolean
      description: True if active, false otherwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsFeatureActive(web As Web, featureID As Guid) As Boolean
  overload: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Web,System.Guid)
  commentId: M:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Web,System.Guid)
  id: IsFeatureActiveAsync(Microsoft.SharePoint.Client.Web,System.Guid)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.FeatureExtensions
  langs:
  - csharp
  - vb
  name: IsFeatureActiveAsync(Web, Guid)
  nameWithType: FeatureExtensions.IsFeatureActiveAsync(Web, Guid)
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync(Microsoft.SharePoint.Client.Web, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsFeatureActiveAsync
    path: ../src/lib/PnP.Framework/Extensions/FeatureExtensions.cs
    startLine: 158
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if a feature is active\n"
  example: []
  syntax:
    content: public static async Task<bool> IsFeatureActiveAsync(this Web web, Guid featureID)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to operate against
    - id: featureID
      type: System.Guid
      description: ID of the feature to check
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if active, false otherwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsFeatureActiveAsync(web As Web, featureID As Guid) As Task(Of Boolean)
  overload: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature*
  commentId: Overload:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature
  name: ActivateFeature
  nameWithType: FeatureExtensions.ActivateFeature
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature
- uid: Microsoft.SharePoint.Client.Web
  commentId: T:Microsoft.SharePoint.Client.Web
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: Web
  nameWithType: Web
  fullName: Microsoft.SharePoint.Client.Web
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync*
  commentId: Overload:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync
  name: ActivateFeatureAsync
  nameWithType: FeatureExtensions.ActivateFeatureAsync
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeatureAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SharePoint.Client.Site
  commentId: T:Microsoft.SharePoint.Client.Site
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: Site
  nameWithType: Site
  fullName: Microsoft.SharePoint.Client.Site
- uid: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature*
  commentId: Overload:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature
  name: DeactivateFeature
  nameWithType: FeatureExtensions.DeactivateFeature
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature
- uid: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync*
  commentId: Overload:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync
  name: DeactivateFeatureAsync
  nameWithType: FeatureExtensions.DeactivateFeatureAsync
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeatureAsync
- uid: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive*
  commentId: Overload:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive
  name: IsFeatureActive
  nameWithType: FeatureExtensions.IsFeatureActive
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive
- uid: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync*
  commentId: Overload:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync
  name: IsFeatureActiveAsync
  nameWithType: FeatureExtensions.IsFeatureActiveAsync
  fullName: Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )

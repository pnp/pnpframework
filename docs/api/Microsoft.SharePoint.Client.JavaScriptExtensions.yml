### YamlMime:ManagedReference
items:
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions
  commentId: T:Microsoft.SharePoint.Client.JavaScriptExtensions
  id: JavaScriptExtensions
  parent: Microsoft.SharePoint.Client
  children:
  - Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Site,System.String)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Web,System.String)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Site,System.String)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Web,System.String)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation(Microsoft.SharePoint.Client.ClientObject,System.String)
  - Microsoft.SharePoint.Client.JavaScriptExtensions.SCRIPT_LOCATION
  langs:
  - csharp
  - vb
  name: JavaScriptExtensions
  nameWithType: JavaScriptExtensions
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: JavaScriptExtensions
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nJavaScript related methods\n"
  example: []
  syntax:
    content: public static class JavaScriptExtensions
    content.vb: Public Module JavaScriptExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.SCRIPT_LOCATION
  commentId: F:Microsoft.SharePoint.Client.JavaScriptExtensions.SCRIPT_LOCATION
  id: SCRIPT_LOCATION
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: SCRIPT_LOCATION
  nameWithType: JavaScriptExtensions.SCRIPT_LOCATION
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.SCRIPT_LOCATION
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SCRIPT_LOCATION
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nDefault Script Location value\n"
  example: []
  syntax:
    content: public const string SCRIPT_LOCATION = "ScriptLink"
    return:
      type: System.String
    content.vb: Public Const SCRIPT_LOCATION As String = "ScriptLink"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  id: AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: AddJsLink(Web, String, String, Int32)
  nameWithType: JavaScriptExtensions.AddJsLink(Web, String, String, Int32)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 26
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nInjects links to javascript files via a adding a custom action to the site\n"
  example: []
  syntax:
    content: public static bool AddJsLink(this Web web, string key, string scriptLinks, int sequence = 0)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Site to be processed - can be root web or sub site
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    - id: scriptLinks
      type: System.String
      description: semi colon delimited list of links to javascript files
    - id: sequence
      type: System.Int32
      description: Specifies the ordering priority for actions. A value is 0 indicates that the button will appear at the first position on the ribbon.
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsLink(web As Web, key As String, scriptLinks As String, sequence As Integer = 0) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  id: AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: AddJsLink(Site, String, String, Int32)
  nameWithType: JavaScriptExtensions.AddJsLink(Site, String, String, Int32)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 39
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nInjects links to javascript files via a adding a custom action to the site\n"
  example: []
  syntax:
    content: public static bool AddJsLink(this Site site, string key, string scriptLinks, int sequence = 0)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    - id: scriptLinks
      type: System.String
      description: semi colon delimited list of links to javascript files
    - id: sequence
      type: System.Int32
      description: Specifies the ordering priority for actions. A value is 0 indicates that the button will appear at the first position on the ribbon.
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsLink(site As Site, key As String, scriptLinks As String, sequence As Integer = 0) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  id: AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: AddJsLink(Web, String, IEnumerable<String>, Int32)
  nameWithType: JavaScriptExtensions.AddJsLink(Web, String, IEnumerable<String>, Int32)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web, System.String, System.Collections.Generic.IEnumerable<System.String>, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 53
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nInjects links to javascript files via a adding a custom action to the site\n"
  example: []
  syntax:
    content: public static bool AddJsLink(this Web web, string key, IEnumerable<string> scriptLinks, int sequence = 0)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Site to be processed - can be root web or sub site
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    - id: scriptLinks
      type: System.Collections.Generic.IEnumerable{System.String}
      description: IEnumerable list of links to javascript files
    - id: sequence
      type: System.Int32
      description: Specifies the ordering priority for actions. A value is 0 indicates that the button will appear at the first position on the ribbon.
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsLink(web As Web, key As String, scriptLinks As IEnumerable(Of String), sequence As Integer = 0) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink*
  nameWithType.vb: JavaScriptExtensions.AddJsLink(Web, String, IEnumerable(Of String), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Int32)
  name.vb: AddJsLink(Web, String, IEnumerable(Of String), Int32)
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  id: AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: AddJsLink(Site, String, IEnumerable<String>, Int32)
  nameWithType: JavaScriptExtensions.AddJsLink(Site, String, IEnumerable<String>, Int32)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site, System.String, System.Collections.Generic.IEnumerable<System.String>, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 66
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nInjects links to javascript files via a adding a custom action to the site\n"
  example: []
  syntax:
    content: public static bool AddJsLink(this Site site, string key, IEnumerable<string> scriptLinks, int sequence = 0)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    - id: scriptLinks
      type: System.Collections.Generic.IEnumerable{System.String}
      description: IEnumerable list of links to javascript files
    - id: sequence
      type: System.Int32
      description: Specifies the ordering priority for actions. A value is 0 indicates that the button will appear at the first position on the ribbon.
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsLink(site As Site, key As String, scriptLinks As IEnumerable(Of String), sequence As Integer = 0) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink*
  nameWithType.vb: JavaScriptExtensions.AddJsLink(Site, String, IEnumerable(Of String), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Int32)
  name.vb: AddJsLink(Site, String, IEnumerable(Of String), Int32)
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Web,System.String)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Web,System.String)
  id: DeleteJsLink(Microsoft.SharePoint.Client.Web,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: DeleteJsLink(Web, String)
  nameWithType: JavaScriptExtensions.DeleteJsLink(Web, String)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Web, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeleteJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 168
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nRemoves the custom action that triggers the execution of a javascript link\n"
  example: []
  syntax:
    content: public static bool DeleteJsLink(this Web web, string key)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Site to be processed - can be root web or sub site
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be deleted
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteJsLink(web As Web, key As String) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Site,System.String)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Site,System.String)
  id: DeleteJsLink(Microsoft.SharePoint.Client.Site,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: DeleteJsLink(Site, String)
  nameWithType: JavaScriptExtensions.DeleteJsLink(Site, String)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Site, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeleteJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 179
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nRemoves the custom action that triggers the execution of a javascript link\n"
  example: []
  syntax:
    content: public static bool DeleteJsLink(this Site site, string key)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be deleted
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteJsLink(site As Site, key As String) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  id: AddJsBlock(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: AddJsBlock(Web, String, String, Int32)
  nameWithType: JavaScriptExtensions.AddJsBlock(Web, String, String, Int32)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Web, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddJsBlock
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 220
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nInjects javascript via a adding a custom action to the site\n"
  example: []
  syntax:
    content: public static bool AddJsBlock(this Web web, string key, string scriptBlock, int sequence = 0)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Site to be processed - can be root web or sub site
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    - id: scriptBlock
      type: System.String
      description: Javascript to be injected
    - id: sequence
      type: System.Int32
      description: Specifies the ordering priority for actions. A value is 0 indicates that the button will appear at the first position on the ribbon.
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsBlock(web As Web, key As String, scriptBlock As String, sequence As Integer = 0) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  id: AddJsBlock(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: AddJsBlock(Site, String, String, Int32)
  nameWithType: JavaScriptExtensions.AddJsBlock(Site, String, String, Int32)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Site, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddJsBlock
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 234
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nInjects javascript via a adding a custom action to the site\n"
  example: []
  syntax:
    content: public static bool AddJsBlock(this Site site, string key, string scriptBlock, int sequence = 0)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    - id: scriptBlock
      type: System.String
      description: Javascript to be injected
    - id: sequence
      type: System.Int32
      description: Specifies the ordering priority for actions. A value is 0 indicates that the button will appear at the first position on the ribbon.
    return:
      type: System.Boolean
      description: True if action was ok
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsBlock(site As Site, key As String, scriptBlock As String, sequence As Integer = 0) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Web,System.String)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Web,System.String)
  id: ExistsJsLink(Microsoft.SharePoint.Client.Web,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: ExistsJsLink(Web, String)
  nameWithType: JavaScriptExtensions.ExistsJsLink(Web, String)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Web, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExistsJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 273
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if the target web already has a custom JsLink with a specified key\n"
  example: []
  syntax:
    content: public static bool ExistsJsLink(this Web web, string key)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to be processed
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExistsJsLink(web As Web, key As String) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Site,System.String)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Site,System.String)
  id: ExistsJsLink(Microsoft.SharePoint.Client.Site,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: ExistsJsLink(Site, String)
  nameWithType: JavaScriptExtensions.ExistsJsLink(Site, String)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink(Microsoft.SharePoint.Client.Site, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExistsJsLink
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 284
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if the target site already has a custom JsLink with a specified key\n"
  example: []
  syntax:
    content: public static bool ExistsJsLink(this Site site, string key)
    parameters:
    - id: site
      type: Microsoft.SharePoint.Client.Site
      description: Site to be processed
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    return:
      type: System.Boolean
      description: True if custom JsLink exists, false otherwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExistsJsLink(site As Site, key As String) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation(Microsoft.SharePoint.Client.ClientObject,System.String)
  commentId: M:Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation(Microsoft.SharePoint.Client.ClientObject,System.String)
  id: ExistsJsLinkImplementation(Microsoft.SharePoint.Client.ClientObject,System.String)
  parent: Microsoft.SharePoint.Client.JavaScriptExtensions
  langs:
  - csharp
  - vb
  name: ExistsJsLinkImplementation(ClientObject, String)
  nameWithType: JavaScriptExtensions.ExistsJsLinkImplementation(ClientObject, String)
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation(Microsoft.SharePoint.Client.ClientObject, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExistsJsLinkImplementation
    path: ../src/lib/PnP.Framework/Extensions/JavaScriptExtensions.cs
    startLine: 295
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if the given clientObject already has a custom JsLink with a specified key\n"
  example: []
  syntax:
    content: public static bool ExistsJsLinkImplementation(ClientObject clientObject, string key)
    parameters:
    - id: clientObject
      type: Microsoft.SharePoint.Client.ClientObject
      description: clientObject to operate on
    - id: key
      type: System.String
      description: Identifier (key) for the custom action that will be created
    return:
      type: System.Boolean
      description: True if custom JsLink exists, false otherwise
    content.vb: Public Shared Function ExistsJsLinkImplementation(clientObject As ClientObject, key As String) As Boolean
  overload: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink*
  commentId: Overload:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink
  name: AddJsLink
  nameWithType: JavaScriptExtensions.AddJsLink
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink
- uid: Microsoft.SharePoint.Client.Web
  commentId: T:Microsoft.SharePoint.Client.Web
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: Web
  nameWithType: Web
  fullName: Microsoft.SharePoint.Client.Web
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SharePoint.Client.Site
  commentId: T:Microsoft.SharePoint.Client.Site
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: Site
  nameWithType: Site
  fullName: Microsoft.SharePoint.Client.Site
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink*
  commentId: Overload:Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink
  name: DeleteJsLink
  nameWithType: JavaScriptExtensions.DeleteJsLink
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock*
  commentId: Overload:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock
  name: AddJsBlock
  nameWithType: JavaScriptExtensions.AddJsBlock
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink*
  commentId: Overload:Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink
  name: ExistsJsLink
  nameWithType: JavaScriptExtensions.ExistsJsLink
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLink
- uid: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation*
  commentId: Overload:Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation
  name: ExistsJsLinkImplementation
  nameWithType: JavaScriptExtensions.ExistsJsLinkImplementation
  fullName: Microsoft.SharePoint.Client.JavaScriptExtensions.ExistsJsLinkImplementation
- uid: Microsoft.SharePoint.Client.ClientObject
  commentId: T:Microsoft.SharePoint.Client.ClientObject
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientObject
  nameWithType: ClientObject
  fullName: Microsoft.SharePoint.Client.ClientObject

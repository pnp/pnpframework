### YamlMime:ManagedReference
items:
- uid: Microsoft.SharePoint.Client.ListItemExtensions
  commentId: T:Microsoft.SharePoint.Client.ListItemExtensions
  id: ListItemExtensions
  parent: Microsoft.SharePoint.Client
  children:
  - Microsoft.SharePoint.Client.ListItemExtensions.Audiences(Microsoft.SharePoint.Client.ListItem)
  - Microsoft.SharePoint.Client.ListItemExtensions.FieldExists(Microsoft.SharePoint.Client.ListItem,System.String)
  - Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed(Microsoft.SharePoint.Client.ListItem,System.String)
  - Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs``1(Microsoft.SharePoint.Client.ListItem,System.String)
  - Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy(Microsoft.SharePoint.Client.ListItem)
  - Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime(Microsoft.SharePoint.Client.ListItem)
  - Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime(Microsoft.SharePoint.Client.ListItem)
  - Microsoft.SharePoint.Client.ListItemExtensions.PageLayout(Microsoft.SharePoint.Client.ListItem)
  - Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile(Microsoft.SharePoint.Client.ListItem)
  - Microsoft.SharePoint.Client.ListItemExtensions.PageType(Microsoft.SharePoint.Client.ListItem)
  - Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation)
  - Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation,System.String)
  - Microsoft.SharePoint.Client.ListItemExtensions.WebParts(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.PageTransformation)
  langs:
  - csharp
  - vb
  name: ListItemExtensions
  nameWithType: ListItemExtensions
  fullName: Microsoft.SharePoint.Client.ListItemExtensions
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ListItemExtensions
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nExtension methods for the ListItem object\n"
  example: []
  syntax:
    content: public static class ListItemExtensions
    content.vb: Public Module ListItemExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.SharePoint.Client.ListItemExtensions.PageType(Microsoft.SharePoint.Client.ListItem)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.PageType(Microsoft.SharePoint.Client.ListItem)
  id: PageType(Microsoft.SharePoint.Client.ListItem)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: PageType(ListItem)
  nameWithType: ListItemExtensions.PageType(ListItem)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.PageType(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PageType
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 23
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nDetermines the type of page\n"
  example: []
  syntax:
    content: public static string PageType(this ListItem item)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    return:
      type: System.String
      description: Type of page
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PageType(item As ListItem) As String
  overload: Microsoft.SharePoint.Client.ListItemExtensions.PageType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.WebParts(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.PageTransformation)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.WebParts(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.PageTransformation)
  id: WebParts(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.PageTransformation)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: WebParts(ListItem, PageTransformation)
  nameWithType: ListItemExtensions.WebParts(ListItem, PageTransformation)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.WebParts(Microsoft.SharePoint.Client.ListItem, PnP.Framework.Modernization.PageTransformation)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: WebParts
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 75
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the web part information from the page\n"
  example: []
  syntax:
    content: public static Tuple<PageLayout, List<WebPartEntity>> WebParts(this ListItem item, PageTransformation pageTransformation)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    - id: pageTransformation
      type: PnP.Framework.Modernization.PageTransformation
      description: PageTransformation model loaded from XML
    return:
      type: System.Tuple{PnP.Framework.Modernization.Pages.PageLayout,System.Collections.Generic.List{PnP.Framework.Modernization.Entities.WebPartEntity}}
      description: Page layout + collection of web parts on the page
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WebParts(item As ListItem, pageTransformation As PageTransformation) As Tuple(Of PageLayout, List(Of WebPartEntity))
  overload: Microsoft.SharePoint.Client.ListItemExtensions.WebParts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime(Microsoft.SharePoint.Client.ListItem)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime(Microsoft.SharePoint.Client.ListItem)
  id: LastModifiedDateTime(Microsoft.SharePoint.Client.ListItem)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: LastModifiedDateTime(ListItem)
  nameWithType: ListItemExtensions.LastModifiedDateTime(ListItem)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LastModifiedDateTime
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 102
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the page last modified date time\n"
  example: []
  syntax:
    content: public static DateTime LastModifiedDateTime(this ListItem item)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    return:
      type: System.DateTime
      description: DateTime of the last modification
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LastModifiedDateTime(item As ListItem) As Date
  overload: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy(Microsoft.SharePoint.Client.ListItem)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy(Microsoft.SharePoint.Client.ListItem)
  id: LastModifiedBy(Microsoft.SharePoint.Client.ListItem)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: LastModifiedBy(ListItem)
  nameWithType: ListItemExtensions.LastModifiedBy(ListItem)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LastModifiedBy
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 121
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the page last modified by\n"
  example: []
  syntax:
    content: public static string LastModifiedBy(this ListItem item)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    return:
      type: System.String
      description: Last modified by user/account
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LastModifiedBy(item As ListItem) As String
  overload: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime(Microsoft.SharePoint.Client.ListItem)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime(Microsoft.SharePoint.Client.ListItem)
  id: LastPublishedDateTime(Microsoft.SharePoint.Client.ListItem)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: LastPublishedDateTime(ListItem)
  nameWithType: ListItemExtensions.LastPublishedDateTime(ListItem)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LastPublishedDateTime
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 143
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the blog last published date time\n"
  example: []
  syntax:
    content: public static DateTime LastPublishedDateTime(this ListItem item)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    return:
      type: System.DateTime
      description: DateTime of the last modification
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LastPublishedDateTime(item As ListItem) As Date
  overload: Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile(Microsoft.SharePoint.Client.ListItem)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile(Microsoft.SharePoint.Client.ListItem)
  id: PageLayoutFile(Microsoft.SharePoint.Client.ListItem)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: PageLayoutFile(ListItem)
  nameWithType: ListItemExtensions.PageLayoutFile(ListItem)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PageLayoutFile
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 164
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the page page layout file\n"
  example: []
  syntax:
    content: public static string PageLayoutFile(this ListItem item)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    return:
      type: System.String
      description: Page layout file defined for this page
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PageLayoutFile(item As ListItem) As String
  overload: Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.PageLayout(Microsoft.SharePoint.Client.ListItem)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.PageLayout(Microsoft.SharePoint.Client.ListItem)
  id: PageLayout(Microsoft.SharePoint.Client.ListItem)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: PageLayout(ListItem)
  nameWithType: ListItemExtensions.PageLayout(ListItem)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.PageLayout(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PageLayout
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 184
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the page page layout\n"
  example: []
  syntax:
    content: public static string PageLayout(this ListItem item)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    return:
      type: System.String
      description: Page layout defined for this page
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PageLayout(item As ListItem) As String
  overload: Microsoft.SharePoint.Client.ListItemExtensions.PageLayout*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.Audiences(Microsoft.SharePoint.Client.ListItem)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.Audiences(Microsoft.SharePoint.Client.ListItem)
  id: Audiences(Microsoft.SharePoint.Client.ListItem)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: Audiences(ListItem)
  nameWithType: ListItemExtensions.Audiences(ListItem)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.Audiences(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Audiences
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 207
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the page audience(s)\n"
  example: []
  syntax:
    content: public static AudienceEntity Audiences(this ListItem item)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: Page list item
    return:
      type: PnP.Framework.Modernization.Entities.AudienceEntity
      description: Page layout defined for this page
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Audiences(item As ListItem) As AudienceEntity
  overload: Microsoft.SharePoint.Client.ListItemExtensions.Audiences*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs``1(Microsoft.SharePoint.Client.ListItem,System.String)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs``1(Microsoft.SharePoint.Client.ListItem,System.String)
  id: GetFieldValueAs``1(Microsoft.SharePoint.Client.ListItem,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: GetFieldValueAs<T>(ListItem, String)
  nameWithType: ListItemExtensions.GetFieldValueAs<T>(ListItem, String)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs<T>(Microsoft.SharePoint.Client.ListItem, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFieldValueAs
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 235
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nGets the field value (if the field exists and a value is set) in the given type\n"
  example: []
  syntax:
    content: public static T GetFieldValueAs<T>(this ListItem item, string fieldName)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: List item to get the field from
    - id: fieldName
      type: System.String
      description: Name of the field to get the value from
    typeParameters:
    - id: T
      description: Type to get the fieldValue in
    return:
      type: '{T}'
      description: Value of the field in the requested type or null if unable to cast
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFieldValueAs(Of T)(item As ListItem, fieldName As String) As T
  overload: Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs*
  nameWithType.vb: ListItemExtensions.GetFieldValueAs(Of T)(ListItem, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs(Of T)(Microsoft.SharePoint.Client.ListItem, System.String)
  name.vb: GetFieldValueAs(Of T)(ListItem, String)
- uid: Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation)
  id: Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: Transform(ListItem, PageTransformationInformation)
  nameWithType: ListItemExtensions.Transform(ListItem, PageTransformationInformation)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem, PnP.Framework.Modernization.Transform.PageTransformationInformation)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Transform
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 265
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nTransforms a classic wiki/webpart page into a modern page, using the default page transformation model (webpartmapping.xml)\n"
  example: []
  syntax:
    content: public static void Transform(this ListItem sourcePage, PageTransformationInformation pageTransformationInformation)
    parameters:
    - id: sourcePage
      type: Microsoft.SharePoint.Client.ListItem
      description: ListItem for the classic wiki/webpart page
    - id: pageTransformationInformation
      type: PnP.Framework.Modernization.Transform.PageTransformationInformation
      description: Information to drive the page transformation process
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Transform(sourcePage As ListItem, pageTransformationInformation As PageTransformationInformation)
  overload: Microsoft.SharePoint.Client.ListItemExtensions.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation,System.String)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation,System.String)
  id: Transform(Microsoft.SharePoint.Client.ListItem,PnP.Framework.Modernization.Transform.PageTransformationInformation,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: Transform(ListItem, PageTransformationInformation, String)
  nameWithType: ListItemExtensions.Transform(ListItem, PageTransformationInformation, String)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem, PnP.Framework.Modernization.Transform.PageTransformationInformation, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Transform
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 277
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nTransforms a classic wiki/webpart page into a modern page using a custom transformation model\n"
  example: []
  syntax:
    content: public static void Transform(this ListItem sourcePage, PageTransformationInformation pageTransformationInformation, string pageTransformationFile)
    parameters:
    - id: sourcePage
      type: Microsoft.SharePoint.Client.ListItem
      description: ListItem for the classic wiki/webpart page
    - id: pageTransformationInformation
      type: PnP.Framework.Modernization.Transform.PageTransformationInformation
      description: Information to drive the page transformation process
    - id: pageTransformationFile
      type: System.String
      description: Page transformation model to be used
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Transform(sourcePage As ListItem, pageTransformationInformation As PageTransformationInformation, pageTransformationFile As String)
  overload: Microsoft.SharePoint.Client.ListItemExtensions.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed(Microsoft.SharePoint.Client.ListItem,System.String)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed(Microsoft.SharePoint.Client.ListItem,System.String)
  id: FieldExistsAndUsed(Microsoft.SharePoint.Client.ListItem,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: FieldExistsAndUsed(ListItem, String)
  nameWithType: ListItemExtensions.FieldExistsAndUsed(ListItem, String)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed(Microsoft.SharePoint.Client.ListItem, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FieldExistsAndUsed
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 291
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if a listitem contains a field with a value\n"
  example: []
  syntax:
    content: public static bool FieldExistsAndUsed(this ListItem item, string fieldName)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: List item to check
    - id: fieldName
      type: System.String
      description: Name of the field to check
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FieldExistsAndUsed(item As ListItem, fieldName As String) As Boolean
  overload: Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SharePoint.Client.ListItemExtensions.FieldExists(Microsoft.SharePoint.Client.ListItem,System.String)
  commentId: M:Microsoft.SharePoint.Client.ListItemExtensions.FieldExists(Microsoft.SharePoint.Client.ListItem,System.String)
  id: FieldExists(Microsoft.SharePoint.Client.ListItem,System.String)
  isExtensionMethod: true
  parent: Microsoft.SharePoint.Client.ListItemExtensions
  langs:
  - csharp
  - vb
  name: FieldExists(ListItem, String)
  nameWithType: ListItemExtensions.FieldExists(ListItem, String)
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.FieldExists(Microsoft.SharePoint.Client.ListItem, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FieldExists
    path: ../src/lib/PnP.Framework/Modernization/Extensions/ListItemExtensions.cs
    startLine: 302
  assemblies:
  - PnP.Framework
  namespace: Microsoft.SharePoint.Client
  summary: "\nChecks if a listitem contains a field\n"
  example: []
  syntax:
    content: public static bool FieldExists(this ListItem item, string fieldName)
    parameters:
    - id: item
      type: Microsoft.SharePoint.Client.ListItem
      description: List item to check
    - id: fieldName
      type: System.String
      description: Name of the field to check
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FieldExists(item As ListItem, fieldName As String) As Boolean
  overload: Microsoft.SharePoint.Client.ListItemExtensions.FieldExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SharePoint.Client.ListItemExtensions.PageType*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.PageType
  name: PageType
  nameWithType: ListItemExtensions.PageType
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.PageType
- uid: Microsoft.SharePoint.Client.ListItem
  commentId: T:Microsoft.SharePoint.Client.ListItem
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ListItem
  nameWithType: ListItem
  fullName: Microsoft.SharePoint.Client.ListItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SharePoint.Client.ListItemExtensions.WebParts*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.WebParts
  name: WebParts
  nameWithType: ListItemExtensions.WebParts
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.WebParts
- uid: PnP.Framework.Modernization.PageTransformation
  commentId: T:PnP.Framework.Modernization.PageTransformation
  parent: PnP.Framework.Modernization
  name: PageTransformation
  nameWithType: PageTransformation
  fullName: PnP.Framework.Modernization.PageTransformation
- uid: System.Tuple{PnP.Framework.Modernization.Pages.PageLayout,System.Collections.Generic.List{PnP.Framework.Modernization.Entities.WebPartEntity}}
  commentId: T:System.Tuple{PnP.Framework.Modernization.Pages.PageLayout,System.Collections.Generic.List{PnP.Framework.Modernization.Entities.WebPartEntity}}
  parent: System
  definition: System.Tuple`2
  name: Tuple<PageLayout, List<WebPartEntity>>
  nameWithType: Tuple<PageLayout, List<WebPartEntity>>
  fullName: System.Tuple<PnP.Framework.Modernization.Pages.PageLayout, System.Collections.Generic.List<PnP.Framework.Modernization.Entities.WebPartEntity>>
  nameWithType.vb: Tuple(Of PageLayout, List(Of WebPartEntity))
  fullName.vb: System.Tuple(Of PnP.Framework.Modernization.Pages.PageLayout, System.Collections.Generic.List(Of PnP.Framework.Modernization.Entities.WebPartEntity))
  name.vb: Tuple(Of PageLayout, List(Of WebPartEntity))
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Pages.PageLayout
    name: PageLayout
    nameWithType: PageLayout
    fullName: PnP.Framework.Modernization.Pages.PageLayout
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Entities.WebPartEntity
    name: WebPartEntity
    nameWithType: WebPartEntity
    fullName: PnP.Framework.Modernization.Entities.WebPartEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Pages.PageLayout
    name: PageLayout
    nameWithType: PageLayout
    fullName: PnP.Framework.Modernization.Pages.PageLayout
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Entities.WebPartEntity
    name: WebPartEntity
    nameWithType: WebPartEntity
    fullName: PnP.Framework.Modernization.Entities.WebPartEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization
  commentId: N:PnP.Framework.Modernization
  name: PnP.Framework.Modernization
  nameWithType: PnP.Framework.Modernization
  fullName: PnP.Framework.Modernization
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime
  name: LastModifiedDateTime
  nameWithType: ListItemExtensions.LastModifiedDateTime
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy
  name: LastModifiedBy
  nameWithType: ListItemExtensions.LastModifiedBy
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy
- uid: Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime
  name: LastPublishedDateTime
  nameWithType: ListItemExtensions.LastPublishedDateTime
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime
- uid: Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile
  name: PageLayoutFile
  nameWithType: ListItemExtensions.PageLayoutFile
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile
- uid: Microsoft.SharePoint.Client.ListItemExtensions.PageLayout*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.PageLayout
  name: PageLayout
  nameWithType: ListItemExtensions.PageLayout
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.PageLayout
- uid: Microsoft.SharePoint.Client.ListItemExtensions.Audiences*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.Audiences
  name: Audiences
  nameWithType: ListItemExtensions.Audiences
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.Audiences
- uid: PnP.Framework.Modernization.Entities.AudienceEntity
  commentId: T:PnP.Framework.Modernization.Entities.AudienceEntity
  parent: PnP.Framework.Modernization.Entities
  name: AudienceEntity
  nameWithType: AudienceEntity
  fullName: PnP.Framework.Modernization.Entities.AudienceEntity
- uid: PnP.Framework.Modernization.Entities
  commentId: N:PnP.Framework.Modernization.Entities
  name: PnP.Framework.Modernization.Entities
  nameWithType: PnP.Framework.Modernization.Entities
  fullName: PnP.Framework.Modernization.Entities
- uid: Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs
  name: GetFieldValueAs
  nameWithType: ListItemExtensions.GetFieldValueAs
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.SharePoint.Client.ListItemExtensions.Transform*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.Transform
  name: Transform
  nameWithType: ListItemExtensions.Transform
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.Transform
- uid: PnP.Framework.Modernization.Transform.PageTransformationInformation
  commentId: T:PnP.Framework.Modernization.Transform.PageTransformationInformation
  parent: PnP.Framework.Modernization.Transform
  name: PageTransformationInformation
  nameWithType: PageTransformationInformation
  fullName: PnP.Framework.Modernization.Transform.PageTransformationInformation
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed
  name: FieldExistsAndUsed
  nameWithType: ListItemExtensions.FieldExistsAndUsed
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SharePoint.Client.ListItemExtensions.FieldExists*
  commentId: Overload:Microsoft.SharePoint.Client.ListItemExtensions.FieldExists
  name: FieldExists
  nameWithType: ListItemExtensions.FieldExists
  fullName: Microsoft.SharePoint.Client.ListItemExtensions.FieldExists

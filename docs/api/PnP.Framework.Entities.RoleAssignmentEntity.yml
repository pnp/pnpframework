### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Entities.RoleAssignmentEntity
  commentId: T:PnP.Framework.Entities.RoleAssignmentEntity
  id: RoleAssignmentEntity
  parent: PnP.Framework.Entities
  children:
  - PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate
  - PnP.Framework.Entities.RoleAssignmentEntity.Path
  - PnP.Framework.Entities.RoleAssignmentEntity.Permissions
  - PnP.Framework.Entities.RoleAssignmentEntity.Role
  - PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings
  - PnP.Framework.Entities.RoleAssignmentEntity.Tag
  - PnP.Framework.Entities.RoleAssignmentEntity.ToString
  - PnP.Framework.Entities.RoleAssignmentEntity.User
  - PnP.Framework.Entities.RoleAssignmentEntity.UserEmail
  - PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName
  - PnP.Framework.Entities.RoleAssignmentEntity.UserTitle
  langs:
  - csharp
  - vb
  name: RoleAssignmentEntity
  nameWithType: RoleAssignmentEntity
  fullName: PnP.Framework.Entities.RoleAssignmentEntity
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RoleAssignmentEntity
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 8
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nDefines the role assignments for a user or group.\n"
  example: []
  syntax:
    content: public class RoleAssignmentEntity
    content.vb: Public Class RoleAssignmentEntity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - PnP.Framework.Entities.RoleAssignmentEntity.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Entities.RoleAssignmentEntity.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Entities.RoleAssignmentEntity,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Path
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.Path
  id: Path
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: RoleAssignmentEntity.Path
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Path
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Path
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nPath\n"
  example: []
  syntax:
    content: public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: PnP.Framework.Entities.RoleAssignmentEntity.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.User
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.User
  id: User
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: User
  nameWithType: RoleAssignmentEntity.User
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.User
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: User
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nUser entity\n"
  example: []
  syntax:
    content: public UserEntity User { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Entities.UserEntity
    content.vb: Public Property User As UserEntity
  overload: PnP.Framework.Entities.RoleAssignmentEntity.User*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.UserTitle
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.UserTitle
  id: UserTitle
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: UserTitle
  nameWithType: RoleAssignmentEntity.UserTitle
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.UserTitle
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UserTitle
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 31
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nUser Title\n"
  example: []
  syntax:
    content: public string UserTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserTitle As String
  overload: PnP.Framework.Entities.RoleAssignmentEntity.UserTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName
  id: UserLoginName
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: UserLoginName
  nameWithType: RoleAssignmentEntity.UserLoginName
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UserLoginName
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 45
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nUser login name\n"
  example: []
  syntax:
    content: public string UserLoginName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserLoginName As String
  overload: PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.UserEmail
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.UserEmail
  id: UserEmail
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: UserEmail
  nameWithType: RoleAssignmentEntity.UserEmail
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.UserEmail
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UserEmail
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nUser email\n"
  example: []
  syntax:
    content: public string UserEmail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserEmail As String
  overload: PnP.Framework.Entities.RoleAssignmentEntity.UserEmail*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Role
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.Role
  id: Role
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: RoleAssignmentEntity.Role
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Role
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Role
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 73
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nUser role\n"
  example: []
  syntax:
    content: public string Role { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Role As String
  overload: PnP.Framework.Entities.RoleAssignmentEntity.Role*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings
  id: RoleDefinitionBindings
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: RoleDefinitionBindings
  nameWithType: RoleAssignmentEntity.RoleDefinitionBindings
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RoleDefinitionBindings
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 82
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nGets the collection of role definition bindings for the role assignment\n"
  example: []
  syntax:
    content: public ICollection<string> RoleDefinitionBindings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public Property RoleDefinitionBindings As ICollection(Of String)
  overload: PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Permissions
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.Permissions
  id: Permissions
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: RoleAssignmentEntity.Permissions
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Permissions
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Permissions
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 91
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nuser permissions\n"
  example: []
  syntax:
    content: public string Permissions { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Permissions As String
  overload: PnP.Framework.Entities.RoleAssignmentEntity.Permissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Tag
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.Tag
  id: Tag
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: RoleAssignmentEntity.Tag
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Tag
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Tag
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 105
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nTag for the user\n"
  example: []
  syntax:
    content: public string Tag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Tag As String
  overload: PnP.Framework.Entities.RoleAssignmentEntity.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate
  commentId: P:PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate
  id: CreatedDate
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: RoleAssignmentEntity.CreatedDate
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CreatedDate
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 114
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nDateTime value of RoleAssignment created\n"
  example: []
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Entities.RoleAssignmentEntity.ToString
  commentId: M:PnP.Framework.Entities.RoleAssignmentEntity.ToString
  id: ToString
  parent: PnP.Framework.Entities.RoleAssignmentEntity
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RoleAssignmentEntity.ToString()
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.ToString()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToString
    path: ../src/lib/PnP.Framework/Entities/RoleAssignmentEntity.cs
    startLine: 124
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Entities
  summary: "\nReturns a string that represents the current object\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: PnP.Framework.Entities.RoleAssignmentEntity.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: PnP.Framework.Entities
  commentId: N:PnP.Framework.Entities
  name: PnP.Framework.Entities
  nameWithType: PnP.Framework.Entities
  fullName: PnP.Framework.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Entities.RoleAssignmentEntity.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<RoleAssignmentEntity>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<RoleAssignmentEntity>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Entities.RoleAssignmentEntity>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of RoleAssignmentEntity)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Entities.RoleAssignmentEntity)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of RoleAssignmentEntity)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<RoleAssignmentEntity>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<RoleAssignmentEntity>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Entities.RoleAssignmentEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of RoleAssignmentEntity)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of RoleAssignmentEntity)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Entities.RoleAssignmentEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Entities.RoleAssignmentEntity.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Entities.RoleAssignmentEntity,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<RoleAssignmentEntity, T>(Expression<Func<RoleAssignmentEntity, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<RoleAssignmentEntity, T>(Expression<Func<RoleAssignmentEntity, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Entities.RoleAssignmentEntity, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Entities.RoleAssignmentEntity, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of RoleAssignmentEntity, T)(Expression(Of Func(Of RoleAssignmentEntity, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Entities.RoleAssignmentEntity, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Entities.RoleAssignmentEntity, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of RoleAssignmentEntity, T)(Expression(Of Func(Of RoleAssignmentEntity, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<RoleAssignmentEntity, T>
    nameWithType: ObjectExtensions.Set<RoleAssignmentEntity, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Entities.RoleAssignmentEntity, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Entities.RoleAssignmentEntity
    name: RoleAssignmentEntity
    nameWithType: RoleAssignmentEntity
    fullName: PnP.Framework.Entities.RoleAssignmentEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of RoleAssignmentEntity, T)
    nameWithType: ObjectExtensions.Set(Of RoleAssignmentEntity, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Entities.RoleAssignmentEntity, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Entities.RoleAssignmentEntity
    name: RoleAssignmentEntity
    nameWithType: RoleAssignmentEntity
    fullName: PnP.Framework.Entities.RoleAssignmentEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Path*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.Path
  name: Path
  nameWithType: RoleAssignmentEntity.Path
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Entities.RoleAssignmentEntity.User*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.User
  name: User
  nameWithType: RoleAssignmentEntity.User
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.User
- uid: PnP.Framework.Entities.UserEntity
  commentId: T:PnP.Framework.Entities.UserEntity
  parent: PnP.Framework.Entities
  name: UserEntity
  nameWithType: UserEntity
  fullName: PnP.Framework.Entities.UserEntity
- uid: PnP.Framework.Entities.RoleAssignmentEntity.UserTitle*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.UserTitle
  name: UserTitle
  nameWithType: RoleAssignmentEntity.UserTitle
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.UserTitle
- uid: PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName
  name: UserLoginName
  nameWithType: RoleAssignmentEntity.UserLoginName
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.UserLoginName
- uid: PnP.Framework.Entities.RoleAssignmentEntity.UserEmail*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.UserEmail
  name: UserEmail
  nameWithType: RoleAssignmentEntity.UserEmail
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.UserEmail
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Role*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.Role
  name: Role
  nameWithType: RoleAssignmentEntity.Role
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Role
- uid: PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings
  name: RoleDefinitionBindings
  nameWithType: RoleAssignmentEntity.RoleDefinitionBindings
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.RoleDefinitionBindings
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Permissions*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.Permissions
  name: Permissions
  nameWithType: RoleAssignmentEntity.Permissions
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Permissions
- uid: PnP.Framework.Entities.RoleAssignmentEntity.Tag*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.Tag
  name: Tag
  nameWithType: RoleAssignmentEntity.Tag
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.Tag
- uid: PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate
  name: CreatedDate
  nameWithType: RoleAssignmentEntity.CreatedDate
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Entities.RoleAssignmentEntity.ToString*
  commentId: Overload:PnP.Framework.Entities.RoleAssignmentEntity.ToString
  name: ToString
  nameWithType: RoleAssignmentEntity.ToString
  fullName: PnP.Framework.Entities.RoleAssignmentEntity.ToString

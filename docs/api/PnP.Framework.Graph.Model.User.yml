### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Graph.Model.User
  commentId: T:PnP.Framework.Graph.Model.User
  id: User
  parent: PnP.Framework.Graph.Model
  children:
  - PnP.Framework.Graph.Model.User.AccountEnabled
  - PnP.Framework.Graph.Model.User.AdditionalProperties
  - PnP.Framework.Graph.Model.User.BusinessPhones
  - PnP.Framework.Graph.Model.User.DisplayName
  - PnP.Framework.Graph.Model.User.GivenName
  - PnP.Framework.Graph.Model.User.Id
  - PnP.Framework.Graph.Model.User.JobTitle
  - PnP.Framework.Graph.Model.User.Mail
  - PnP.Framework.Graph.Model.User.MobilePhone
  - PnP.Framework.Graph.Model.User.OfficeLocation
  - PnP.Framework.Graph.Model.User.PreferredLanguage
  - PnP.Framework.Graph.Model.User.Surname
  - PnP.Framework.Graph.Model.User.UserPrincipalName
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: PnP.Framework.Graph.Model.User
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: User
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nDefines a Microsoft Graph user\n"
  example: []
  syntax:
    content: public class User
    content.vb: Public Class User
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Graph.Model.User.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Graph.Model.User.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Graph.Model.User,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Graph.Model.User.BusinessPhones
  commentId: P:PnP.Framework.Graph.Model.User.BusinessPhones
  id: BusinessPhones
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: BusinessPhones
  nameWithType: User.BusinessPhones
  fullName: PnP.Framework.Graph.Model.User.BusinessPhones
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BusinessPhones
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nBusiness phone numbers for the user\n"
  example: []
  syntax:
    content: public IEnumerable<string> BusinessPhones { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Property BusinessPhones As IEnumerable(Of String)
  overload: PnP.Framework.Graph.Model.User.BusinessPhones*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.DisplayName
  commentId: P:PnP.Framework.Graph.Model.User.DisplayName
  id: DisplayName
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: User.DisplayName
  fullName: PnP.Framework.Graph.Model.User.DisplayName
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DisplayName
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 19
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nDisplay name for the user\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: PnP.Framework.Graph.Model.User.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.GivenName
  commentId: P:PnP.Framework.Graph.Model.User.GivenName
  id: GivenName
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: GivenName
  nameWithType: User.GivenName
  fullName: PnP.Framework.Graph.Model.User.GivenName
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GivenName
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nGiven name of the user\n"
  example: []
  syntax:
    content: public string GivenName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GivenName As String
  overload: PnP.Framework.Graph.Model.User.GivenName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.JobTitle
  commentId: P:PnP.Framework.Graph.Model.User.JobTitle
  id: JobTitle
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: JobTitle
  nameWithType: User.JobTitle
  fullName: PnP.Framework.Graph.Model.User.JobTitle
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: JobTitle
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 29
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nJob title of the user\n"
  example: []
  syntax:
    content: public string JobTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property JobTitle As String
  overload: PnP.Framework.Graph.Model.User.JobTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.Mail
  commentId: P:PnP.Framework.Graph.Model.User.Mail
  id: Mail
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: Mail
  nameWithType: User.Mail
  fullName: PnP.Framework.Graph.Model.User.Mail
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Mail
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 34
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nPrimary e-mail address of the user\n"
  example: []
  syntax:
    content: public string Mail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Mail As String
  overload: PnP.Framework.Graph.Model.User.Mail*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.MobilePhone
  commentId: P:PnP.Framework.Graph.Model.User.MobilePhone
  id: MobilePhone
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: MobilePhone
  nameWithType: User.MobilePhone
  fullName: PnP.Framework.Graph.Model.User.MobilePhone
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MobilePhone
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 39
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nMobile phone number of the user\n"
  example: []
  syntax:
    content: public string MobilePhone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MobilePhone As String
  overload: PnP.Framework.Graph.Model.User.MobilePhone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.OfficeLocation
  commentId: P:PnP.Framework.Graph.Model.User.OfficeLocation
  id: OfficeLocation
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: OfficeLocation
  nameWithType: User.OfficeLocation
  fullName: PnP.Framework.Graph.Model.User.OfficeLocation
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: OfficeLocation
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 44
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nOffice location of the user\n"
  example: []
  syntax:
    content: public string OfficeLocation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OfficeLocation As String
  overload: PnP.Framework.Graph.Model.User.OfficeLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.PreferredLanguage
  commentId: P:PnP.Framework.Graph.Model.User.PreferredLanguage
  id: PreferredLanguage
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: PreferredLanguage
  nameWithType: User.PreferredLanguage
  fullName: PnP.Framework.Graph.Model.User.PreferredLanguage
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PreferredLanguage
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 49
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nPreferred language of the user\n"
  example: []
  syntax:
    content: public string PreferredLanguage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PreferredLanguage As String
  overload: PnP.Framework.Graph.Model.User.PreferredLanguage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.Surname
  commentId: P:PnP.Framework.Graph.Model.User.Surname
  id: Surname
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: Surname
  nameWithType: User.Surname
  fullName: PnP.Framework.Graph.Model.User.Surname
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Surname
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 54
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nSurname of the user\n"
  example: []
  syntax:
    content: public string Surname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Surname As String
  overload: PnP.Framework.Graph.Model.User.Surname*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.UserPrincipalName
  commentId: P:PnP.Framework.Graph.Model.User.UserPrincipalName
  id: UserPrincipalName
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: UserPrincipalName
  nameWithType: User.UserPrincipalName
  fullName: PnP.Framework.Graph.Model.User.UserPrincipalName
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UserPrincipalName
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nUser Principal Name (UPN) of the user\n"
  example: []
  syntax:
    content: public string UserPrincipalName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserPrincipalName As String
  overload: PnP.Framework.Graph.Model.User.UserPrincipalName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.Id
  commentId: P:PnP.Framework.Graph.Model.User.Id
  id: Id
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: User.Id
  fullName: PnP.Framework.Graph.Model.User.Id
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Id
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 64
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nUnique identifier of the user\n"
  example: []
  syntax:
    content: public Guid? Id { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public Property Id As Guid?
  overload: PnP.Framework.Graph.Model.User.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.AccountEnabled
  commentId: P:PnP.Framework.Graph.Model.User.AccountEnabled
  id: AccountEnabled
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: AccountEnabled
  nameWithType: User.AccountEnabled
  fullName: PnP.Framework.Graph.Model.User.AccountEnabled
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AccountEnabled
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 69
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nIndicates if the account is currently enabled\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("accountEnabled", NullValueHandling = NullValueHandling.Ignore)]

      public bool? AccountEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("accountEnabled", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property AccountEnabled As Boolean?
  overload: PnP.Framework.Graph.Model.User.AccountEnabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accountEnabled
    namedArguments:
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Graph.Model.User.AdditionalProperties
  commentId: P:PnP.Framework.Graph.Model.User.AdditionalProperties
  id: AdditionalProperties
  parent: PnP.Framework.Graph.Model.User
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: User.AdditionalProperties
  fullName: PnP.Framework.Graph.Model.User.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Graph/Model/User.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AdditionalProperties
    path: ../src/lib/PnP.Framework/Graph/Model/User.cs
    startLine: 75
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Graph.Model
  summary: "\nAdditional properties requested regarding the user and included in the response\n"
  example: []
  syntax:
    content: public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: PnP.Framework.Graph.Model.User.AdditionalProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Graph.Model
  commentId: N:PnP.Framework.Graph.Model
  name: PnP.Framework.Graph.Model
  nameWithType: PnP.Framework.Graph.Model
  fullName: PnP.Framework.Graph.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Graph.Model.User.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<User>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<User>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Graph.Model.User>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of User)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Graph.Model.User)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of User)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<User>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<User>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Graph.Model.User>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of User)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of User)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Graph.Model.User)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Graph.Model.User.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Graph.Model.User,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<User, T>(Expression<Func<User, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<User, T>(Expression<Func<User, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Graph.Model.User, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Graph.Model.User, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of User, T)(Expression(Of Func(Of User, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Graph.Model.User, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Graph.Model.User, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of User, T)(Expression(Of Func(Of User, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<User, T>
    nameWithType: ObjectExtensions.Set<User, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Graph.Model.User, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Graph.Model.User
    name: User
    nameWithType: User
    fullName: PnP.Framework.Graph.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of User, T)
    nameWithType: ObjectExtensions.Set(Of User, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Graph.Model.User, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Graph.Model.User
    name: User
    nameWithType: User
    fullName: PnP.Framework.Graph.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Graph.Model.User.BusinessPhones*
  commentId: Overload:PnP.Framework.Graph.Model.User.BusinessPhones
  name: BusinessPhones
  nameWithType: User.BusinessPhones
  fullName: PnP.Framework.Graph.Model.User.BusinessPhones
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Graph.Model.User.DisplayName*
  commentId: Overload:PnP.Framework.Graph.Model.User.DisplayName
  name: DisplayName
  nameWithType: User.DisplayName
  fullName: PnP.Framework.Graph.Model.User.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Graph.Model.User.GivenName*
  commentId: Overload:PnP.Framework.Graph.Model.User.GivenName
  name: GivenName
  nameWithType: User.GivenName
  fullName: PnP.Framework.Graph.Model.User.GivenName
- uid: PnP.Framework.Graph.Model.User.JobTitle*
  commentId: Overload:PnP.Framework.Graph.Model.User.JobTitle
  name: JobTitle
  nameWithType: User.JobTitle
  fullName: PnP.Framework.Graph.Model.User.JobTitle
- uid: PnP.Framework.Graph.Model.User.Mail*
  commentId: Overload:PnP.Framework.Graph.Model.User.Mail
  name: Mail
  nameWithType: User.Mail
  fullName: PnP.Framework.Graph.Model.User.Mail
- uid: PnP.Framework.Graph.Model.User.MobilePhone*
  commentId: Overload:PnP.Framework.Graph.Model.User.MobilePhone
  name: MobilePhone
  nameWithType: User.MobilePhone
  fullName: PnP.Framework.Graph.Model.User.MobilePhone
- uid: PnP.Framework.Graph.Model.User.OfficeLocation*
  commentId: Overload:PnP.Framework.Graph.Model.User.OfficeLocation
  name: OfficeLocation
  nameWithType: User.OfficeLocation
  fullName: PnP.Framework.Graph.Model.User.OfficeLocation
- uid: PnP.Framework.Graph.Model.User.PreferredLanguage*
  commentId: Overload:PnP.Framework.Graph.Model.User.PreferredLanguage
  name: PreferredLanguage
  nameWithType: User.PreferredLanguage
  fullName: PnP.Framework.Graph.Model.User.PreferredLanguage
- uid: PnP.Framework.Graph.Model.User.Surname*
  commentId: Overload:PnP.Framework.Graph.Model.User.Surname
  name: Surname
  nameWithType: User.Surname
  fullName: PnP.Framework.Graph.Model.User.Surname
- uid: PnP.Framework.Graph.Model.User.UserPrincipalName*
  commentId: Overload:PnP.Framework.Graph.Model.User.UserPrincipalName
  name: UserPrincipalName
  nameWithType: User.UserPrincipalName
  fullName: PnP.Framework.Graph.Model.User.UserPrincipalName
- uid: PnP.Framework.Graph.Model.User.Id*
  commentId: Overload:PnP.Framework.Graph.Model.User.Id
  name: Id
  nameWithType: User.Id
  fullName: PnP.Framework.Graph.Model.User.Id
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Graph.Model.User.AccountEnabled*
  commentId: Overload:PnP.Framework.Graph.Model.User.AccountEnabled
  name: AccountEnabled
  nameWithType: User.AccountEnabled
  fullName: PnP.Framework.Graph.Model.User.AccountEnabled
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Graph.Model.User.AdditionalProperties*
  commentId: Overload:PnP.Framework.Graph.Model.User.AdditionalProperties
  name: AdditionalProperties
  nameWithType: User.AdditionalProperties
  fullName: PnP.Framework.Graph.Model.User.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )

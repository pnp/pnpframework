### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Cache.CacheManager
  commentId: T:PnP.Framework.Modernization.Cache.CacheManager
  id: CacheManager
  parent: PnP.Framework.Modernization.Cache
  children:
  - PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity(PnP.Framework.Modernization.Entities.AssetTransferredEntity)
  - PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser(System.String,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches
  - PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate
  - PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents
  - PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy
  - PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings
  - PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions
  - PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId(System.Uri)
  - PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred
  - PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate(Microsoft.SharePoint.Client.Web)
  - PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName(Microsoft.SharePoint.Client.ClientContext)
  - PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId(Microsoft.SharePoint.Client.List,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser(Microsoft.SharePoint.Client.ClientContext,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion(System.Uri)
  - PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator
  - PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers
  - PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping(Microsoft.SharePoint.Client.ListItem)
  - PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField(Microsoft.SharePoint.Client.List,System.String,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName(Microsoft.SharePoint.Client.ClientContext)
  - PnP.Framework.Modernization.Cache.CacheManager.GetResourceString(Microsoft.SharePoint.Client.ClientContext,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion(System.Uri)
  - PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  - PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  - PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  - PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName(Microsoft.SharePoint.Client.ClientContext,System.String,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  - PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  - PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.Int32)
  - PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  - PnP.Framework.Modernization.Cache.CacheManager.Instance
  - PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb(System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb(System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId(System.Guid,System.Uri)
  - PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb(System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion(System.Uri,System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator(PnP.Framework.Modernization.Transform.BasePageTransformator)
  - PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb(System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion(System.Uri,PnP.Framework.Modernization.Transform.SPVersion)
  - PnP.Framework.Modernization.Cache.CacheManager.Store
  - PnP.Framework.Modernization.Cache.CacheManager.StoreOptions
  - PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: CacheManager
  nameWithType: CacheManager
  fullName: PnP.Framework.Modernization.Cache.CacheManager
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CacheManager
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nCaching manager, singleton\nImportant: don&apos;t cache SharePoint Client objects as these are tied to a specific client context and hence will fail when there&apos;s context switching!\n"
  example: []
  syntax:
    content: public sealed class CacheManager
    content.vb: Public NotInheritable Class CacheManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Cache.CacheManager.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Cache.CacheManager.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Cache.CacheManager,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: PnP.Framework.Modernization.Cache.CacheManager.Instance
  commentId: P:PnP.Framework.Modernization.Cache.CacheManager.Instance
  id: Instance
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CacheManager.Instance
  fullName: PnP.Framework.Modernization.Cache.CacheManager.Instance
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Instance
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 64
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGets the single cachemanager instance, singleton pattern\n"
  example: []
  syntax:
    content: public static CacheManager Instance { get; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Cache.CacheManager
    content.vb: Public Shared ReadOnly Property Instance As CacheManager
  overload: PnP.Framework.Modernization.Cache.CacheManager.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PnP.Framework.Modernization.Cache.CacheManager.Store
  commentId: P:PnP.Framework.Modernization.Cache.CacheManager.Store
  id: Store
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: Store
  nameWithType: CacheManager.Store
  fullName: PnP.Framework.Modernization.Cache.CacheManager.Store
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Store
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 86
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  syntax:
    content: public IDistributedCache Store { get; set; }
    parameters: []
    return:
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
    content.vb: Public Property Store As IDistributedCache
  overload: PnP.Framework.Modernization.Cache.CacheManager.Store*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.StoreOptions
  commentId: P:PnP.Framework.Modernization.Cache.CacheManager.StoreOptions
  id: StoreOptions
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: StoreOptions
  nameWithType: CacheManager.StoreOptions
  fullName: PnP.Framework.Modernization.Cache.CacheManager.StoreOptions
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: StoreOptions
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 87
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  syntax:
    content: public ICacheOptions StoreOptions { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Cache.ICacheOptions
    content.vb: Public Property StoreOptions As ICacheOptions
  overload: PnP.Framework.Modernization.Cache.CacheManager.StoreOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion(System.Uri)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion(System.Uri)
  id: GetSharePointVersion(System.Uri)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetSharePointVersion(Uri)
  nameWithType: CacheManager.GetSharePointVersion(Uri)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion(System.Uri)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetSharePointVersion
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 96
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGets the cached SharePoint version for a given site\n"
  example: []
  syntax:
    content: public SPVersion GetSharePointVersion(Uri site)
    parameters:
    - id: site
      type: System.Uri
      description: Site to get the SharePoint version for
    return:
      type: PnP.Framework.Modernization.Transform.SPVersion
      description: Found SharePoint version or &quot;Unknown&quot; if not found in cache
    content.vb: Public Function GetSharePointVersion(site As Uri) As SPVersion
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion(System.Uri,PnP.Framework.Modernization.Transform.SPVersion)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion(System.Uri,PnP.Framework.Modernization.Transform.SPVersion)
  id: SetSharePointVersion(System.Uri,PnP.Framework.Modernization.Transform.SPVersion)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: SetSharePointVersion(Uri, SPVersion)
  nameWithType: CacheManager.SetSharePointVersion(Uri, SPVersion)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion(System.Uri, PnP.Framework.Modernization.Transform.SPVersion)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetSharePointVersion
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 112
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nSets the SharePoint version in cache\n"
  example: []
  syntax:
    content: public void SetSharePointVersion(Uri site, SPVersion version)
    parameters:
    - id: site
      type: System.Uri
      description: Site to the set the SharePoint version for
    - id: version
      type: PnP.Framework.Modernization.Transform.SPVersion
      description: SharePoint version of the site
    content.vb: Public Sub SetSharePointVersion(site As Uri, version As SPVersion)
  overload: PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion(System.Uri)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion(System.Uri)
  id: GetExactSharePointVersion(System.Uri)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetExactSharePointVersion(Uri)
  nameWithType: CacheManager.GetExactSharePointVersion(Uri)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion(System.Uri)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetExactSharePointVersion
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 127
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGets the exact SharePoint version from cache\n"
  example: []
  syntax:
    content: public string GetExactSharePointVersion(Uri site)
    parameters:
    - id: site
      type: System.Uri
      description: Site to get the exact version for
    return:
      type: System.String
      description: Exact version from cache
    content.vb: Public Function GetExactSharePointVersion(site As Uri) As String
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion(System.Uri,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion(System.Uri,System.String)
  id: SetExactSharePointVersion(System.Uri,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: SetExactSharePointVersion(Uri, String)
  nameWithType: CacheManager.SetExactSharePointVersion(Uri, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetExactSharePointVersion
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 143
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nAdds exact SharePoint version for a given site to cache\n"
  example: []
  syntax:
    content: public void SetExactSharePointVersion(Uri site, string version)
    parameters:
    - id: site
      type: System.Uri
      description: Site to add the SharePoint version for to cache
    - id: version
      type: System.String
      description: Version to add
    content.vb: Public Sub SetExactSharePointVersion(site As Uri, version As String)
  overload: PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId(System.Uri)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId(System.Uri)
  id: GetAADTenantId(System.Uri)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetAADTenantId(Uri)
  nameWithType: CacheManager.GetAADTenantId(Uri)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId(System.Uri)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetAADTenantId
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 158
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nReturns the used AzureAD tenant id\n"
  example: []
  syntax:
    content: public Guid GetAADTenantId(Uri site)
    parameters:
    - id: site
      type: System.Uri
      description: Url of the site
    return:
      type: System.Guid
      description: Azure AD tenant id
    content.vb: Public Function GetAADTenantId(site As Uri) As Guid
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId(System.Guid,System.Uri)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId(System.Guid,System.Uri)
  id: SetAADTenantId(System.Guid,System.Uri)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: SetAADTenantId(Guid, Uri)
  nameWithType: CacheManager.SetAADTenantId(Guid, Uri)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId(System.Guid, System.Uri)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetAADTenantId
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 177
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nSets the Azure AD tenant Id in cache\n"
  example: []
  syntax:
    content: public void SetAADTenantId(Guid tenantId, Uri site)
    parameters:
    - id: tenantId
      type: System.Guid
      description: Tenant Id
    - id: site
      type: System.Uri
      description: Site url
    content.vb: Public Sub SetAADTenantId(tenantId As Guid, site As Uri)
  overload: PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred
  id: GetAssetsTransferred
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetAssetsTransferred()
  nameWithType: CacheManager.GetAssetsTransferred()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetAssetsTransferred
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 190
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  syntax:
    content: public List<AssetTransferredEntity> GetAssetsTransferred()
    return:
      type: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.AssetTransferredEntity}
    content.vb: Public Function GetAssetsTransferred As List(Of AssetTransferredEntity)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity(PnP.Framework.Modernization.Entities.AssetTransferredEntity)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity(PnP.Framework.Modernization.Entities.AssetTransferredEntity)
  id: AddAssetTransferredEntity(PnP.Framework.Modernization.Entities.AssetTransferredEntity)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: AddAssetTransferredEntity(AssetTransferredEntity)
  nameWithType: CacheManager.AddAssetTransferredEntity(AssetTransferredEntity)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity(PnP.Framework.Modernization.Entities.AssetTransferredEntity)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddAssetTransferredEntity
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 195
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  syntax:
    content: public void AddAssetTransferredEntity(AssetTransferredEntity asset)
    parameters:
    - id: asset
      type: PnP.Framework.Modernization.Entities.AssetTransferredEntity
    content.vb: Public Sub AddAssetTransferredEntity(asset As AssetTransferredEntity)
  overload: PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents
  id: ClearClientSideComponents
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: ClearClientSideComponents()
  nameWithType: CacheManager.ClearClientSideComponents()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearClientSideComponents
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 270
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nClear the clientside component cache\n"
  example: []
  syntax:
    content: public void ClearClientSideComponents()
    content.vb: Public Sub ClearClientSideComponents
  overload: PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate(Microsoft.SharePoint.Client.Web)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate(Microsoft.SharePoint.Client.Web)
  id: GetBaseTemplate(Microsoft.SharePoint.Client.Web)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetBaseTemplate(Web)
  nameWithType: CacheManager.GetBaseTemplate(Web)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate(Microsoft.SharePoint.Client.Web)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetBaseTemplate
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 283
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGets the base template that will be used to filter out &quot;OOB&quot; fields\n"
  example: []
  syntax:
    content: public ProvisioningTemplate GetBaseTemplate(Web web)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: web to operate against
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning template of the base template of STS#0
    content.vb: Public Function GetBaseTemplate(web As Web) As ProvisioningTemplate
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate
  id: ClearBaseTemplate
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: ClearBaseTemplate()
  nameWithType: CacheManager.ClearBaseTemplate()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearBaseTemplate
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 313
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nClear base template cache\n"
  example: []
  syntax:
    content: public void ClearBaseTemplate()
    content.vb: Public Sub ClearBaseTemplate
  overload: PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)
  id: GetFieldsToCopy(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetFieldsToCopy(Web, List, String)
  nameWithType: CacheManager.GetFieldsToCopy(Web, List, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy(Microsoft.SharePoint.Client.Web, Microsoft.SharePoint.Client.List, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFieldsToCopy
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 325
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGet the list of fields that need to be copied from cache. If cache is empty the list will be calculated\n"
  example: []
  syntax:
    content: public List<FieldData> GetFieldsToCopy(Web web, List sourceLibrary, string pageType)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: Web to operate against
    - id: sourceLibrary
      type: Microsoft.SharePoint.Client.List
      description: Pages library instance
    - id: pageType
      type: System.String
      description: Type of page
    return:
      type: System.Collections.Generic.List{PnP.Framework.Modernization.Cache.FieldData}
      description: List of fields that need to be copied
    content.vb: Public Function GetFieldsToCopy(web As Web, sourceLibrary As List, pageType As String) As List(Of FieldData)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField(Microsoft.SharePoint.Client.List,System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField(Microsoft.SharePoint.Client.List,System.String,System.String)
  id: GetPublishingContentTypeField(Microsoft.SharePoint.Client.List,System.String,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetPublishingContentTypeField(List, String, String)
  nameWithType: CacheManager.GetPublishingContentTypeField(List, String, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField(Microsoft.SharePoint.Client.List, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetPublishingContentTypeField
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 391
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGet field information of a content type field\n"
  example: []
  syntax:
    content: public FieldData GetPublishingContentTypeField(List pagesLibrary, string contentTypeId, string fieldName)
    parameters:
    - id: pagesLibrary
      type: Microsoft.SharePoint.Client.List
      description: Pages library list
    - id: contentTypeId
      type: System.String
      description: ID of the content type
    - id: fieldName
      type: System.String
      description: Name of the field to get information from
    return:
      type: PnP.Framework.Modernization.Cache.FieldData
      description: FieldData object holding field information
    content.vb: Public Function GetPublishingContentTypeField(pagesLibrary As List, contentTypeId As String, fieldName As String) As FieldData
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy
  id: ClearFieldsToCopy
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: ClearFieldsToCopy()
  nameWithType: CacheManager.ClearFieldsToCopy()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearFieldsToCopy
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 454
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nClear the fields to copy cache\n"
  example: []
  syntax:
    content: public void ClearFieldsToCopy()
    content.vb: Public Sub ClearFieldsToCopy
  overload: PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb(System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb(System.String)
  id: SetPublishingWeb(System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: SetPublishingWeb(String)
  nameWithType: CacheManager.SetPublishingWeb(String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetPublishingWeb
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 467
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nMarks this web as a publishing web\n"
  example: []
  syntax:
    content: public void SetPublishingWeb(string webUrl)
    parameters:
    - id: webUrl
      type: System.String
      description: Url of the web
    content.vb: Public Sub SetPublishingWeb(webUrl As String)
  overload: PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb(System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb(System.String)
  id: SetBlogWeb(System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: SetBlogWeb(String)
  nameWithType: CacheManager.SetBlogWeb(String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetBlogWeb
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 482
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nMarks this web as a blog web\n"
  example: []
  syntax:
    content: public void SetBlogWeb(string webUrl)
    parameters:
    - id: webUrl
      type: System.String
      description: Url of the web
    content.vb: Public Sub SetBlogWeb(webUrl As String)
  overload: PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb(System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb(System.String)
  id: IsPublishingWeb(System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: IsPublishingWeb(String)
  nameWithType: CacheManager.IsPublishingWeb(String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsPublishingWeb
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 497
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nChecks if this is publishing web\n"
  example: []
  syntax:
    content: public bool IsPublishingWeb(string webUrl)
    parameters:
    - id: webUrl
      type: System.String
      description: Web url to check
    return:
      type: System.Boolean
      description: True if publishing, false otherwise
    content.vb: Public Function IsPublishingWeb(webUrl As String) As Boolean
  overload: PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb(System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb(System.String)
  id: IsBlogWeb(System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: IsBlogWeb(String)
  nameWithType: CacheManager.IsBlogWeb(String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsBlogWeb
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 519
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nChecks if this is blog web\n"
  example: []
  syntax:
    content: public bool IsBlogWeb(string webUrl)
    parameters:
    - id: webUrl
      type: System.String
      description: Web url to check
    return:
      type: System.Boolean
      description: True if blog, false otherwise
    content.vb: Public Function IsBlogWeb(webUrl As String) As Boolean
  overload: PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName(Microsoft.SharePoint.Client.ClientContext)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName(Microsoft.SharePoint.Client.ClientContext)
  id: GetPublishingPagesLibraryName(Microsoft.SharePoint.Client.ClientContext)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetPublishingPagesLibraryName(ClientContext)
  nameWithType: CacheManager.GetPublishingPagesLibraryName(ClientContext)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName(Microsoft.SharePoint.Client.ClientContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetPublishingPagesLibraryName
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 543
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGet translation for the publishing pages library\n"
  example: []
  syntax:
    content: public string GetPublishingPagesLibraryName(ClientContext context)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: Context of the site
    return:
      type: System.String
      description: Translated name of the pages library
    content.vb: Public Function GetPublishingPagesLibraryName(context As ClientContext) As String
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName(Microsoft.SharePoint.Client.ClientContext)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName(Microsoft.SharePoint.Client.ClientContext)
  id: GetBlogListName(Microsoft.SharePoint.Client.ClientContext)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetBlogListName(ClientContext)
  nameWithType: CacheManager.GetBlogListName(ClientContext)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName(Microsoft.SharePoint.Client.ClientContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetBlogListName
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 626
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGet translation for the blog list name\n"
  example: []
  syntax:
    content: public string GetBlogListName(ClientContext context)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: Context of the site
    return:
      type: System.String
      description: Translated name of the blog list
    content.vb: Public Function GetBlogListName(context As ClientContext) As String
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetResourceString(Microsoft.SharePoint.Client.ClientContext,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetResourceString(Microsoft.SharePoint.Client.ClientContext,System.String)
  id: GetResourceString(Microsoft.SharePoint.Client.ClientContext,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetResourceString(ClientContext, String)
  nameWithType: CacheManager.GetResourceString(ClientContext, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetResourceString(Microsoft.SharePoint.Client.ClientContext, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetResourceString
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 686
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nReturns the translated value for a resource string\n"
  example: []
  syntax:
    content: public string GetResourceString(ClientContext context, string resource)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: Context of the site
    - id: resource
      type: System.String
      description: 'Key of the resource (e.g. $Resources:core,ScriptEditorWebPartDescription;) '
    return:
      type: System.String
      description: Translated string
    content.vb: Public Function GetResourceString(context As ClientContext, resource As String) As String
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetResourceString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping(Microsoft.SharePoint.Client.ListItem)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping(Microsoft.SharePoint.Client.ListItem)
  id: GetPageLayoutMapping(Microsoft.SharePoint.Client.ListItem)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetPageLayoutMapping(ListItem)
  nameWithType: CacheManager.GetPageLayoutMapping(ListItem)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping(Microsoft.SharePoint.Client.ListItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetPageLayoutMapping
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 767
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGenerate pagelayout mapping file for given publishing page\n"
  example: []
  syntax:
    content: public PageLayout GetPageLayoutMapping(ListItem page)
    parameters:
    - id: page
      type: Microsoft.SharePoint.Client.ListItem
      description: Publishing page
    return:
      type: PnP.Framework.Modernization.Publishing.PageLayout
      description: Page layout mapping model
    content.vb: Public Function GetPageLayoutMapping(page As ListItem) As PageLayout
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches
  id: ClearAllCaches
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: ClearAllCaches()
  nameWithType: CacheManager.ClearAllCaches()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearAllCaches
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 797
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nClear all the caches\n"
  example: []
  syntax:
    content: public void ClearAllCaches()
    content.vb: Public Sub ClearAllCaches
  overload: PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions
  id: ClearSharePointVersions
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: ClearSharePointVersions()
  nameWithType: CacheManager.ClearSharePointVersions()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearSharePointVersions
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 817
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nClears Cached SharePoint versions\n"
  example: []
  syntax:
    content: public void ClearSharePointVersions()
    content.vb: Public Sub ClearSharePointVersions
  overload: PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings
  id: ClearGeneratedPageLayoutMappings
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: ClearGeneratedPageLayoutMappings()
  nameWithType: CacheManager.ClearGeneratedPageLayoutMappings()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearGeneratedPageLayoutMappings
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 825
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nClears the cache of generated page layout mappings\n"
  example: []
  syntax:
    content: public void ClearGeneratedPageLayoutMappings()
    content.vb: Public Sub ClearGeneratedPageLayoutMappings
  overload: PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers
  id: GetMappedUsers
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetMappedUsers()
  nameWithType: CacheManager.GetMappedUsers()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetMappedUsers
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 837
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nMapped users\n"
  example: []
  syntax:
    content: public Dictionary<string, string> GetMappedUsers()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: A dictionary of mapped users
    content.vb: Public Function GetMappedUsers As Dictionary(Of String, String)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser(System.String,System.String)
  id: AddMappedUser(System.String,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: AddMappedUser(String, String)
  nameWithType: CacheManager.AddMappedUser(String, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddMappedUser
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 848
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nAdds a user to the dictionary of mapped users\n"
  example: []
  syntax:
    content: public void AddMappedUser(string principal, string user)
    parameters:
    - id: principal
      type: System.String
      description: Principal to map
    - id: user
      type: System.String
      description: mapped user
    content.vb: Public Sub AddMappedUser(principal As String, user As String)
  overload: PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser(Microsoft.SharePoint.Client.ClientContext,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser(Microsoft.SharePoint.Client.ClientContext,System.String)
  id: GetEnsuredUser(Microsoft.SharePoint.Client.ClientContext,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetEnsuredUser(ClientContext, String)
  nameWithType: CacheManager.GetEnsuredUser(ClientContext, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser(Microsoft.SharePoint.Client.ClientContext, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetEnsuredUser
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 864
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nRun and cache the output value of EnsureUser for a given user\n"
  example: []
  syntax:
    content: public ResolvedUser GetEnsuredUser(ClientContext context, string userValue)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ClientContext to operate on
    - id: userValue
      type: System.String
      description: User name of user to ensure
    return:
      type: PnP.Framework.Modernization.Entities.ResolvedUser
      description: ResolvedUser instance holding information about the ensured user
    content.vb: Public Function GetEnsuredUser(context As ClientContext, userValue As String) As ResolvedUser
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.String)
  id: GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetUserFromUserList(ClientContext, String)
  nameWithType: CacheManager.GetUserFromUserList(ClientContext, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetUserFromUserList
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 937
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nLookup a user from the site&apos;s user list based upon the user&apos;s upn\n"
  example: []
  syntax:
    content: public UserEntity GetUserFromUserList(ClientContext context, string userUpn)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: Context of the web holding the user list
    - id: userUpn
      type: System.String
      description: Upn of the user to fetch
    return:
      type: PnP.Framework.Modernization.Entities.UserEntity
      description: A UserEntity instance holding information about the user
    content.vb: Public Function GetUserFromUserList(context As ClientContext, userUpn As String) As UserEntity
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.Int32)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.Int32)
  id: GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.Int32)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetUserFromUserList(ClientContext, Int32)
  nameWithType: CacheManager.GetUserFromUserList(ClientContext, Int32)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext, System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetUserFromUserList
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1051
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nLookup a user from the site&apos;s user list based upon the user&apos;s id\n"
  example: []
  syntax:
    content: public UserEntity GetUserFromUserList(ClientContext context, int userListId)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: Context of the web holding the user list
    - id: userListId
      type: System.Int32
      description: Id of the user to fetch
    return:
      type: PnP.Framework.Modernization.Entities.UserEntity
      description: A UserEntity instance holding information about the user
    content.vb: Public Function GetUserFromUserList(context As ClientContext, userListId As Integer) As UserEntity
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId(Microsoft.SharePoint.Client.List,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId(Microsoft.SharePoint.Client.List,System.String)
  id: GetContentTypeId(Microsoft.SharePoint.Client.List,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetContentTypeId(List, String)
  nameWithType: CacheManager.GetContentTypeId(List, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId(Microsoft.SharePoint.Client.List, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetContentTypeId
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1156
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGets the ID of a contenttype\n"
  example: []
  syntax:
    content: public string GetContentTypeId(List pagesLibrary, string contentTypeName)
    parameters:
    - id: pagesLibrary
      type: Microsoft.SharePoint.Client.List
      description: Pages library holding the content type
    - id: contentTypeName
      type: System.String
      description: Name of the content type
    return:
      type: System.String
      description: ID of the content type
    content.vb: Public Function GetContentTypeId(pagesLibrary As List, contentTypeName As String) As String
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  id: GetTermFromId(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetTermFromId(ClientContext, Guid)
  nameWithType: CacheManager.GetTermFromId(ClientContext, Guid)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId(Microsoft.SharePoint.Client.ClientContext, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTermFromId
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1199
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nReturn information for the given term\n"
  example: []
  syntax:
    content: public string GetTermFromId(ClientContext context, Guid termId)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ClientContext object to operate on
    - id: termId
      type: System.Guid
      description: Id of the term to lookup
    return:
      type: System.String
      description: Term label
    content.vb: Public Function GetTermFromId(context As ClientContext, termId As Guid) As String
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Boolean,System.Boolean)
  id: StoreTermSetTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Boolean,System.Boolean)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: StoreTermSetTerms(ClientContext, Guid, Guid, Boolean, Boolean)
  nameWithType: CacheManager.StoreTermSetTerms(ClientContext, Guid, Guid, Boolean, Boolean)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms(Microsoft.SharePoint.Client.ClientContext, System.Guid, System.Guid, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: StoreTermSetTerms
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1239
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGet Term Path by ID\n"
  example: []
  syntax:
    content: public void StoreTermSetTerms(ClientContext context, Guid termSetId, Guid sourceSspId, bool isSP2010, bool isSourceTerm)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: termSetId
      type: System.Guid
      description: ''
    - id: sourceSspId
      type: System.Guid
      description: ''
    - id: isSP2010
      type: System.Boolean
      description: ''
    - id: isSourceTerm
      type: System.Boolean
      description: ''
    content.vb: Public Sub StoreTermSetTerms(context As ClientContext, termSetId As Guid, sourceSspId As Guid, isSP2010 As Boolean, isSourceTerm As Boolean)
  overload: PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  id: GetTransformTermCacheTermById(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetTransformTermCacheTermById(ClientContext, Guid)
  nameWithType: CacheManager.GetTransformTermCacheTermById(ClientContext, Guid)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById(Microsoft.SharePoint.Client.ClientContext, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTransformTermCacheTermById
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1264
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGet Term from Term Cache\n"
  example: []
  syntax:
    content: public TermData GetTransformTermCacheTermById(ClientContext context, Guid termId)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: termId
      type: System.Guid
      description: ''
    return:
      type: PnP.Framework.Modernization.Entities.TermData
      description: ''
    content.vb: Public Function GetTransformTermCacheTermById(context As ClientContext, termId As Guid) As TermData
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName(Microsoft.SharePoint.Client.ClientContext,System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName(Microsoft.SharePoint.Client.ClientContext,System.String,System.String)
  id: GetTransformTermCacheTermByName(Microsoft.SharePoint.Client.ClientContext,System.String,System.String)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetTransformTermCacheTermByName(ClientContext, String, String)
  nameWithType: CacheManager.GetTransformTermCacheTermByName(ClientContext, String, String)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName(Microsoft.SharePoint.Client.ClientContext, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTransformTermCacheTermByName
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1283
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nSearch Cached term by name\n"
  example: []
  syntax:
    content: public List<TermData> GetTransformTermCacheTermByName(ClientContext context, string termLabel = "", string termPath = "")
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: termLabel
      type: System.String
      description: ''
    - id: termPath
      type: System.String
      description: ''
    return:
      type: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.TermData}
      description: ''
    content.vb: Public Function GetTransformTermCacheTermByName(context As ClientContext, termLabel As String = "", termPath As String = "") As List(Of TermData)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  id: GetTransformTermCacheTermsByTermSet(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetTransformTermCacheTermsByTermSet(ClientContext, Guid)
  nameWithType: CacheManager.GetTransformTermCacheTermsByTermSet(ClientContext, Guid)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet(Microsoft.SharePoint.Client.ClientContext, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTransformTermCacheTermsByTermSet
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1302
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGet Term by Term Set Id\n"
  example: []
  syntax:
    content: public Dictionary<Guid, TermData> GetTransformTermCacheTermsByTermSet(ClientContext context, Guid termSetId)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: termSetId
      type: System.Guid
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
      description: ''
    content.vb: Public Function GetTransformTermCacheTermsByTermSet(context As ClientContext, termSetId As Guid) As Dictionary(Of Guid, TermData)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator(PnP.Framework.Modernization.Transform.BasePageTransformator)
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator(PnP.Framework.Modernization.Transform.BasePageTransformator)
  id: SetLastUsedTransformator(PnP.Framework.Modernization.Transform.BasePageTransformator)
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: SetLastUsedTransformator(BasePageTransformator)
  nameWithType: CacheManager.SetLastUsedTransformator(BasePageTransformator)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator(PnP.Framework.Modernization.Transform.BasePageTransformator)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetLastUsedTransformator
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1324
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nCaches the last used page transformator instance, needed to postpone log writing when transforming multiple pages\n"
  example: []
  syntax:
    content: public void SetLastUsedTransformator(BasePageTransformator transformator)
    parameters:
    - id: transformator
      type: PnP.Framework.Modernization.Transform.BasePageTransformator
      description: ''
    content.vb: Public Sub SetLastUsedTransformator(transformator As BasePageTransformator)
  overload: PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator
  id: GetLastUsedTransformator
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetLastUsedTransformator()
  nameWithType: CacheManager.GetLastUsedTransformator()
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetLastUsedTransformator
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1333
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGets the last used page transformator instance\n"
  example: []
  syntax:
    content: public BasePageTransformator GetLastUsedTransformator()
    return:
      type: PnP.Framework.Modernization.Transform.BasePageTransformator
      description: ''
    content.vb: Public Function GetLastUsedTransformator As BasePageTransformator
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  id: GetUrlMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetUrlMapping(String, IList<ILogObserver>)
  nameWithType: CacheManager.GetUrlMapping(String, IList<ILogObserver>)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping(System.String, System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetUrlMapping
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1346
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nReturns a list of url mappings\n"
  example: []
  syntax:
    content: public List<UrlMapping> GetUrlMapping(string urlMappingFile, IList<ILogObserver> logObservers = null)
    parameters:
    - id: urlMappingFile
      type: System.String
      description: File with url mappings
    - id: logObservers
      type: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
      description: Attached list of log observers
    return:
      type: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.UrlMapping}
      description: List of url mappings
    content.vb: Public Function GetUrlMapping(urlMappingFile As String, logObservers As IList(Of ILogObserver) = Nothing) As List(Of UrlMapping)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping*
  nameWithType.vb: CacheManager.GetUrlMapping(String, IList(Of ILogObserver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping(System.String, System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver))
  name.vb: GetUrlMapping(String, IList(Of ILogObserver))
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  id: GetUserMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetUserMapping(String, IList<ILogObserver>)
  nameWithType: CacheManager.GetUserMapping(String, IList<ILogObserver>)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping(System.String, System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetUserMapping
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1369
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nGets the list of user mappings, if first time file will be laoded\n"
  example: []
  syntax:
    content: public List<UserMappingEntity> GetUserMapping(string userMappingFile, IList<ILogObserver> logObservers = null)
    parameters:
    - id: userMappingFile
      type: System.String
      description: File with the user mappings
    - id: logObservers
      type: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
      description: Attached list of log observers
    return:
      type: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.UserMappingEntity}
      description: List of user mappings
    content.vb: Public Function GetUserMapping(userMappingFile As String, logObservers As IList(Of ILogObserver) = Nothing) As List(Of UserMappingEntity)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping*
  nameWithType.vb: CacheManager.GetUserMapping(String, IList(Of ILogObserver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping(System.String, System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver))
  name.vb: GetUserMapping(String, IList(Of ILogObserver))
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  commentId: M:PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  id: GetTermMapping(System.String,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  parent: PnP.Framework.Modernization.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetTermMapping(String, IList<ILogObserver>)
  nameWithType: CacheManager.GetTermMapping(String, IList<ILogObserver>)
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping(System.String, System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTermMapping
    path: ../src/lib/PnP.Framework/Modernization/Cache/CacheManager.cs
    startLine: 1392
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Cache
  summary: "\nReturns a cached list of mapped items\n"
  example: []
  syntax:
    content: public List<TermMapping> GetTermMapping(string mappingFile, IList<ILogObserver> logObservers = null)
    parameters:
    - id: mappingFile
      type: System.String
      description: ''
    - id: logObservers
      type: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
      description: ''
    return:
      type: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.TermMapping}
      description: ''
    content.vb: Public Function GetTermMapping(mappingFile As String, logObservers As IList(Of ILogObserver) = Nothing) As List(Of TermMapping)
  overload: PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping*
  nameWithType.vb: CacheManager.GetTermMapping(String, IList(Of ILogObserver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping(System.String, System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver))
  name.vb: GetTermMapping(String, IList(Of ILogObserver))
references:
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<CacheManager>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<CacheManager>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Cache.CacheManager>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of CacheManager)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Cache.CacheManager)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of CacheManager)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<CacheManager>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<CacheManager>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Cache.CacheManager>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of CacheManager)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of CacheManager)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Cache.CacheManager)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Cache.CacheManager,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<CacheManager, T>(Expression<Func<CacheManager, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<CacheManager, T>(Expression<Func<CacheManager, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Cache.CacheManager, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Cache.CacheManager, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of CacheManager, T)(Expression(Of Func(Of CacheManager, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Cache.CacheManager, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Cache.CacheManager, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of CacheManager, T)(Expression(Of Func(Of CacheManager, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<CacheManager, T>
    nameWithType: ObjectExtensions.Set<CacheManager, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Cache.CacheManager, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Cache.CacheManager
    name: CacheManager
    nameWithType: CacheManager
    fullName: PnP.Framework.Modernization.Cache.CacheManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of CacheManager, T)
    nameWithType: ObjectExtensions.Set(Of CacheManager, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Cache.CacheManager, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Cache.CacheManager
    name: CacheManager
    nameWithType: CacheManager
    fullName: PnP.Framework.Modernization.Cache.CacheManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache.CacheManager.Instance*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.Instance
  name: Instance
  nameWithType: CacheManager.Instance
  fullName: PnP.Framework.Modernization.Cache.CacheManager.Instance
- uid: PnP.Framework.Modernization.Cache.CacheManager
  commentId: T:PnP.Framework.Modernization.Cache.CacheManager
  parent: PnP.Framework.Modernization.Cache
  name: CacheManager
  nameWithType: CacheManager
  fullName: PnP.Framework.Modernization.Cache.CacheManager
- uid: PnP.Framework.Modernization.Cache.CacheManager.Store*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.Store
  name: Store
  nameWithType: CacheManager.Store
  fullName: PnP.Framework.Modernization.Cache.CacheManager.Store
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  commentId: T:Microsoft.Extensions.Caching.Distributed.IDistributedCache
  parent: Microsoft.Extensions.Caching.Distributed
  isExternal: true
  name: IDistributedCache
  nameWithType: IDistributedCache
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache
- uid: Microsoft.Extensions.Caching.Distributed
  commentId: N:Microsoft.Extensions.Caching.Distributed
  isExternal: true
  name: Microsoft.Extensions.Caching.Distributed
  nameWithType: Microsoft.Extensions.Caching.Distributed
  fullName: Microsoft.Extensions.Caching.Distributed
- uid: PnP.Framework.Modernization.Cache.CacheManager.StoreOptions*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.StoreOptions
  name: StoreOptions
  nameWithType: CacheManager.StoreOptions
  fullName: PnP.Framework.Modernization.Cache.CacheManager.StoreOptions
- uid: PnP.Framework.Modernization.Cache.ICacheOptions
  commentId: T:PnP.Framework.Modernization.Cache.ICacheOptions
  parent: PnP.Framework.Modernization.Cache
  name: ICacheOptions
  nameWithType: ICacheOptions
  fullName: PnP.Framework.Modernization.Cache.ICacheOptions
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion
  name: GetSharePointVersion
  nameWithType: CacheManager.GetSharePointVersion
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetSharePointVersion
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: PnP.Framework.Modernization.Transform.SPVersion
  commentId: T:PnP.Framework.Modernization.Transform.SPVersion
  parent: PnP.Framework.Modernization.Transform
  name: SPVersion
  nameWithType: SPVersion
  fullName: PnP.Framework.Modernization.Transform.SPVersion
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion
  name: SetSharePointVersion
  nameWithType: CacheManager.SetSharePointVersion
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetSharePointVersion
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion
  name: GetExactSharePointVersion
  nameWithType: CacheManager.GetExactSharePointVersion
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetExactSharePointVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion
  name: SetExactSharePointVersion
  nameWithType: CacheManager.SetExactSharePointVersion
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetExactSharePointVersion
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId
  name: GetAADTenantId
  nameWithType: CacheManager.GetAADTenantId
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetAADTenantId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId
  name: SetAADTenantId
  nameWithType: CacheManager.SetAADTenantId
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetAADTenantId
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred
  name: GetAssetsTransferred
  nameWithType: CacheManager.GetAssetsTransferred
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetAssetsTransferred
- uid: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.AssetTransferredEntity}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Modernization.Entities.AssetTransferredEntity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AssetTransferredEntity>
  nameWithType: List<AssetTransferredEntity>
  fullName: System.Collections.Generic.List<PnP.Framework.Modernization.Entities.AssetTransferredEntity>
  nameWithType.vb: List(Of AssetTransferredEntity)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Modernization.Entities.AssetTransferredEntity)
  name.vb: List(Of AssetTransferredEntity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Entities.AssetTransferredEntity
    name: AssetTransferredEntity
    nameWithType: AssetTransferredEntity
    fullName: PnP.Framework.Modernization.Entities.AssetTransferredEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Entities.AssetTransferredEntity
    name: AssetTransferredEntity
    nameWithType: AssetTransferredEntity
    fullName: PnP.Framework.Modernization.Entities.AssetTransferredEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity
  name: AddAssetTransferredEntity
  nameWithType: CacheManager.AddAssetTransferredEntity
  fullName: PnP.Framework.Modernization.Cache.CacheManager.AddAssetTransferredEntity
- uid: PnP.Framework.Modernization.Entities.AssetTransferredEntity
  commentId: T:PnP.Framework.Modernization.Entities.AssetTransferredEntity
  parent: PnP.Framework.Modernization.Entities
  name: AssetTransferredEntity
  nameWithType: AssetTransferredEntity
  fullName: PnP.Framework.Modernization.Entities.AssetTransferredEntity
- uid: PnP.Framework.Modernization.Entities
  commentId: N:PnP.Framework.Modernization.Entities
  name: PnP.Framework.Modernization.Entities
  nameWithType: PnP.Framework.Modernization.Entities
  fullName: PnP.Framework.Modernization.Entities
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents
  name: ClearClientSideComponents
  nameWithType: CacheManager.ClearClientSideComponents
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearClientSideComponents
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate
  name: GetBaseTemplate
  nameWithType: CacheManager.GetBaseTemplate
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetBaseTemplate
- uid: Microsoft.SharePoint.Client.Web
  commentId: T:Microsoft.SharePoint.Client.Web
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: Web
  nameWithType: Web
  fullName: Microsoft.SharePoint.Client.Web
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate
  name: ClearBaseTemplate
  nameWithType: CacheManager.ClearBaseTemplate
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearBaseTemplate
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy
  name: GetFieldsToCopy
  nameWithType: CacheManager.GetFieldsToCopy
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetFieldsToCopy
- uid: Microsoft.SharePoint.Client.List
  commentId: T:Microsoft.SharePoint.Client.List
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: List
  nameWithType: List
  fullName: Microsoft.SharePoint.Client.List
- uid: System.Collections.Generic.List{PnP.Framework.Modernization.Cache.FieldData}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Modernization.Cache.FieldData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FieldData>
  nameWithType: List<FieldData>
  fullName: System.Collections.Generic.List<PnP.Framework.Modernization.Cache.FieldData>
  nameWithType.vb: List(Of FieldData)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Modernization.Cache.FieldData)
  name.vb: List(Of FieldData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Cache.FieldData
    name: FieldData
    nameWithType: FieldData
    fullName: PnP.Framework.Modernization.Cache.FieldData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Cache.FieldData
    name: FieldData
    nameWithType: FieldData
    fullName: PnP.Framework.Modernization.Cache.FieldData
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField
  name: GetPublishingContentTypeField
  nameWithType: CacheManager.GetPublishingContentTypeField
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingContentTypeField
- uid: PnP.Framework.Modernization.Cache.FieldData
  commentId: T:PnP.Framework.Modernization.Cache.FieldData
  parent: PnP.Framework.Modernization.Cache
  name: FieldData
  nameWithType: FieldData
  fullName: PnP.Framework.Modernization.Cache.FieldData
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy
  name: ClearFieldsToCopy
  nameWithType: CacheManager.ClearFieldsToCopy
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearFieldsToCopy
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb
  name: SetPublishingWeb
  nameWithType: CacheManager.SetPublishingWeb
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetPublishingWeb
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb
  name: SetBlogWeb
  nameWithType: CacheManager.SetBlogWeb
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetBlogWeb
- uid: PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb
  name: IsPublishingWeb
  nameWithType: CacheManager.IsPublishingWeb
  fullName: PnP.Framework.Modernization.Cache.CacheManager.IsPublishingWeb
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb
  name: IsBlogWeb
  nameWithType: CacheManager.IsBlogWeb
  fullName: PnP.Framework.Modernization.Cache.CacheManager.IsBlogWeb
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName
  name: GetPublishingPagesLibraryName
  nameWithType: CacheManager.GetPublishingPagesLibraryName
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetPublishingPagesLibraryName
- uid: Microsoft.SharePoint.Client.ClientContext
  commentId: T:Microsoft.SharePoint.Client.ClientContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientContext
  nameWithType: ClientContext
  fullName: Microsoft.SharePoint.Client.ClientContext
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName
  name: GetBlogListName
  nameWithType: CacheManager.GetBlogListName
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetBlogListName
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetResourceString*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetResourceString
  name: GetResourceString
  nameWithType: CacheManager.GetResourceString
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetResourceString
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping
  name: GetPageLayoutMapping
  nameWithType: CacheManager.GetPageLayoutMapping
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetPageLayoutMapping
- uid: Microsoft.SharePoint.Client.ListItem
  commentId: T:Microsoft.SharePoint.Client.ListItem
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ListItem
  nameWithType: ListItem
  fullName: Microsoft.SharePoint.Client.ListItem
- uid: PnP.Framework.Modernization.Publishing.PageLayout
  commentId: T:PnP.Framework.Modernization.Publishing.PageLayout
  parent: PnP.Framework.Modernization.Publishing
  name: PageLayout
  nameWithType: PageLayout
  fullName: PnP.Framework.Modernization.Publishing.PageLayout
- uid: PnP.Framework.Modernization.Publishing
  commentId: N:PnP.Framework.Modernization.Publishing
  name: PnP.Framework.Modernization.Publishing
  nameWithType: PnP.Framework.Modernization.Publishing
  fullName: PnP.Framework.Modernization.Publishing
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches
  name: ClearAllCaches
  nameWithType: CacheManager.ClearAllCaches
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearAllCaches
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions
  name: ClearSharePointVersions
  nameWithType: CacheManager.ClearSharePointVersions
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearSharePointVersions
- uid: PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings
  name: ClearGeneratedPageLayoutMappings
  nameWithType: CacheManager.ClearGeneratedPageLayoutMappings
  fullName: PnP.Framework.Modernization.Cache.CacheManager.ClearGeneratedPageLayoutMappings
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers
  name: GetMappedUsers
  nameWithType: CacheManager.GetMappedUsers
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetMappedUsers
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser
  name: AddMappedUser
  nameWithType: CacheManager.AddMappedUser
  fullName: PnP.Framework.Modernization.Cache.CacheManager.AddMappedUser
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser
  name: GetEnsuredUser
  nameWithType: CacheManager.GetEnsuredUser
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetEnsuredUser
- uid: PnP.Framework.Modernization.Entities.ResolvedUser
  commentId: T:PnP.Framework.Modernization.Entities.ResolvedUser
  parent: PnP.Framework.Modernization.Entities
  name: ResolvedUser
  nameWithType: ResolvedUser
  fullName: PnP.Framework.Modernization.Entities.ResolvedUser
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList
  name: GetUserFromUserList
  nameWithType: CacheManager.GetUserFromUserList
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetUserFromUserList
- uid: PnP.Framework.Modernization.Entities.UserEntity
  commentId: T:PnP.Framework.Modernization.Entities.UserEntity
  parent: PnP.Framework.Modernization.Entities
  name: UserEntity
  nameWithType: UserEntity
  fullName: PnP.Framework.Modernization.Entities.UserEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId
  name: GetContentTypeId
  nameWithType: CacheManager.GetContentTypeId
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetContentTypeId
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId
  name: GetTermFromId
  nameWithType: CacheManager.GetTermFromId
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTermFromId
- uid: PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms
  name: StoreTermSetTerms
  nameWithType: CacheManager.StoreTermSetTerms
  fullName: PnP.Framework.Modernization.Cache.CacheManager.StoreTermSetTerms
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById
  name: GetTransformTermCacheTermById
  nameWithType: CacheManager.GetTransformTermCacheTermById
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermById
- uid: PnP.Framework.Modernization.Entities.TermData
  commentId: T:PnP.Framework.Modernization.Entities.TermData
  parent: PnP.Framework.Modernization.Entities
  name: TermData
  nameWithType: TermData
  fullName: PnP.Framework.Modernization.Entities.TermData
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName
  name: GetTransformTermCacheTermByName
  nameWithType: CacheManager.GetTransformTermCacheTermByName
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermByName
- uid: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.TermData}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Modernization.Entities.TermData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TermData>
  nameWithType: List<TermData>
  fullName: System.Collections.Generic.List<PnP.Framework.Modernization.Entities.TermData>
  nameWithType.vb: List(Of TermData)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Modernization.Entities.TermData)
  name.vb: List(Of TermData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Entities.TermData
    name: TermData
    nameWithType: TermData
    fullName: PnP.Framework.Modernization.Entities.TermData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Entities.TermData
    name: TermData
    nameWithType: TermData
    fullName: PnP.Framework.Modernization.Entities.TermData
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet
  name: GetTransformTermCacheTermsByTermSet
  nameWithType: CacheManager.GetTransformTermCacheTermsByTermSet
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTransformTermCacheTermsByTermSet
- uid: System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
  commentId: T:System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Guid, TermData>
  nameWithType: Dictionary<Guid, TermData>
  fullName: System.Collections.Generic.Dictionary<System.Guid, PnP.Framework.Modernization.Entities.TermData>
  nameWithType.vb: Dictionary(Of Guid, TermData)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Guid, PnP.Framework.Modernization.Entities.TermData)
  name.vb: Dictionary(Of Guid, TermData)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Entities.TermData
    name: TermData
    nameWithType: TermData
    fullName: PnP.Framework.Modernization.Entities.TermData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Entities.TermData
    name: TermData
    nameWithType: TermData
    fullName: PnP.Framework.Modernization.Entities.TermData
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator
  name: SetLastUsedTransformator
  nameWithType: CacheManager.SetLastUsedTransformator
  fullName: PnP.Framework.Modernization.Cache.CacheManager.SetLastUsedTransformator
- uid: PnP.Framework.Modernization.Transform.BasePageTransformator
  commentId: T:PnP.Framework.Modernization.Transform.BasePageTransformator
  parent: PnP.Framework.Modernization.Transform
  name: BasePageTransformator
  nameWithType: BasePageTransformator
  fullName: PnP.Framework.Modernization.Transform.BasePageTransformator
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator
  name: GetLastUsedTransformator
  nameWithType: CacheManager.GetLastUsedTransformator
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetLastUsedTransformator
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping
  name: GetUrlMapping
  nameWithType: CacheManager.GetUrlMapping
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetUrlMapping
- uid: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  commentId: T:System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ILogObserver>
  nameWithType: IList<ILogObserver>
  fullName: System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>
  nameWithType.vb: IList(Of ILogObserver)
  fullName.vb: System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver)
  name.vb: IList(Of ILogObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.UrlMapping}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Modernization.Entities.UrlMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UrlMapping>
  nameWithType: List<UrlMapping>
  fullName: System.Collections.Generic.List<PnP.Framework.Modernization.Entities.UrlMapping>
  nameWithType.vb: List(Of UrlMapping)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Modernization.Entities.UrlMapping)
  name.vb: List(Of UrlMapping)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Entities.UrlMapping
    name: UrlMapping
    nameWithType: UrlMapping
    fullName: PnP.Framework.Modernization.Entities.UrlMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Entities.UrlMapping
    name: UrlMapping
    nameWithType: UrlMapping
    fullName: PnP.Framework.Modernization.Entities.UrlMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping
  name: GetUserMapping
  nameWithType: CacheManager.GetUserMapping
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetUserMapping
- uid: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.UserMappingEntity}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Modernization.Entities.UserMappingEntity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserMappingEntity>
  nameWithType: List<UserMappingEntity>
  fullName: System.Collections.Generic.List<PnP.Framework.Modernization.Entities.UserMappingEntity>
  nameWithType.vb: List(Of UserMappingEntity)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Modernization.Entities.UserMappingEntity)
  name.vb: List(Of UserMappingEntity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Entities.UserMappingEntity
    name: UserMappingEntity
    nameWithType: UserMappingEntity
    fullName: PnP.Framework.Modernization.Entities.UserMappingEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Entities.UserMappingEntity
    name: UserMappingEntity
    nameWithType: UserMappingEntity
    fullName: PnP.Framework.Modernization.Entities.UserMappingEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping*
  commentId: Overload:PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping
  name: GetTermMapping
  nameWithType: CacheManager.GetTermMapping
  fullName: PnP.Framework.Modernization.Cache.CacheManager.GetTermMapping
- uid: System.Collections.Generic.List{PnP.Framework.Modernization.Entities.TermMapping}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Modernization.Entities.TermMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TermMapping>
  nameWithType: List<TermMapping>
  fullName: System.Collections.Generic.List<PnP.Framework.Modernization.Entities.TermMapping>
  nameWithType.vb: List(Of TermMapping)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Modernization.Entities.TermMapping)
  name.vb: List(Of TermMapping)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Entities.TermMapping
    name: TermMapping
    nameWithType: TermMapping
    fullName: PnP.Framework.Modernization.Entities.TermMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Entities.TermMapping
    name: TermMapping
    nameWithType: TermMapping
    fullName: PnP.Framework.Modernization.Entities.TermMapping
  - name: )
    nameWithType: )
    fullName: )

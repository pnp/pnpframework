### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Pages.BasePage
  commentId: T:PnP.Framework.Modernization.Pages.BasePage
  id: BasePage
  parent: PnP.Framework.Modernization.Pages
  children:
  - PnP.Framework.Modernization.Pages.BasePage.#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.File,PnP.Framework.Modernization.PageTransformation,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  - PnP.Framework.Modernization.Pages.BasePage.cc
  - PnP.Framework.Modernization.Pages.BasePage.GetType(System.String)
  - PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)
  - PnP.Framework.Modernization.Pages.BasePage.page
  - PnP.Framework.Modernization.Pages.BasePage.pageFile
  - PnP.Framework.Modernization.Pages.BasePage.pageTransformation
  - PnP.Framework.Modernization.Pages.BasePage.Properties(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  langs:
  - csharp
  - vb
  name: BasePage
  nameWithType: BasePage
  fullName: PnP.Framework.Modernization.Pages.BasePage
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BasePage
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 26
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  summary: "\nBase class for the page analyzers\n"
  example: []
  syntax:
    content: 'public abstract class BasePage : BaseTransform'
    content.vb: >-
      Public MustInherit Class BasePage
          Inherits BaseTransform
  inheritance:
  - System.Object
  - PnP.Framework.Modernization.Transform.BaseTransform
  derivedClasses:
  - PnP.Framework.Modernization.Pages.PublishingPage
  - PnP.Framework.Modernization.Pages.WebPartPage
  - PnP.Framework.Modernization.Pages.WikiPage
  inheritedMembers:
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  - PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  - PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Pages.BasePage.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Pages.BasePage.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Pages.BasePage,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: PnP.Framework.Modernization.Pages.BasePage.page
  commentId: F:PnP.Framework.Modernization.Pages.BasePage.page
  id: page
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: page
  nameWithType: BasePage.page
  fullName: PnP.Framework.Modernization.Pages.BasePage.page
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: page
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  syntax:
    content: public ListItem page
    return:
      type: Microsoft.SharePoint.Client.ListItem
    content.vb: Public page As ListItem
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Pages.BasePage.pageFile
  commentId: F:PnP.Framework.Modernization.Pages.BasePage.pageFile
  id: pageFile
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: pageFile
  nameWithType: BasePage.pageFile
  fullName: PnP.Framework.Modernization.Pages.BasePage.pageFile
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: pageFile
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 47
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  syntax:
    content: public File pageFile
    return:
      type: Microsoft.SharePoint.Client.File
    content.vb: Public pageFile As File
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Pages.BasePage.cc
  commentId: F:PnP.Framework.Modernization.Pages.BasePage.cc
  id: cc
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: cc
  nameWithType: BasePage.cc
  fullName: PnP.Framework.Modernization.Pages.BasePage.cc
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: cc
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 48
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  syntax:
    content: public ClientContext cc
    return:
      type: Microsoft.SharePoint.Client.ClientContext
    content.vb: Public cc As ClientContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Pages.BasePage.pageTransformation
  commentId: F:PnP.Framework.Modernization.Pages.BasePage.pageTransformation
  id: pageTransformation
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: pageTransformation
  nameWithType: BasePage.pageTransformation
  fullName: PnP.Framework.Modernization.Pages.BasePage.pageTransformation
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: pageTransformation
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 49
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  syntax:
    content: public PageTransformation pageTransformation
    return:
      type: PnP.Framework.Modernization.PageTransformation
    content.vb: Public pageTransformation As PageTransformation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Pages.BasePage.#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.File,PnP.Framework.Modernization.PageTransformation,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  commentId: M:PnP.Framework.Modernization.Pages.BasePage.#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.File,PnP.Framework.Modernization.PageTransformation,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  id: '#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.File,PnP.Framework.Modernization.PageTransformation,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})'
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: BasePage(ListItem, File, PageTransformation, IList<ILogObserver>)
  nameWithType: BasePage.BasePage(ListItem, File, PageTransformation, IList<ILogObserver>)
  fullName: PnP.Framework.Modernization.Pages.BasePage.BasePage(Microsoft.SharePoint.Client.ListItem, Microsoft.SharePoint.Client.File, PnP.Framework.Modernization.PageTransformation, System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  summary: "\nConstructs the base page class instance\n"
  example: []
  syntax:
    content: public BasePage(ListItem page, File pageFile, PageTransformation pageTransformation, IList<ILogObserver> logObservers = null)
    parameters:
    - id: page
      type: Microsoft.SharePoint.Client.ListItem
      description: page ListItem
    - id: pageFile
      type: Microsoft.SharePoint.Client.File
      description: page File
    - id: pageTransformation
      type: PnP.Framework.Modernization.PageTransformation
      description: page transformation model to use for extraction or transformation
    - id: logObservers
      type: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
      description: ''
    content.vb: Public Sub New(page As ListItem, pageFile As File, pageTransformation As PageTransformation, logObservers As IList(Of ILogObserver) = Nothing)
  overload: PnP.Framework.Modernization.Pages.BasePage.#ctor*
  nameWithType.vb: BasePage.BasePage(ListItem, File, PageTransformation, IList(Of ILogObserver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Pages.BasePage.BasePage(Microsoft.SharePoint.Client.ListItem, Microsoft.SharePoint.Client.File, PnP.Framework.Modernization.PageTransformation, System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver))
  name.vb: BasePage(ListItem, File, PageTransformation, IList(Of ILogObserver))
- uid: PnP.Framework.Modernization.Pages.BasePage.GetType(System.String)
  commentId: M:PnP.Framework.Modernization.Pages.BasePage.GetType(System.String)
  id: GetType(System.String)
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: GetType(String)
  nameWithType: BasePage.GetType(String)
  fullName: PnP.Framework.Modernization.Pages.BasePage.GetType(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetType
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 94
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  summary: "\nGets the type of the web part\n"
  example: []
  syntax:
    content: public string GetType(string webPartXml)
    parameters:
    - id: webPartXml
      type: System.String
      description: Web part xml to analyze
    return:
      type: System.String
      description: Type of the web part as fully qualified name
    content.vb: Public Function GetType(webPartXml As String) As String
  overload: PnP.Framework.Modernization.Pages.BasePage.GetType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)
  commentId: M:PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)
  id: GetTypeFromProperties(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: GetTypeFromProperties(Dictionary<String, Object>, Boolean)
  nameWithType: BasePage.GetTypeFromProperties(Dictionary<String, Object>, Boolean)
  fullName: PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties(System.Collections.Generic.Dictionary<System.String, System.Object>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTypeFromProperties
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 610
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  summary: "\nGets the type of the web part by detecting it from the available properties\n"
  example: []
  syntax:
    content: public string GetTypeFromProperties(Dictionary<string, object> properties, bool isLegacy = false)
    parameters:
    - id: properties
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: Web part properties to analyze
    - id: isLegacy
      type: System.Boolean
      description: If true tries additional webpart types used in legacy versions
    return:
      type: System.String
      description: Type of the web part as fully qualified name
    content.vb: Public Function GetTypeFromProperties(properties As Dictionary(Of String, Object), isLegacy As Boolean = False) As String
  overload: PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties*
  nameWithType.vb: BasePage.GetTypeFromProperties(Dictionary(Of String, Object), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Boolean)
  name.vb: GetTypeFromProperties(Dictionary(Of String, Object), Boolean)
- uid: PnP.Framework.Modernization.Pages.BasePage.Properties(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Pages.BasePage.Properties(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  id: Properties(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  parent: PnP.Framework.Modernization.Pages.BasePage
  langs:
  - csharp
  - vb
  name: Properties(Dictionary<String, Object>, String, String)
  nameWithType: BasePage.Properties(Dictionary<String, Object>, String, String)
  fullName: PnP.Framework.Modernization.Pages.BasePage.Properties(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Properties
    path: ../src/lib/PnP.Framework/Modernization/Pages/BasePage.cs
    startLine: 755
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Pages
  summary: "\nChecks the PageTransformation XML data to know which properties need to be kept for the given web part and collects their values\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Properties(Dictionary<string, object> properties, string webPartType, string webPartXml)
    parameters:
    - id: properties
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: Properties collection retrieved when we loaded the web part
    - id: webPartType
      type: System.String
      description: Type of the web part
    - id: webPartXml
      type: System.String
      description: Web part XML
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Collection of the requested property/value pairs
    content.vb: Public Function Properties(properties As Dictionary(Of String, Object), webPartType As String, webPartXml As String) As Dictionary(Of String, String)
  overload: PnP.Framework.Modernization.Pages.BasePage.Properties*
  nameWithType.vb: BasePage.Properties(Dictionary(Of String, Object), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Pages.BasePage.Properties(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String)
  name.vb: Properties(Dictionary(Of String, Object), String, String)
references:
- uid: PnP.Framework.Modernization.Pages
  commentId: N:PnP.Framework.Modernization.Pages
  name: PnP.Framework.Modernization.Pages
  nameWithType: PnP.Framework.Modernization.Pages
  fullName: PnP.Framework.Modernization.Pages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Modernization.Transform.BaseTransform
  commentId: T:PnP.Framework.Modernization.Transform.BaseTransform
  parent: PnP.Framework.Modernization.Transform
  name: BaseTransform
  nameWithType: BaseTransform
  fullName: PnP.Framework.Modernization.Transform.BaseTransform
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  commentId: P:PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: RegisteredLogObservers
  nameWithType: BaseTransform.RegisteredLogObservers
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: RegisterObserver(ILogObserver)
  nameWithType: BaseTransform.RegisterObserver(ILogObserver)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
    name: RegisterObserver
    nameWithType: BaseTransform.RegisterObserver
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
    name: RegisterObserver
    nameWithType: BaseTransform.RegisterObserver
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: FlushObservers()
  nameWithType: BaseTransform.FlushObservers()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
    name: FlushObservers
    nameWithType: BaseTransform.FlushObservers
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
    name: FlushObservers
    nameWithType: BaseTransform.FlushObservers
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: FlushSpecificObserver<T>()
  nameWithType: BaseTransform.FlushSpecificObserver<T>()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver<T>()
  nameWithType.vb: BaseTransform.FlushSpecificObserver(Of T)()
  fullName.vb: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver(Of T)()
  name.vb: FlushSpecificObserver(Of T)()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
    name: FlushSpecificObserver<T>
    nameWithType: BaseTransform.FlushSpecificObserver<T>
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
    name: FlushSpecificObserver(Of T)
    nameWithType: BaseTransform.FlushSpecificObserver(Of T)
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogError(String, String, Exception, Boolean, Boolean)
  nameWithType: BaseTransform.LogError(String, String, Exception, Boolean, Boolean)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String, System.String, System.Exception, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
    name: LogError
    nameWithType: BaseTransform.LogError
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
    name: LogError
    nameWithType: BaseTransform.LogError
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogInfo(String, String, LogEntrySignificance)
  nameWithType: BaseTransform.LogInfo(String, String, LogEntrySignificance)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String, System.String, PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
    name: LogInfo
    nameWithType: BaseTransform.LogInfo
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
    name: LogEntrySignificance
    nameWithType: LogEntrySignificance
    fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
    name: LogInfo
    nameWithType: BaseTransform.LogInfo
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
    name: LogEntrySignificance
    nameWithType: LogEntrySignificance
    fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogWarning(String, String)
  nameWithType: BaseTransform.LogWarning(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
    name: LogWarning
    nameWithType: BaseTransform.LogWarning
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
    name: LogWarning
    nameWithType: BaseTransform.LogWarning
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogDebug(String, String)
  nameWithType: BaseTransform.LogDebug(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
    name: LogDebug
    nameWithType: BaseTransform.LogDebug
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
    name: LogDebug
    nameWithType: BaseTransform.LogDebug
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: Log(LogEntry, LogLevel)
  nameWithType: BaseTransform.Log(LogEntry, LogLevel)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry, PnP.Framework.Modernization.Telemetry.LogLevel)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
    name: Log
    nameWithType: BaseTransform.Log
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: PnP.Framework.Modernization.Telemetry.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
    name: Log
    nameWithType: BaseTransform.Log
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: PnP.Framework.Modernization.Telemetry.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: SetPageId(String)
  nameWithType: BaseTransform.SetPageId(String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
    name: SetPageId
    nameWithType: BaseTransform.SetPageId
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
    name: SetPageId
    nameWithType: BaseTransform.SetPageId
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: GetExactVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetExactVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetExactVersion
    nameWithType: BaseTransform.GetExactVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetExactVersion
    nameWithType: BaseTransform.GetExactVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: GetVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetVersion
    nameWithType: BaseTransform.GetVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetVersion
    nameWithType: BaseTransform.GetVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Pages.BasePage.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<BasePage>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BasePage>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Pages.BasePage>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of BasePage)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Pages.BasePage)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of BasePage)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<BasePage>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BasePage>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Pages.BasePage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of BasePage)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of BasePage)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Pages.BasePage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Pages.BasePage.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Pages.BasePage,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<BasePage, T>(Expression<Func<BasePage, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<BasePage, T>(Expression<Func<BasePage, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Pages.BasePage, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Pages.BasePage, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of BasePage, T)(Expression(Of Func(Of BasePage, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Pages.BasePage, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Pages.BasePage, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of BasePage, T)(Expression(Of Func(Of BasePage, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<BasePage, T>
    nameWithType: ObjectExtensions.Set<BasePage, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Pages.BasePage, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Pages.BasePage
    name: BasePage
    nameWithType: BasePage
    fullName: PnP.Framework.Modernization.Pages.BasePage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of BasePage, T)
    nameWithType: ObjectExtensions.Set(Of BasePage, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Pages.BasePage, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Pages.BasePage
    name: BasePage
    nameWithType: BasePage
    fullName: PnP.Framework.Modernization.Pages.BasePage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: Microsoft.SharePoint.Client.ListItem
  commentId: T:Microsoft.SharePoint.Client.ListItem
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ListItem
  nameWithType: ListItem
  fullName: Microsoft.SharePoint.Client.ListItem
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: Microsoft.SharePoint.Client.File
  commentId: T:Microsoft.SharePoint.Client.File
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: File
  nameWithType: File
  fullName: Microsoft.SharePoint.Client.File
- uid: Microsoft.SharePoint.Client.ClientContext
  commentId: T:Microsoft.SharePoint.Client.ClientContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientContext
  nameWithType: ClientContext
  fullName: Microsoft.SharePoint.Client.ClientContext
- uid: PnP.Framework.Modernization.PageTransformation
  commentId: T:PnP.Framework.Modernization.PageTransformation
  parent: PnP.Framework.Modernization
  name: PageTransformation
  nameWithType: PageTransformation
  fullName: PnP.Framework.Modernization.PageTransformation
- uid: PnP.Framework.Modernization
  commentId: N:PnP.Framework.Modernization
  name: PnP.Framework.Modernization
  nameWithType: PnP.Framework.Modernization
  fullName: PnP.Framework.Modernization
- uid: PnP.Framework.Modernization.Pages.BasePage.#ctor*
  commentId: Overload:PnP.Framework.Modernization.Pages.BasePage.#ctor
  name: BasePage
  nameWithType: BasePage.BasePage
  fullName: PnP.Framework.Modernization.Pages.BasePage.BasePage
- uid: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  commentId: T:System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ILogObserver>
  nameWithType: IList<ILogObserver>
  fullName: System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>
  nameWithType.vb: IList(Of ILogObserver)
  fullName.vb: System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver)
  name.vb: IList(Of ILogObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Modernization.Pages.BasePage.GetType*
  commentId: Overload:PnP.Framework.Modernization.Pages.BasePage.GetType
  name: GetType
  nameWithType: BasePage.GetType
  fullName: PnP.Framework.Modernization.Pages.BasePage.GetType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties*
  commentId: Overload:PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties
  name: GetTypeFromProperties
  nameWithType: BasePage.GetTypeFromProperties
  fullName: PnP.Framework.Modernization.Pages.BasePage.GetTypeFromProperties
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Pages.BasePage.Properties*
  commentId: Overload:PnP.Framework.Modernization.Pages.BasePage.Properties
  name: Properties
  nameWithType: BasePage.Properties
  fullName: PnP.Framework.Modernization.Pages.BasePage.Properties
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )

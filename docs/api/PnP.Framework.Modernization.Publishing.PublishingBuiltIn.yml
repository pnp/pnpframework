### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  commentId: T:PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  id: PublishingBuiltIn
  parent: PnP.Framework.Modernization.Publishing
  children:
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue(System.String,System.String,System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix(System.String,System.String,System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix(System.String,System.String,System.String,System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString(System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix(System.String,System.String,System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors(System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText(System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor(System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption(System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl(System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl(System.String)
  langs:
  - csharp
  - vb
  name: PublishingBuiltIn
  nameWithType: PublishingBuiltIn
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PublishingBuiltIn
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  syntax:
    content: 'public class PublishingBuiltIn : FunctionsBase'
    content.vb: >-
      Public Class PublishingBuiltIn
          Inherits FunctionsBase
  inheritance:
  - System.Object
  - PnP.Framework.Modernization.Transform.BaseTransform
  - PnP.Framework.Modernization.Functions.FunctionsBase
  inheritedMembers:
  - PnP.Framework.Modernization.Functions.FunctionsBase.clientContext
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  - PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  - PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Publishing.PublishingBuiltIn,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  id: '#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})'
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: PublishingBuiltIn(BaseTransformationInformation, ClientContext, ClientContext, IList<ILogObserver>)
  nameWithType: PublishingBuiltIn.PublishingBuiltIn(BaseTransformationInformation, ClientContext, ClientContext, IList<ILogObserver>)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PublishingBuiltIn(PnP.Framework.Modernization.Transform.BaseTransformationInformation, Microsoft.SharePoint.Client.ClientContext, Microsoft.SharePoint.Client.ClientContext, System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 31
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nInstantiates the base builtin function library\n"
  example: []
  syntax:
    content: public PublishingBuiltIn(BaseTransformationInformation baseTransformationInformation, ClientContext sourceClientContext, ClientContext targetClientContext, IList<ILogObserver> logObservers = null)
    parameters:
    - id: baseTransformationInformation
      type: PnP.Framework.Modernization.Transform.BaseTransformationInformation
      description: Page transformation information
    - id: sourceClientContext
      type: Microsoft.SharePoint.Client.ClientContext
      description: 'The ClientContext for the source '
    - id: targetClientContext
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: logObservers
      type: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
      description: ''
    content.vb: Public Sub New(baseTransformationInformation As BaseTransformationInformation, sourceClientContext As ClientContext, targetClientContext As ClientContext, logObservers As IList(Of ILogObserver) = Nothing)
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.#ctor*
  nameWithType.vb: PublishingBuiltIn.PublishingBuiltIn(BaseTransformationInformation, ClientContext, ClientContext, IList(Of ILogObserver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PublishingBuiltIn(PnP.Framework.Modernization.Transform.BaseTransformationInformation, Microsoft.SharePoint.Client.ClientContext, Microsoft.SharePoint.Client.ClientContext, System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver))
  name.vb: PublishingBuiltIn(BaseTransformationInformation, ClientContext, ClientContext, IList(Of ILogObserver))
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString
  id: EmptyString
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: EmptyString()
  nameWithType: PublishingBuiltIn.EmptyString()
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EmptyString
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 55
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nReturns an empty string\n"
  example: []
  syntax:
    content: public string EmptyString()
    return:
      type: System.String
      description: Empty string
    content.vb: Public Function EmptyString As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString(System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString(System.String)
  id: StaticString(System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: StaticString(String)
  nameWithType: PublishingBuiltIn.StaticString(String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: StaticString
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 69
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nReturns an the (static) string provided as input\n"
  example: []
  syntax:
    content: public string StaticString(string staticString)
    parameters:
    - id: staticString
      type: System.String
      description: Static string that will be returned
    return:
      type: System.String
      description: String provided as input
    content.vb: Public Function StaticString(staticString As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix(System.String,System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix(System.String,System.String,System.String)
  id: Prefix(System.String,System.String,System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: Prefix(String, String, String)
  nameWithType: PublishingBuiltIn.Prefix(String, String, String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Prefix
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 85
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nPrefixes a string\n"
  example: []
  syntax:
    content: public string Prefix(string prefix, string content, string applyIfContentIsEmpty)
    parameters:
    - id: prefix
      type: System.String
      description: Prefix to be applied
    - id: content
      type: System.String
      description: Value to apply the prefix to
    - id: applyIfContentIsEmpty
      type: System.String
      description: Apply prefix also when the content field is empty
    return:
      type: System.String
      description: Prefixed string
    content.vb: Public Function Prefix(prefix As String, content As String, applyIfContentIsEmpty As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix(System.String,System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix(System.String,System.String,System.String)
  id: Suffix(System.String,System.String,System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: Suffix(String, String, String)
  nameWithType: PublishingBuiltIn.Suffix(String, String, String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Suffix
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 130
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nSuffixes a string\n"
  example: []
  syntax:
    content: public string Suffix(string suffix, string content, string applyIfContentIsEmpty)
    parameters:
    - id: suffix
      type: System.String
      description: Suffix to be applied
    - id: content
      type: System.String
      description: Value to apply the suffix to
    - id: applyIfContentIsEmpty
      type: System.String
      description: Apply suffix also when the content field is empty
    return:
      type: System.String
      description: Prefixed string
    content.vb: Public Function Suffix(suffix As String, content As String, applyIfContentIsEmpty As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix(System.String,System.String,System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix(System.String,System.String,System.String,System.String)
  id: PrefixAndSuffix(System.String,System.String,System.String,System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: PrefixAndSuffix(String, String, String, String)
  nameWithType: PublishingBuiltIn.PrefixAndSuffix(String, String, String, String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PrefixAndSuffix
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 176
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nPrefixes and suffixes a string\n"
  example: []
  syntax:
    content: public string PrefixAndSuffix(string prefix, string suffix, string content, string applyIfContentIsEmpty)
    parameters:
    - id: prefix
      type: System.String
      description: Prefix to be applied
    - id: suffix
      type: System.String
      description: Suffix to be applied
    - id: content
      type: System.String
      description: Value to apply the prefix/suffix to
    - id: applyIfContentIsEmpty
      type: System.String
      description: Apply prefix/suffix also when the content field is empty
    return:
      type: System.String
      description: Prefixed string
    content.vb: Public Function PrefixAndSuffix(prefix As String, suffix As String, content As String, applyIfContentIsEmpty As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl(System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl(System.String)
  id: ToImageUrl(System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: ToImageUrl(String)
  nameWithType: PublishingBuiltIn.ToImageUrl(String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToImageUrl
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 241
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nReturns the server relative image url of a Publishing Image field value\n"
  example: []
  syntax:
    content: public string ToImageUrl(string htmlImage)
    parameters:
    - id: htmlImage
      type: System.String
      description: Publishing Image field value
    return:
      type: System.String
      description: Server relative image url
    content.vb: Public Function ToImageUrl(htmlImage As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText(System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText(System.String)
  id: ToImageAltText(System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: ToImageAltText(String)
  nameWithType: PublishingBuiltIn.ToImageAltText(String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToImageAltText
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 278
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nReturns the image alternate text of a Publishing Image field value.\n"
  example: []
  syntax:
    content: public string ToImageAltText(string htmlImage)
    parameters:
    - id: htmlImage
      type: System.String
      description: PublishingPageImage
    return:
      type: System.String
      description: Image alternate text
    content.vb: Public Function ToImageAltText(htmlImage As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor(System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor(System.String)
  id: ToImageAnchor(System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: ToImageAnchor(String)
  nameWithType: PublishingBuiltIn.ToImageAnchor(String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToImageAnchor
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 309
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nReturns the image anchor url of a Publishing Image field value\n"
  example: []
  syntax:
    content: public string ToImageAnchor(string htmlImage)
    parameters:
    - id: htmlImage
      type: System.String
      description: Publishing Image field value
    return:
      type: System.String
      description: Image anchor url
    content.vb: Public Function ToImageAnchor(htmlImage As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption(System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption(System.String)
  id: ToImageCaption(System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: ToImageCaption(String)
  nameWithType: PublishingBuiltIn.ToImageCaption(String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToImageCaption
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 346
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nReturns the image caption of a Publishing Html image caption field\n"
  example: []
  syntax:
    content: public string ToImageCaption(string htmlField)
    parameters:
    - id: htmlField
      type: System.String
      description: Publishing Html image caption field value
    return:
      type: System.String
      description: Image caption
    content.vb: Public Function ToImageCaption(htmlField As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl(System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl(System.String)
  id: ToPreviewImageUrl(System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: ToPreviewImageUrl(String)
  nameWithType: PublishingBuiltIn.ToPreviewImageUrl(String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToPreviewImageUrl
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 388
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nReturns a page preview image url\n"
  example: []
  syntax:
    content: public string ToPreviewImageUrl(string image)
    parameters:
    - id: image
      type: System.String
      description: A publishing image field value or a string containing a server relative image path
    return:
      type: System.String
      description: A formatted preview image url
    content.vb: Public Function ToPreviewImageUrl(image As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors(System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors(System.String)
  id: ToAuthors(System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: ToAuthors(String)
  nameWithType: PublishingBuiltIn.ToAuthors(String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToAuthors
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 440
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nLooks up user information for passed user id\n"
  example: []
  syntax:
    content: public string ToAuthors(string userId)
    parameters:
    - id: userId
      type: System.String
      description: The id (int) of a user
    return:
      type: System.String
      description: A formatted json blob describing the user&apos;s details
    content.vb: Public Function ToAuthors(userId As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue(System.String,System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue(System.String,System.String,System.String)
  id: DefaultTaxonomyFieldValue(System.String,System.String,System.String)
  parent: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  langs:
  - csharp
  - vb
  name: DefaultTaxonomyFieldValue(String, String, String)
  nameWithType: PublishingBuiltIn.DefaultTaxonomyFieldValue(String, String, String)
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DefaultTaxonomyFieldValue
    path: ../src/lib/PnP.Framework/Modernization/Publishing/PublishingBuiltIn.cs
    startLine: 500
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Publishing
  summary: "\nPopulate a taxonomy field based upon provided term id&apos;s. You can configure to optionally overwrite existing values\n"
  example: []
  syntax:
    content: public string DefaultTaxonomyFieldValue(string fieldValue, string termIdString, string overwriteString)
    parameters:
    - id: fieldValue
      type: System.String
      description: List of term id&apos;s to set, multiple values can also be used when the taxonomy field is configured to accept multiple terms
    - id: termIdString
      type: System.String
      description: Static bool (&apos;true&apos;, &apos;false&apos;) to indicate if the default term values have to be set in case the fiels already contains terms
    - id: overwriteString
      type: System.String
      description: String with term information needed to set the taxonomy field
    return:
      type: System.String
      description: ''
    content.vb: Public Function DefaultTaxonomyFieldValue(fieldValue As String, termIdString As String, overwriteString As String) As String
  overload: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Modernization.Publishing
  commentId: N:PnP.Framework.Modernization.Publishing
  name: PnP.Framework.Modernization.Publishing
  nameWithType: PnP.Framework.Modernization.Publishing
  fullName: PnP.Framework.Modernization.Publishing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Modernization.Transform.BaseTransform
  commentId: T:PnP.Framework.Modernization.Transform.BaseTransform
  parent: PnP.Framework.Modernization.Transform
  name: BaseTransform
  nameWithType: BaseTransform
  fullName: PnP.Framework.Modernization.Transform.BaseTransform
- uid: PnP.Framework.Modernization.Functions.FunctionsBase
  commentId: T:PnP.Framework.Modernization.Functions.FunctionsBase
  parent: PnP.Framework.Modernization.Functions
  name: FunctionsBase
  nameWithType: FunctionsBase
  fullName: PnP.Framework.Modernization.Functions.FunctionsBase
- uid: PnP.Framework.Modernization.Functions.FunctionsBase.clientContext
  commentId: F:PnP.Framework.Modernization.Functions.FunctionsBase.clientContext
  parent: PnP.Framework.Modernization.Functions.FunctionsBase
  name: clientContext
  nameWithType: FunctionsBase.clientContext
  fullName: PnP.Framework.Modernization.Functions.FunctionsBase.clientContext
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  commentId: P:PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: RegisteredLogObservers
  nameWithType: BaseTransform.RegisteredLogObservers
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: RegisterObserver(ILogObserver)
  nameWithType: BaseTransform.RegisterObserver(ILogObserver)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
    name: RegisterObserver
    nameWithType: BaseTransform.RegisterObserver
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
    name: RegisterObserver
    nameWithType: BaseTransform.RegisterObserver
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: FlushObservers()
  nameWithType: BaseTransform.FlushObservers()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
    name: FlushObservers
    nameWithType: BaseTransform.FlushObservers
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
    name: FlushObservers
    nameWithType: BaseTransform.FlushObservers
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: FlushSpecificObserver<T>()
  nameWithType: BaseTransform.FlushSpecificObserver<T>()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver<T>()
  nameWithType.vb: BaseTransform.FlushSpecificObserver(Of T)()
  fullName.vb: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver(Of T)()
  name.vb: FlushSpecificObserver(Of T)()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
    name: FlushSpecificObserver<T>
    nameWithType: BaseTransform.FlushSpecificObserver<T>
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
    name: FlushSpecificObserver(Of T)
    nameWithType: BaseTransform.FlushSpecificObserver(Of T)
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogError(String, String, Exception, Boolean, Boolean)
  nameWithType: BaseTransform.LogError(String, String, Exception, Boolean, Boolean)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String, System.String, System.Exception, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
    name: LogError
    nameWithType: BaseTransform.LogError
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
    name: LogError
    nameWithType: BaseTransform.LogError
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogInfo(String, String, LogEntrySignificance)
  nameWithType: BaseTransform.LogInfo(String, String, LogEntrySignificance)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String, System.String, PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
    name: LogInfo
    nameWithType: BaseTransform.LogInfo
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
    name: LogEntrySignificance
    nameWithType: LogEntrySignificance
    fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
    name: LogInfo
    nameWithType: BaseTransform.LogInfo
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
    name: LogEntrySignificance
    nameWithType: LogEntrySignificance
    fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogWarning(String, String)
  nameWithType: BaseTransform.LogWarning(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
    name: LogWarning
    nameWithType: BaseTransform.LogWarning
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
    name: LogWarning
    nameWithType: BaseTransform.LogWarning
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogDebug(String, String)
  nameWithType: BaseTransform.LogDebug(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
    name: LogDebug
    nameWithType: BaseTransform.LogDebug
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
    name: LogDebug
    nameWithType: BaseTransform.LogDebug
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: Log(LogEntry, LogLevel)
  nameWithType: BaseTransform.Log(LogEntry, LogLevel)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry, PnP.Framework.Modernization.Telemetry.LogLevel)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
    name: Log
    nameWithType: BaseTransform.Log
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: PnP.Framework.Modernization.Telemetry.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
    name: Log
    nameWithType: BaseTransform.Log
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: PnP.Framework.Modernization.Telemetry.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: SetPageId(String)
  nameWithType: BaseTransform.SetPageId(String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
    name: SetPageId
    nameWithType: BaseTransform.SetPageId
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
    name: SetPageId
    nameWithType: BaseTransform.SetPageId
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: GetExactVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetExactVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetExactVersion
    nameWithType: BaseTransform.GetExactVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetExactVersion
    nameWithType: BaseTransform.GetExactVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: GetVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetVersion
    nameWithType: BaseTransform.GetVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetVersion
    nameWithType: BaseTransform.GetVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<PublishingBuiltIn>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<PublishingBuiltIn>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Publishing.PublishingBuiltIn>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of PublishingBuiltIn)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Publishing.PublishingBuiltIn)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of PublishingBuiltIn)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<PublishingBuiltIn>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<PublishingBuiltIn>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Publishing.PublishingBuiltIn>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of PublishingBuiltIn)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of PublishingBuiltIn)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Publishing.PublishingBuiltIn)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Publishing.PublishingBuiltIn,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<PublishingBuiltIn, T>(Expression<Func<PublishingBuiltIn, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<PublishingBuiltIn, T>(Expression<Func<PublishingBuiltIn, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Publishing.PublishingBuiltIn, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Publishing.PublishingBuiltIn, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of PublishingBuiltIn, T)(Expression(Of Func(Of PublishingBuiltIn, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Publishing.PublishingBuiltIn, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Publishing.PublishingBuiltIn, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of PublishingBuiltIn, T)(Expression(Of Func(Of PublishingBuiltIn, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<PublishingBuiltIn, T>
    nameWithType: ObjectExtensions.Set<PublishingBuiltIn, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Publishing.PublishingBuiltIn, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
    name: PublishingBuiltIn
    nameWithType: PublishingBuiltIn
    fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of PublishingBuiltIn, T)
    nameWithType: ObjectExtensions.Set(Of PublishingBuiltIn, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Publishing.PublishingBuiltIn, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
    name: PublishingBuiltIn
    nameWithType: PublishingBuiltIn
    fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: PnP.Framework.Modernization.Functions
  commentId: N:PnP.Framework.Modernization.Functions
  name: PnP.Framework.Modernization.Functions
  nameWithType: PnP.Framework.Modernization.Functions
  fullName: PnP.Framework.Modernization.Functions
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.#ctor*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.#ctor
  name: PublishingBuiltIn
  nameWithType: PublishingBuiltIn.PublishingBuiltIn
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PublishingBuiltIn
- uid: PnP.Framework.Modernization.Transform.BaseTransformationInformation
  commentId: T:PnP.Framework.Modernization.Transform.BaseTransformationInformation
  parent: PnP.Framework.Modernization.Transform
  name: BaseTransformationInformation
  nameWithType: BaseTransformationInformation
  fullName: PnP.Framework.Modernization.Transform.BaseTransformationInformation
- uid: Microsoft.SharePoint.Client.ClientContext
  commentId: T:Microsoft.SharePoint.Client.ClientContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientContext
  nameWithType: ClientContext
  fullName: Microsoft.SharePoint.Client.ClientContext
- uid: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  commentId: T:System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ILogObserver>
  nameWithType: IList<ILogObserver>
  fullName: System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>
  nameWithType.vb: IList(Of ILogObserver)
  fullName.vb: System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver)
  name.vb: IList(Of ILogObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString
  name: EmptyString
  nameWithType: PublishingBuiltIn.EmptyString
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.EmptyString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString
  name: StaticString
  nameWithType: PublishingBuiltIn.StaticString
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.StaticString
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix
  name: Prefix
  nameWithType: PublishingBuiltIn.Prefix
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Prefix
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix
  name: Suffix
  nameWithType: PublishingBuiltIn.Suffix
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.Suffix
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix
  name: PrefixAndSuffix
  nameWithType: PublishingBuiltIn.PrefixAndSuffix
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.PrefixAndSuffix
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl
  name: ToImageUrl
  nameWithType: PublishingBuiltIn.ToImageUrl
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageUrl
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText
  name: ToImageAltText
  nameWithType: PublishingBuiltIn.ToImageAltText
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAltText
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor
  name: ToImageAnchor
  nameWithType: PublishingBuiltIn.ToImageAnchor
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageAnchor
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption
  name: ToImageCaption
  nameWithType: PublishingBuiltIn.ToImageCaption
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToImageCaption
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl
  name: ToPreviewImageUrl
  nameWithType: PublishingBuiltIn.ToPreviewImageUrl
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToPreviewImageUrl
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors
  name: ToAuthors
  nameWithType: PublishingBuiltIn.ToAuthors
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.ToAuthors
- uid: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue*
  commentId: Overload:PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue
  name: DefaultTaxonomyFieldValue
  nameWithType: PublishingBuiltIn.DefaultTaxonomyFieldValue
  fullName: PnP.Framework.Modernization.Publishing.PublishingBuiltIn.DefaultTaxonomyFieldValue

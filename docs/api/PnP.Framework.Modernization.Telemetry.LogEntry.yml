### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Telemetry.LogEntry
  commentId: T:PnP.Framework.Modernization.Telemetry.LogEntry
  id: LogEntry
  parent: PnP.Framework.Modernization.Telemetry
  children:
  - PnP.Framework.Modernization.Telemetry.LogEntry.#ctor
  - PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId
  - PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime
  - PnP.Framework.Modernization.Telemetry.LogEntry.Exception
  - PnP.Framework.Modernization.Telemetry.LogEntry.Heading
  - PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException
  - PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException
  - PnP.Framework.Modernization.Telemetry.LogEntry.Message
  - PnP.Framework.Modernization.Telemetry.LogEntry.PageId
  - PnP.Framework.Modernization.Telemetry.LogEntry.Significance
  - PnP.Framework.Modernization.Telemetry.LogEntry.Source
  langs:
  - csharp
  - vb
  name: LogEntry
  nameWithType: LogEntry
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LogEntry
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 7
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nDefines an entry to log\n"
  example: []
  syntax:
    content: public class LogEntry
    content.vb: Public Class LogEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Telemetry.LogEntry.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Telemetry.LogEntry.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Telemetry.LogEntry,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.#ctor
  commentId: M:PnP.Framework.Modernization.Telemetry.LogEntry.#ctor
  id: '#ctor'
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: LogEntry()
  nameWithType: LogEntry.LogEntry()
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.LogEntry()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nCreate a new Log Entry\n"
  example: []
  syntax:
    content: public LogEntry()
    content.vb: Public Sub New
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Message
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.Message
  id: Message
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: LogEntry.Message
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Message
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Message
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 20
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nGets or sets Log message\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId
  id: CorrelationId
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: LogEntry.CorrelationId
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CorrelationId
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nGets or sets CorrelationId of type Guid\n"
  example: []
  syntax:
    content: public Guid CorrelationId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property CorrelationId As Guid
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Source
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.Source
  id: Source
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: LogEntry.Source
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Source
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Source
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 30
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nGets or sets Log source\n"
  example: []
  syntax:
    content: public string Source { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Source As String
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Exception
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.Exception
  id: Exception
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: LogEntry.Exception
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Exception
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Exception
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 35
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nGets or sets Log Exception\n"
  example: []
  syntax:
    content: public Exception Exception { get; set; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public Property Exception As Exception
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.Exception*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Heading
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.Heading
  id: Heading
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: Heading
  nameWithType: LogEntry.Heading
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Heading
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Heading
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 40
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nSpecified the logical grouping for the messages based on the stage of transformation\n"
  example: []
  syntax:
    content: public string Heading { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Heading As String
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.Heading*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException
  id: IgnoreException
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: IgnoreException
  nameWithType: LogEntry.IgnoreException
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IgnoreException
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 45
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nFor those areas where we swallow errors or they are non-critical to report\n"
  example: []
  syntax:
    content: public bool IgnoreException { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreException As Boolean
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime
  id: EntryTime
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: EntryTime
  nameWithType: LogEntry.EntryTime
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EntryTime
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 50
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nTime in which the log entry was made\n"
  example: []
  syntax:
    content: public DateTime EntryTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property EntryTime As Date
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.PageId
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.PageId
  id: PageId
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: PageId
  nameWithType: LogEntry.PageId
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.PageId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PageId
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 55
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nPage that&apos;s being transformed\n"
  example: []
  syntax:
    content: public string PageId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PageId As String
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.PageId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Significance
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.Significance
  id: Significance
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: Significance
  nameWithType: LogEntry.Significance
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Significance
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Significance
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 60
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nExtra significance of the entry for the logs\n"
  example: []
  syntax:
    content: public LogEntrySignificance Significance { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
    content.vb: Public Property Significance As LogEntrySignificance
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.Significance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException
  commentId: P:PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException
  id: IsCriticalException
  parent: PnP.Framework.Modernization.Telemetry.LogEntry
  langs:
  - csharp
  - vb
  name: IsCriticalException
  nameWithType: LogEntry.IsCriticalException
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsCriticalException
    path: ../src/lib/PnP.Framework/Modernization/Telemetry/LogEntry.cs
    startLine: 65
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Telemetry
  summary: "\nMarks this error as a critical exception that prevents transformation\n"
  example: []
  syntax:
    content: public bool IsCriticalException { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCriticalException As Boolean
  overload: PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Modernization.Telemetry
  commentId: N:PnP.Framework.Modernization.Telemetry
  name: PnP.Framework.Modernization.Telemetry
  nameWithType: PnP.Framework.Modernization.Telemetry
  fullName: PnP.Framework.Modernization.Telemetry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<LogEntry>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<LogEntry>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Telemetry.LogEntry>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of LogEntry)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Telemetry.LogEntry)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of LogEntry)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<LogEntry>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<LogEntry>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Telemetry.LogEntry>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of LogEntry)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of LogEntry)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Telemetry.LogEntry)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Telemetry.LogEntry,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<LogEntry, T>(Expression<Func<LogEntry, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<LogEntry, T>(Expression<Func<LogEntry, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Telemetry.LogEntry, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Telemetry.LogEntry, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of LogEntry, T)(Expression(Of Func(Of LogEntry, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Telemetry.LogEntry, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Telemetry.LogEntry, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of LogEntry, T)(Expression(Of Func(Of LogEntry, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<LogEntry, T>
    nameWithType: ObjectExtensions.Set<LogEntry, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Telemetry.LogEntry, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of LogEntry, T)
    nameWithType: ObjectExtensions.Set(Of LogEntry, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Telemetry.LogEntry, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.#ctor*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.#ctor
  name: LogEntry
  nameWithType: LogEntry.LogEntry
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.LogEntry
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Message*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.Message
  name: Message
  nameWithType: LogEntry.Message
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId
  name: CorrelationId
  nameWithType: LogEntry.CorrelationId
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.CorrelationId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Source*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.Source
  name: Source
  nameWithType: LogEntry.Source
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Source
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Exception*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.Exception
  name: Exception
  nameWithType: LogEntry.Exception
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Heading*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.Heading
  name: Heading
  nameWithType: LogEntry.Heading
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Heading
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException
  name: IgnoreException
  nameWithType: LogEntry.IgnoreException
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.IgnoreException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime
  name: EntryTime
  nameWithType: LogEntry.EntryTime
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.EntryTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.PageId*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.PageId
  name: PageId
  nameWithType: LogEntry.PageId
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.PageId
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.Significance*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.Significance
  name: Significance
  nameWithType: LogEntry.Significance
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.Significance
- uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  commentId: T:PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  parent: PnP.Framework.Modernization.Telemetry
  name: LogEntrySignificance
  nameWithType: LogEntrySignificance
  fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
- uid: PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException*
  commentId: Overload:PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException
  name: IsCriticalException
  nameWithType: LogEntry.IsCriticalException
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry.IsCriticalException

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Transform.BaseTransform
  commentId: T:PnP.Framework.Modernization.Transform.BaseTransform
  id: BaseTransform
  parent: PnP.Framework.Modernization.Transform
  children:
  - PnP.Framework.Modernization.Transform.BaseTransform.#ctor
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  - PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  - PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  langs:
  - csharp
  - vb
  name: BaseTransform
  nameWithType: BaseTransform
  fullName: PnP.Framework.Modernization.Transform.BaseTransform
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BaseTransform
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nBase logging implementation\n"
  example: []
  syntax:
    content: public class BaseTransform
    content.vb: Public Class BaseTransform
  inheritance:
  - System.Object
  derivedClasses:
  - PnP.Framework.Modernization.Functions.BaseFunctionProcessor
  - PnP.Framework.Modernization.Functions.FunctionsBase
  - PnP.Framework.Modernization.Pages.BasePage
  - PnP.Framework.Modernization.Publishing.PageLayoutAnalyser
  - PnP.Framework.Modernization.Publishing.PageLayoutManager
  - PnP.Framework.Modernization.Publishing.PublishingLayoutTransformator
  - PnP.Framework.Modernization.Publishing.PublishingMetadataTransformator
  - PnP.Framework.Modernization.Publishing.PublishingPageHeaderTransformator
  - PnP.Framework.Modernization.Transform.AssetTransfer
  - PnP.Framework.Modernization.Transform.BasePageTransformator
  - PnP.Framework.Modernization.Transform.ContentTransformator
  - PnP.Framework.Modernization.Transform.HtmlTransformator
  - PnP.Framework.Modernization.Transform.QuickLinksTransformator
  - PnP.Framework.Modernization.Transform.TermTransformator
  - PnP.Framework.Modernization.Transform.UrlTransformator
  - PnP.Framework.Modernization.Transform.UserTransformator
  - PnP.Framework.Modernization.Transform.WikiHtmlTransformator
  - PnP.Framework.Modernization.Utilities.FileManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Transform.BaseTransform.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.BaseTransform,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  commentId: P:PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  id: RegisteredLogObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: RegisteredLogObservers
  nameWithType: BaseTransform.RegisteredLogObservers
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RegisteredLogObservers
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nList of registered log observers\n"
  example: []
  syntax:
    content: public IList<ILogObserver> RegisteredLogObservers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
    content.vb: Public ReadOnly Property RegisteredLogObservers As IList(Of ILogObserver)
  overload: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Modernization.Transform.BaseTransform.#ctor
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.#ctor
  id: '#ctor'
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: BaseTransform()
  nameWithType: BaseTransform.BaseTransform()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.BaseTransform()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 31
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nInstantiation of base transform class\n"
  example: []
  syntax:
    content: public BaseTransform()
    content.vb: Public Sub New
  overload: PnP.Framework.Modernization.Transform.BaseTransform.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  id: RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: RegisterObserver(ILogObserver)
  nameWithType: BaseTransform.RegisterObserver(ILogObserver)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RegisterObserver
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 41
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nRegisters the observer\n"
  example: []
  syntax:
    content: public void RegisterObserver(ILogObserver observer)
    parameters:
    - id: observer
      type: PnP.Framework.Modernization.Telemetry.ILogObserver
      description: The observer.
    content.vb: Public Sub RegisterObserver(observer As ILogObserver)
  overload: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  id: FlushObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: FlushObservers()
  nameWithType: BaseTransform.FlushObservers()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FlushObservers
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 52
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nFlush all log observers\n"
  example: []
  syntax:
    content: public void FlushObservers()
    content.vb: Public Sub FlushObservers
  overload: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  id: FlushSpecificObserver``1
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: FlushSpecificObserver<T>()
  nameWithType: BaseTransform.FlushSpecificObserver<T>()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver<T>()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FlushSpecificObserver
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 74
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nFlush Specific Observer of a type\n"
  example: []
  syntax:
    content: public void FlushSpecificObserver<T>()
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub FlushSpecificObserver(Of T)
  overload: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver*
  nameWithType.vb: BaseTransform.FlushSpecificObserver(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver(Of T)()
  name.vb: FlushSpecificObserver(Of T)()
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  id: LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: LogError(String, String, Exception, Boolean, Boolean)
  nameWithType: BaseTransform.LogError(String, String, Exception, Boolean, Boolean)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String, System.String, System.Exception, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LogError
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 96
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nNotifies the observers of error messages\n"
  example: []
  syntax:
    content: public void LogError(string message, string heading = "", Exception exception = null, bool ignoreException = false, bool isCriticalException = false)
    parameters:
    - id: message
      type: System.String
      description: The message.
    - id: heading
      type: System.String
      description: The logical grouping for the messages based on the stage of transformation
    - id: exception
      type: System.Exception
      description: Exception object
    - id: ignoreException
      type: System.Boolean
      description: For those areas where we swallow errors or they are non-critical to report
    - id: isCriticalException
      type: System.Boolean
      description: Marks this error as a critical exception that prevents transformation
    content.vb: Public Sub LogError(message As String, heading As String = "", exception As Exception = Nothing, ignoreException As Boolean = False, isCriticalException As Boolean = False)
  overload: PnP.Framework.Modernization.Transform.BaseTransform.LogError*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  id: LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: LogInfo(String, String, LogEntrySignificance)
  nameWithType: BaseTransform.LogInfo(String, String, LogEntrySignificance)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String, System.String, PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LogInfo
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 118
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nNotifies the observers of info messages\n"
  example: []
  syntax:
    content: public void LogInfo(string message, string heading = "", LogEntrySignificance significance = LogEntrySignificance.None)
    parameters:
    - id: message
      type: System.String
      description: The message.
    - id: heading
      type: System.String
      description: The logical grouping for the messages based on the stage of transformation
    - id: significance
      type: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
      description: Extra significance of the entry for the logs
    content.vb: Public Sub LogInfo(message As String, heading As String = "", significance As LogEntrySignificance = LogEntrySignificance.None)
  overload: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  id: LogWarning(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: LogWarning(String, String)
  nameWithType: BaseTransform.LogWarning(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LogWarning
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 131
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nNotifies the observers of warning messages\n"
  example: []
  syntax:
    content: public void LogWarning(string message, string heading = "")
    parameters:
    - id: message
      type: System.String
      description: The message.
    - id: heading
      type: System.String
      description: The logical grouping for the messages based on the stage of transformation
    content.vb: Public Sub LogWarning(message As String, heading As String = "")
  overload: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  id: LogDebug(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: LogDebug(String, String)
  nameWithType: BaseTransform.LogDebug(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LogDebug
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 144
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nNotifies the observers of debug messages\n"
  example: []
  syntax:
    content: public void LogDebug(string message, string heading = "")
    parameters:
    - id: message
      type: System.String
      description: The message.
    - id: heading
      type: System.String
      description: The logical grouping for the messages based on the stage of transformation
    content.vb: Public Sub LogDebug(message As String, heading As String = "")
  overload: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  id: Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: Log(LogEntry, LogLevel)
  nameWithType: BaseTransform.Log(LogEntry, LogLevel)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry, PnP.Framework.Modernization.Telemetry.LogLevel)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Log
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 157
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nLog entries into the observers\n"
  example: []
  syntax:
    content: public void Log(LogEntry entry, LogLevel level)
    parameters:
    - id: entry
      type: PnP.Framework.Modernization.Telemetry.LogEntry
      description: ''
    - id: level
      type: PnP.Framework.Modernization.Telemetry.LogLevel
      description: ''
    content.vb: Public Sub Log(entry As LogEntry, level As LogLevel)
  overload: PnP.Framework.Modernization.Transform.BaseTransform.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  id: SetPageId(System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: SetPageId(String)
  nameWithType: BaseTransform.SetPageId(String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetPageId
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 187
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nSets the page name of the page being transformed\n"
  example: []
  syntax:
    content: public void SetPageId(string pageId)
    parameters:
    - id: pageId
      type: System.String
      description: Name of the page being transformed
    content.vb: Public Sub SetPageId(pageId As String)
  overload: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  id: GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: GetExactVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetExactVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetExactVersion
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 202
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nGets exact version of SharePoint\n"
  example: []
  syntax:
    content: public static string GetExactVersion(ClientRuntimeContext clientContext)
    parameters:
    - id: clientContext
      type: Microsoft.SharePoint.Client.ClientRuntimeContext
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetExactVersion(clientContext As ClientRuntimeContext) As String
  overload: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  id: GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  langs:
  - csharp
  - vb
  name: GetVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetVersion
    path: ../src/lib/PnP.Framework/Modernization/Transform/BaseTransform.cs
    startLine: 222
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nGets the version of SharePoint\n"
  example: []
  syntax:
    content: public static SPVersion GetVersion(ClientRuntimeContext clientContext)
    parameters:
    - id: clientContext
      type: Microsoft.SharePoint.Client.ClientRuntimeContext
      description: ''
    return:
      type: PnP.Framework.Modernization.Transform.SPVersion
      description: ''
    content.vb: Public Shared Function GetVersion(clientContext As ClientRuntimeContext) As SPVersion
  overload: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<BaseTransform>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BaseTransform>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.BaseTransform>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of BaseTransform)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.BaseTransform)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of BaseTransform)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<BaseTransform>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BaseTransform>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.BaseTransform>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of BaseTransform)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of BaseTransform)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.BaseTransform)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.BaseTransform,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<BaseTransform, T>(Expression<Func<BaseTransform, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<BaseTransform, T>(Expression<Func<BaseTransform, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.BaseTransform, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Transform.BaseTransform, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of BaseTransform, T)(Expression(Of Func(Of BaseTransform, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.BaseTransform, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Transform.BaseTransform, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of BaseTransform, T)(Expression(Of Func(Of BaseTransform, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<BaseTransform, T>
    nameWithType: ObjectExtensions.Set<BaseTransform, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.BaseTransform, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.BaseTransform
    name: BaseTransform
    nameWithType: BaseTransform
    fullName: PnP.Framework.Modernization.Transform.BaseTransform
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of BaseTransform, T)
    nameWithType: ObjectExtensions.Set(Of BaseTransform, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.BaseTransform, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.BaseTransform
    name: BaseTransform
    nameWithType: BaseTransform
    fullName: PnP.Framework.Modernization.Transform.BaseTransform
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  name: RegisteredLogObservers
  nameWithType: BaseTransform.RegisteredLogObservers
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
- uid: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  commentId: T:System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ILogObserver>
  nameWithType: IList<ILogObserver>
  fullName: System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>
  nameWithType.vb: IList(Of ILogObserver)
  fullName.vb: System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver)
  name.vb: IList(Of ILogObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Modernization.Transform.BaseTransform.#ctor*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.#ctor
  name: BaseTransform
  nameWithType: BaseTransform.BaseTransform
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.BaseTransform
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
  name: RegisterObserver
  nameWithType: BaseTransform.RegisterObserver
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
- uid: PnP.Framework.Modernization.Telemetry.ILogObserver
  commentId: T:PnP.Framework.Modernization.Telemetry.ILogObserver
  parent: PnP.Framework.Modernization.Telemetry
  name: ILogObserver
  nameWithType: ILogObserver
  fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
- uid: PnP.Framework.Modernization.Telemetry
  commentId: N:PnP.Framework.Modernization.Telemetry
  name: PnP.Framework.Modernization.Telemetry
  nameWithType: PnP.Framework.Modernization.Telemetry
  fullName: PnP.Framework.Modernization.Telemetry
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  name: FlushObservers
  nameWithType: BaseTransform.FlushObservers
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver
  name: FlushSpecificObserver
  nameWithType: BaseTransform.FlushSpecificObserver
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.LogError
  name: LogError
  nameWithType: BaseTransform.LogError
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
  name: LogInfo
  nameWithType: BaseTransform.LogInfo
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
- uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  commentId: T:PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  parent: PnP.Framework.Modernization.Telemetry
  name: LogEntrySignificance
  nameWithType: LogEntrySignificance
  fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
  name: LogWarning
  nameWithType: BaseTransform.LogWarning
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
  name: LogDebug
  nameWithType: BaseTransform.LogDebug
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
- uid: PnP.Framework.Modernization.Transform.BaseTransform.Log*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.Log
  name: Log
  nameWithType: BaseTransform.Log
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log
- uid: PnP.Framework.Modernization.Telemetry.LogEntry
  commentId: T:PnP.Framework.Modernization.Telemetry.LogEntry
  parent: PnP.Framework.Modernization.Telemetry
  name: LogEntry
  nameWithType: LogEntry
  fullName: PnP.Framework.Modernization.Telemetry.LogEntry
- uid: PnP.Framework.Modernization.Telemetry.LogLevel
  commentId: T:PnP.Framework.Modernization.Telemetry.LogLevel
  parent: PnP.Framework.Modernization.Telemetry
  name: LogLevel
  nameWithType: LogLevel
  fullName: PnP.Framework.Modernization.Telemetry.LogLevel
- uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
  name: SetPageId
  nameWithType: BaseTransform.SetPageId
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
  name: GetExactVersion
  nameWithType: BaseTransform.GetExactVersion
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
- uid: Microsoft.SharePoint.Client.ClientRuntimeContext
  commentId: T:Microsoft.SharePoint.Client.ClientRuntimeContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientRuntimeContext
  nameWithType: ClientRuntimeContext
  fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion*
  commentId: Overload:PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
  name: GetVersion
  nameWithType: BaseTransform.GetVersion
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
- uid: PnP.Framework.Modernization.Transform.SPVersion
  commentId: T:PnP.Framework.Modernization.Transform.SPVersion
  parent: PnP.Framework.Modernization.Transform
  name: SPVersion
  nameWithType: SPVersion
  fullName: PnP.Framework.Modernization.Transform.SPVersion

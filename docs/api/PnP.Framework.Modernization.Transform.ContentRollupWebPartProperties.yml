### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  commentId: T:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  id: ContentRollupWebPartProperties
  parent: PnP.Framework.Modernization.Transform
  children:
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.#ctor
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId
  langs:
  - csharp
  - vb
  name: ContentRollupWebPartProperties
  nameWithType: ContentRollupWebPartProperties
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ContentRollupWebPartProperties
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 23
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: public class ContentRollupWebPartProperties
    content.vb: Public Class ContentRollupWebPartProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps
  id: DisplayMaps
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: DisplayMaps
  nameWithType: ContentRollupWebPartProperties.DisplayMaps
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DisplayMaps
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayMaps")]

      public string DisplayMaps { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="displayMaps")>

      Public Property DisplayMaps As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayMaps
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query
  id: Query
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ContentRollupWebPartProperties.Query
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Query
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 27
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "query")]

      public SearchQuery Query { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Transform.SearchQuery
    content.vb: >-
      <JsonProperty(PropertyName:="query")>

      Public Property Query As SearchQuery
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: query
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId
  id: ListId
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: ListId
  nameWithType: ContentRollupWebPartProperties.ListId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ListId
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 29
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "listId")]

      public string ListId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="listId")>

      Public Property ListId As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: listId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId
  id: LastListId
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: LastListId
  nameWithType: ContentRollupWebPartProperties.LastListId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LastListId
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 31
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastListId")]

      public string LastListId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="lastListId")>

      Public Property LastListId As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastListId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle
  id: ListTitle
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: ListTitle
  nameWithType: ContentRollupWebPartProperties.ListTitle
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ListTitle
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 33
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "listTitle")]

      public string ListTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="listTitle")>

      Public Property ListTitle As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: listTitle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary
  id: IsDefaultDocumentLibrary
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: IsDefaultDocumentLibrary
  nameWithType: ContentRollupWebPartProperties.IsDefaultDocumentLibrary
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsDefaultDocumentLibrary
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 35
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isDefaultDocumentLibrary")]

      public bool? IsDefaultDocumentLibrary { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="isDefaultDocumentLibrary")>

      Public Property IsDefaultDocumentLibrary As Boolean?
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isDefaultDocumentLibrary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField
  id: DocumentLibrarySortField
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: DocumentLibrarySortField
  nameWithType: ContentRollupWebPartProperties.DocumentLibrarySortField
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DocumentLibrarySortField
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 37
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "documentLibrarySortField")]

      public string DocumentLibrarySortField { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="documentLibrarySortField")>

      Public Property DocumentLibrarySortField As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: documentLibrarySortField
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml
  id: Caml
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: Caml
  nameWithType: ContentRollupWebPartProperties.Caml
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Caml
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 39
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "caml")]

      public string Caml { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="caml")>

      Public Property Caml As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: caml
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId
  id: TemplateId
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: TemplateId
  nameWithType: ContentRollupWebPartProperties.TemplateId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TemplateId
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 41
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "templateId")]

      public ContentRollupLayout? TemplateId { get; set; }
    parameters: []
    return:
      type: System.Nullable{PnP.Framework.Modernization.Transform.ContentRollupLayout}
    content.vb: >-
      <JsonProperty(PropertyName:="templateId")>

      Public Property TemplateId As ContentRollupLayout?
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: templateId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage
  id: MaxItemsPerPage
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: MaxItemsPerPage
  nameWithType: ContentRollupWebPartProperties.MaxItemsPerPage
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MaxItemsPerPage
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 43
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxItemsPerPage")]

      public int? MaxItemsPerPage { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty(PropertyName:="maxItemsPerPage")>

      Public Property MaxItemsPerPage As Integer?
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxItemsPerPage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage
  id: IsSeeAllPage
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: IsSeeAllPage
  nameWithType: ContentRollupWebPartProperties.IsSeeAllPage
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsSeeAllPage
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 45
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isSeeAllPage")]

      public bool? IsSeeAllPage { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="isSeeAllPage")>

      Public Property IsSeeAllPage As Boolean?
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isSeeAllPage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode
  id: IsAdvancedFilterMode
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: IsAdvancedFilterMode
  nameWithType: ContentRollupWebPartProperties.IsAdvancedFilterMode
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsAdvancedFilterMode
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 47
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isAdvancedFilterMode")]

      public bool? IsAdvancedFilterMode { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="isAdvancedFilterMode")>

      Public Property IsAdvancedFilterMode As Boolean?
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isAdvancedFilterMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites
  id: Sites
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: Sites
  nameWithType: ContentRollupWebPartProperties.Sites
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Sites
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 49
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sites")]

      public List<SiteMetadata> Sites { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PnP.Framework.Modernization.Transform.SiteMetadata}
    content.vb: >-
      <JsonProperty(PropertyName:="sites")>

      Public Property Sites As List(Of SiteMetadata)
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sites
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId
  id: LayoutId
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: LayoutId
  nameWithType: ContentRollupWebPartProperties.LayoutId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LayoutId
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 52
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "layoutId")]

      public string LayoutId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="layoutId")>

      Public Property LayoutId As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: layoutId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId
  id: DataProviderId
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: DataProviderId
  nameWithType: ContentRollupWebPartProperties.DataProviderId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DataProviderId
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 54
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "dataProviderId")]

      public string DataProviderId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="dataProviderId")>

      Public Property DataProviderId As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: dataProviderId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title
  id: Title
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ContentRollupWebPartProperties.Title
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Title
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 56
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "title")]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="title")>

      Public Property Title As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel
  id: AddToPageScreenReaderLabel
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: AddToPageScreenReaderLabel
  nameWithType: ContentRollupWebPartProperties.AddToPageScreenReaderLabel
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddToPageScreenReaderLabel
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 58
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "addToPageScreenReaderLabel")]

      public string AddToPageScreenReaderLabel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="addToPageScreenReaderLabel")>

      Public Property AddToPageScreenReaderLabel As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: addToPageScreenReaderLabel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty
  id: HideWebPartWhenEmpty
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: HideWebPartWhenEmpty
  nameWithType: ContentRollupWebPartProperties.HideWebPartWhenEmpty
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: HideWebPartWhenEmpty
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 60
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "hideWebPartWhenEmpty")]

      public bool? HideWebPartWhenEmpty { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="hideWebPartWhenEmpty")>

      Public Property HideWebPartWhenEmpty As Boolean?
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: hideWebPartWhenEmpty
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId
  id: WebId
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: WebId
  nameWithType: ContentRollupWebPartProperties.WebId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: WebId
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 62
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "webId")]

      public string WebId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="webId")>

      Public Property WebId As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: webId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId
  id: SiteId
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: SiteId
  nameWithType: ContentRollupWebPartProperties.SiteId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteId
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 64
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "siteId")]

      public string SiteId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="siteId")>

      Public Property SiteId As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: siteId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl
  id: BaseUrl
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: BaseUrl
  nameWithType: ContentRollupWebPartProperties.BaseUrl
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BaseUrl
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 66
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "baseUrl")]

      public string BaseUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="baseUrl")>

      Public Property BaseUrl As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: baseUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode
  id: QueryMode
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: QueryMode
  nameWithType: ContentRollupWebPartProperties.QueryMode
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: QueryMode
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 68
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "queryMode")]

      public string QueryMode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="queryMode")>

      Public Property QueryMode As String
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: queryMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget
  commentId: P:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget
  id: AudienceTarget
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: AudienceTarget
  nameWithType: ContentRollupWebPartProperties.AudienceTarget
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AudienceTarget
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 70
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "audienceTarget")]

      public bool AudienceTarget { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty(PropertyName:="audienceTarget")>

      Public Property AudienceTarget As Boolean
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: audienceTarget
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.#ctor
  commentId: M:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.#ctor
  id: '#ctor'
  parent: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  langs:
  - csharp
  - vb
  name: ContentRollupWebPartProperties()
  nameWithType: ContentRollupWebPartProperties.ContentRollupWebPartProperties()
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ContentRollupWebPartProperties()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 73
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: public ContentRollupWebPartProperties()
    content.vb: Public Sub New
  overload: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ContentRollupWebPartProperties>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ContentRollupWebPartProperties>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ContentRollupWebPartProperties)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ContentRollupWebPartProperties)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ContentRollupWebPartProperties>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ContentRollupWebPartProperties>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ContentRollupWebPartProperties)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ContentRollupWebPartProperties)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ContentRollupWebPartProperties, T>(Expression<Func<ContentRollupWebPartProperties, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ContentRollupWebPartProperties, T>(Expression<Func<ContentRollupWebPartProperties, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ContentRollupWebPartProperties, T)(Expression(Of Func(Of ContentRollupWebPartProperties, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ContentRollupWebPartProperties, T)(Expression(Of Func(Of ContentRollupWebPartProperties, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ContentRollupWebPartProperties, T>
    nameWithType: ObjectExtensions.Set<ContentRollupWebPartProperties, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
    name: ContentRollupWebPartProperties
    nameWithType: ContentRollupWebPartProperties
    fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ContentRollupWebPartProperties, T)
    nameWithType: ObjectExtensions.Set(Of ContentRollupWebPartProperties, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
    name: ContentRollupWebPartProperties
    nameWithType: ContentRollupWebPartProperties
    fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps
  name: DisplayMaps
  nameWithType: ContentRollupWebPartProperties.DisplayMaps
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DisplayMaps
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query
  name: Query
  nameWithType: ContentRollupWebPartProperties.Query
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Query
- uid: PnP.Framework.Modernization.Transform.SearchQuery
  commentId: T:PnP.Framework.Modernization.Transform.SearchQuery
  parent: PnP.Framework.Modernization.Transform
  name: SearchQuery
  nameWithType: SearchQuery
  fullName: PnP.Framework.Modernization.Transform.SearchQuery
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId
  name: ListId
  nameWithType: ContentRollupWebPartProperties.ListId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListId
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId
  name: LastListId
  nameWithType: ContentRollupWebPartProperties.LastListId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LastListId
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle
  name: ListTitle
  nameWithType: ContentRollupWebPartProperties.ListTitle
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ListTitle
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary
  name: IsDefaultDocumentLibrary
  nameWithType: ContentRollupWebPartProperties.IsDefaultDocumentLibrary
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsDefaultDocumentLibrary
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField
  name: DocumentLibrarySortField
  nameWithType: ContentRollupWebPartProperties.DocumentLibrarySortField
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DocumentLibrarySortField
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml
  name: Caml
  nameWithType: ContentRollupWebPartProperties.Caml
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Caml
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId
  name: TemplateId
  nameWithType: ContentRollupWebPartProperties.TemplateId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.TemplateId
- uid: System.Nullable{PnP.Framework.Modernization.Transform.ContentRollupLayout}
  commentId: T:System.Nullable{PnP.Framework.Modernization.Transform.ContentRollupLayout}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ContentRollupLayout>
  nameWithType: Nullable<ContentRollupLayout>
  fullName: System.Nullable<PnP.Framework.Modernization.Transform.ContentRollupLayout>
  nameWithType.vb: Nullable(Of ContentRollupLayout)
  fullName.vb: System.Nullable(Of PnP.Framework.Modernization.Transform.ContentRollupLayout)
  name.vb: Nullable(Of ContentRollupLayout)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.ContentRollupLayout
    name: ContentRollupLayout
    nameWithType: ContentRollupLayout
    fullName: PnP.Framework.Modernization.Transform.ContentRollupLayout
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.ContentRollupLayout
    name: ContentRollupLayout
    nameWithType: ContentRollupLayout
    fullName: PnP.Framework.Modernization.Transform.ContentRollupLayout
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage
  name: MaxItemsPerPage
  nameWithType: ContentRollupWebPartProperties.MaxItemsPerPage
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.MaxItemsPerPage
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage
  name: IsSeeAllPage
  nameWithType: ContentRollupWebPartProperties.IsSeeAllPage
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsSeeAllPage
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode
  name: IsAdvancedFilterMode
  nameWithType: ContentRollupWebPartProperties.IsAdvancedFilterMode
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.IsAdvancedFilterMode
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites
  name: Sites
  nameWithType: ContentRollupWebPartProperties.Sites
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Sites
- uid: System.Collections.Generic.List{PnP.Framework.Modernization.Transform.SiteMetadata}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Modernization.Transform.SiteMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SiteMetadata>
  nameWithType: List<SiteMetadata>
  fullName: System.Collections.Generic.List<PnP.Framework.Modernization.Transform.SiteMetadata>
  nameWithType.vb: List(Of SiteMetadata)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Modernization.Transform.SiteMetadata)
  name.vb: List(Of SiteMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.SiteMetadata
    name: SiteMetadata
    nameWithType: SiteMetadata
    fullName: PnP.Framework.Modernization.Transform.SiteMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.SiteMetadata
    name: SiteMetadata
    nameWithType: SiteMetadata
    fullName: PnP.Framework.Modernization.Transform.SiteMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId
  name: LayoutId
  nameWithType: ContentRollupWebPartProperties.LayoutId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.LayoutId
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId
  name: DataProviderId
  nameWithType: ContentRollupWebPartProperties.DataProviderId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.DataProviderId
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title
  name: Title
  nameWithType: ContentRollupWebPartProperties.Title
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.Title
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel
  name: AddToPageScreenReaderLabel
  nameWithType: ContentRollupWebPartProperties.AddToPageScreenReaderLabel
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AddToPageScreenReaderLabel
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty
  name: HideWebPartWhenEmpty
  nameWithType: ContentRollupWebPartProperties.HideWebPartWhenEmpty
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.HideWebPartWhenEmpty
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId
  name: WebId
  nameWithType: ContentRollupWebPartProperties.WebId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.WebId
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId
  name: SiteId
  nameWithType: ContentRollupWebPartProperties.SiteId
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.SiteId
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl
  name: BaseUrl
  nameWithType: ContentRollupWebPartProperties.BaseUrl
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.BaseUrl
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode
  name: QueryMode
  nameWithType: ContentRollupWebPartProperties.QueryMode
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.QueryMode
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget
  name: AudienceTarget
  nameWithType: ContentRollupWebPartProperties.AudienceTarget
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.AudienceTarget
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.#ctor*
  commentId: Overload:PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.#ctor
  name: ContentRollupWebPartProperties
  nameWithType: ContentRollupWebPartProperties.ContentRollupWebPartProperties
  fullName: PnP.Framework.Modernization.Transform.ContentRollupWebPartProperties.ContentRollupWebPartProperties

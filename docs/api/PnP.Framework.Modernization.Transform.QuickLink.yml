### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Transform.QuickLink
  commentId: T:PnP.Framework.Modernization.Transform.QuickLink
  id: QuickLink
  parent: PnP.Framework.Modernization.Transform
  children:
  - PnP.Framework.Modernization.Transform.QuickLink.AltText
  - PnP.Framework.Modernization.Transform.QuickLink.Description
  - PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon
  - PnP.Framework.Modernization.Transform.QuickLink.Id
  - PnP.Framework.Modernization.Transform.QuickLink.Image
  - PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl
  - PnP.Framework.Modernization.Transform.QuickLink.SourceItem
  - PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType
  - PnP.Framework.Modernization.Transform.QuickLink.Title
  langs:
  - csharp
  - vb
  name: QuickLink
  nameWithType: QuickLink
  fullName: PnP.Framework.Modernization.Transform.QuickLink
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: QuickLink
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 51
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: public class QuickLink
    content.vb: Public Class QuickLink
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Transform.QuickLink.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Transform.QuickLink.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.QuickLink,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Modernization.Transform.QuickLink.SourceItem
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.SourceItem
  id: SourceItem
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: SourceItem
  nameWithType: QuickLink.SourceItem
  fullName: PnP.Framework.Modernization.Transform.QuickLink.SourceItem
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SourceItem
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 56
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourceItem")]

      public SourceItemInfo SourceItem { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Transform.SourceItemInfo
    content.vb: >-
      <JsonProperty(PropertyName:="sourceItem")>

      Public Property SourceItem As SourceItemInfo
  overload: PnP.Framework.Modernization.Transform.QuickLink.SourceItem*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourceItem
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.Image
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.Image
  id: Image
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: QuickLink.Image
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Image
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Image
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 62
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "image")]

      public QuickLinkCustomizedImageInfo Image { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Transform.QuickLinkCustomizedImageInfo
    content.vb: >-
      <JsonProperty(PropertyName:="image")>

      Public Property Image As QuickLinkCustomizedImageInfo
  overload: PnP.Framework.Modernization.Transform.QuickLink.Image*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: image
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon
  id: FabricReactIcon
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: FabricReactIcon
  nameWithType: QuickLink.FabricReactIcon
  fullName: PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FabricReactIcon
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 68
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fabricReactIcon")]

      public QuickLinkFabricReactIconInfo FabricReactIcon { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Transform.QuickLinkFabricReactIconInfo
    content.vb: >-
      <JsonProperty(PropertyName:="fabricReactIcon")>

      Public Property FabricReactIcon As QuickLinkFabricReactIconInfo
  overload: PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fabricReactIcon
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType
  id: ThumbnailType
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: ThumbnailType
  nameWithType: QuickLink.ThumbnailType
  fullName: PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ThumbnailType
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 74
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "thumbnailType")]

      public QuickLinkThumbnailSourceType ThumbnailType { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Modernization.Transform.QuickLinkThumbnailSourceType
    content.vb: >-
      <JsonProperty(PropertyName:="thumbnailType")>

      Public Property ThumbnailType As QuickLinkThumbnailSourceType
  overload: PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: thumbnailType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl
  id: RawPreviewImageUrl
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: RawPreviewImageUrl
  nameWithType: QuickLink.RawPreviewImageUrl
  fullName: PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RawPreviewImageUrl
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 82
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "rawPreviewImageUrl")]

      public string RawPreviewImageUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="rawPreviewImageUrl")>

      Public Property RawPreviewImageUrl As String
  overload: PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: rawPreviewImageUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.Id
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.Id
  id: Id
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: QuickLink.Id
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Id
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Id
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 88
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As Integer
  overload: PnP.Framework.Modernization.Transform.QuickLink.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.Title
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.Title
  id: Title
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: QuickLink.Title
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Title
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Title
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 94
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "title")]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="title")>

      Public Property Title As String
  overload: PnP.Framework.Modernization.Transform.QuickLink.Title*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.Description
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.Description
  id: Description
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: QuickLink.Description
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Description
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Description
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 100
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "description")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="description")>

      Public Property Description As String
  overload: PnP.Framework.Modernization.Transform.QuickLink.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.QuickLink.AltText
  commentId: P:PnP.Framework.Modernization.Transform.QuickLink.AltText
  id: AltText
  parent: PnP.Framework.Modernization.Transform.QuickLink
  langs:
  - csharp
  - vb
  name: AltText
  nameWithType: QuickLink.AltText
  fullName: PnP.Framework.Modernization.Transform.QuickLink.AltText
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AltText
    path: ../src/lib/PnP.Framework/Modernization/Transform/QuickLinksTransformator.cs
    startLine: 106
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "altText")]

      public string AltText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="altText")>

      Public Property AltText As String
  overload: PnP.Framework.Modernization.Transform.QuickLink.AltText*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: altText
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.QuickLink.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<QuickLink>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<QuickLink>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.QuickLink>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of QuickLink)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.QuickLink)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of QuickLink)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<QuickLink>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<QuickLink>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.QuickLink>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of QuickLink)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of QuickLink)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.QuickLink)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.QuickLink.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.QuickLink,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<QuickLink, T>(Expression<Func<QuickLink, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<QuickLink, T>(Expression<Func<QuickLink, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.QuickLink, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Transform.QuickLink, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of QuickLink, T)(Expression(Of Func(Of QuickLink, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.QuickLink, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Transform.QuickLink, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of QuickLink, T)(Expression(Of Func(Of QuickLink, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<QuickLink, T>
    nameWithType: ObjectExtensions.Set<QuickLink, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.QuickLink, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.QuickLink
    name: QuickLink
    nameWithType: QuickLink
    fullName: PnP.Framework.Modernization.Transform.QuickLink
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of QuickLink, T)
    nameWithType: ObjectExtensions.Set(Of QuickLink, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.QuickLink, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.QuickLink
    name: QuickLink
    nameWithType: QuickLink
    fullName: PnP.Framework.Modernization.Transform.QuickLink
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Modernization.Transform.QuickLink.SourceItem*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.SourceItem
  name: SourceItem
  nameWithType: QuickLink.SourceItem
  fullName: PnP.Framework.Modernization.Transform.QuickLink.SourceItem
- uid: PnP.Framework.Modernization.Transform.SourceItemInfo
  commentId: T:PnP.Framework.Modernization.Transform.SourceItemInfo
  parent: PnP.Framework.Modernization.Transform
  name: SourceItemInfo
  nameWithType: SourceItemInfo
  fullName: PnP.Framework.Modernization.Transform.SourceItemInfo
- uid: PnP.Framework.Modernization.Transform.QuickLink.Image*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.Image
  name: Image
  nameWithType: QuickLink.Image
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Image
- uid: PnP.Framework.Modernization.Transform.QuickLinkCustomizedImageInfo
  commentId: T:PnP.Framework.Modernization.Transform.QuickLinkCustomizedImageInfo
  parent: PnP.Framework.Modernization.Transform
  name: QuickLinkCustomizedImageInfo
  nameWithType: QuickLinkCustomizedImageInfo
  fullName: PnP.Framework.Modernization.Transform.QuickLinkCustomizedImageInfo
- uid: PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon
  name: FabricReactIcon
  nameWithType: QuickLink.FabricReactIcon
  fullName: PnP.Framework.Modernization.Transform.QuickLink.FabricReactIcon
- uid: PnP.Framework.Modernization.Transform.QuickLinkFabricReactIconInfo
  commentId: T:PnP.Framework.Modernization.Transform.QuickLinkFabricReactIconInfo
  parent: PnP.Framework.Modernization.Transform
  name: QuickLinkFabricReactIconInfo
  nameWithType: QuickLinkFabricReactIconInfo
  fullName: PnP.Framework.Modernization.Transform.QuickLinkFabricReactIconInfo
- uid: PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType
  name: ThumbnailType
  nameWithType: QuickLink.ThumbnailType
  fullName: PnP.Framework.Modernization.Transform.QuickLink.ThumbnailType
- uid: PnP.Framework.Modernization.Transform.QuickLinkThumbnailSourceType
  commentId: T:PnP.Framework.Modernization.Transform.QuickLinkThumbnailSourceType
  parent: PnP.Framework.Modernization.Transform
  name: QuickLinkThumbnailSourceType
  nameWithType: QuickLinkThumbnailSourceType
  fullName: PnP.Framework.Modernization.Transform.QuickLinkThumbnailSourceType
- uid: PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl
  name: RawPreviewImageUrl
  nameWithType: QuickLink.RawPreviewImageUrl
  fullName: PnP.Framework.Modernization.Transform.QuickLink.RawPreviewImageUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Transform.QuickLink.Id*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.Id
  name: Id
  nameWithType: QuickLink.Id
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PnP.Framework.Modernization.Transform.QuickLink.Title*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.Title
  name: Title
  nameWithType: QuickLink.Title
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Title
- uid: PnP.Framework.Modernization.Transform.QuickLink.Description*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.Description
  name: Description
  nameWithType: QuickLink.Description
  fullName: PnP.Framework.Modernization.Transform.QuickLink.Description
- uid: PnP.Framework.Modernization.Transform.QuickLink.AltText*
  commentId: Overload:PnP.Framework.Modernization.Transform.QuickLink.AltText
  name: AltText
  nameWithType: QuickLink.AltText
  fullName: PnP.Framework.Modernization.Transform.QuickLink.AltText

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter
  commentId: T:PnP.Framework.Modernization.Transform.SearchQueryFilter
  id: SearchQueryFilter
  parent: PnP.Framework.Modernization.Transform
  children:
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.#ctor
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.Op
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.Value
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.Values
  langs:
  - csharp
  - vb
  name: SearchQueryFilter
  nameWithType: SearchQueryFilter
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SearchQueryFilter
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 166
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: public class SearchQueryFilter
    content.vb: Public Class SearchQueryFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Transform.SearchQueryFilter.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.SearchQueryFilter,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType
  id: FilterType
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: FilterType
  nameWithType: SearchQueryFilter.FilterType
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FilterType
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 168
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "filterType")]

      public FilterType? FilterType { get; set; }
    parameters: []
    return:
      type: System.Nullable{PnP.Framework.Modernization.Transform.FilterType}
    content.vb: >-
      <JsonProperty(PropertyName:="filterType")>

      Public Property FilterType As FilterType?
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: filterType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType
  id: UserType
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: UserType
  nameWithType: SearchQueryFilter.UserType
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UserType
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 170
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "userType")]

      public UserType? UserType { get; set; }
    parameters: []
    return:
      type: System.Nullable{PnP.Framework.Modernization.Transform.UserType}
    content.vb: >-
      <JsonProperty(PropertyName:="userType")>

      Public Property UserType As UserType?
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: userType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText
  id: FieldNameMatchText
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: FieldNameMatchText
  nameWithType: SearchQueryFilter.FieldNameMatchText
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FieldNameMatchText
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 172
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fieldNameMatchText")]

      public string FieldNameMatchText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="fieldNameMatchText")>

      Public Property FieldNameMatchText As String
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fieldNameMatchText
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText
  id: LastFieldNameMatchText
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: LastFieldNameMatchText
  nameWithType: SearchQueryFilter.LastFieldNameMatchText
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LastFieldNameMatchText
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 174
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastFieldNameMatchText")]

      public string LastFieldNameMatchText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="lastFieldNameMatchText")>

      Public Property LastFieldNameMatchText As String
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastFieldNameMatchText
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname
  id: Fieldname
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: Fieldname
  nameWithType: SearchQueryFilter.Fieldname
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Fieldname
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 176
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fieldname")]

      public string Fieldname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="fieldname")>

      Public Property Fieldname As String
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fieldname
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Op
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.Op
  id: Op
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: Op
  nameWithType: SearchQueryFilter.Op
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Op
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Op
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 178
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "op")]

      public FilterOperator? Op { get; set; }
    parameters: []
    return:
      type: System.Nullable{PnP.Framework.Modernization.Transform.FilterOperator}
    content.vb: >-
      <JsonProperty(PropertyName:="op")>

      Public Property Op As FilterOperator?
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.Op*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: op
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.Value
  id: Value
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SearchQueryFilter.Value
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Value
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 180
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "value")]

      public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <JsonProperty(PropertyName:="value")>

      Public Property Value As Object
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2
  id: Value2
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: Value2
  nameWithType: SearchQueryFilter.Value2
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Value2
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 182
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "value2")]

      public object Value2 { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <JsonProperty(PropertyName:="value2")>

      Public Property Value2 As Object
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: value2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Values
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.Values
  id: Values
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: SearchQueryFilter.Values
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Values
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Values
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 184
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonProperty(PropertyName = "values")]

      public List<object> Values { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: >-
      <JsonProperty(PropertyName:="values")>

      Public Property Values As List(Of Object)
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.Values*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: values
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP
  commentId: P:PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP
  id: ChainingOperatorUsedInCQWP
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: ChainingOperatorUsedInCQWP
  nameWithType: SearchQueryFilter.ChainingOperatorUsedInCQWP
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ChainingOperatorUsedInCQWP
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 186
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: >-
      [JsonIgnore]

      public FilterChainingOperator? ChainingOperatorUsedInCQWP { get; set; }
    parameters: []
    return:
      type: System.Nullable{PnP.Framework.Modernization.Transform.FilterChainingOperator}
    content.vb: >-
      <JsonIgnore>

      Public Property ChainingOperatorUsedInCQWP As FilterChainingOperator?
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.#ctor
  commentId: M:PnP.Framework.Modernization.Transform.SearchQueryFilter.#ctor
  id: '#ctor'
  parent: PnP.Framework.Modernization.Transform.SearchQueryFilter
  langs:
  - csharp
  - vb
  name: SearchQueryFilter()
  nameWithType: SearchQueryFilter.SearchQueryFilter()
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.SearchQueryFilter()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Transform/ContentByQuerySearchTransformator.cs
    startLine: 189
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: public SearchQueryFilter()
    content.vb: Public Sub New
  overload: PnP.Framework.Modernization.Transform.SearchQueryFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<SearchQueryFilter>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SearchQueryFilter>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.SearchQueryFilter>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of SearchQueryFilter)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.SearchQueryFilter)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of SearchQueryFilter)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<SearchQueryFilter>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SearchQueryFilter>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.SearchQueryFilter>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of SearchQueryFilter)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of SearchQueryFilter)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.SearchQueryFilter)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.SearchQueryFilter,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<SearchQueryFilter, T>(Expression<Func<SearchQueryFilter, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<SearchQueryFilter, T>(Expression<Func<SearchQueryFilter, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.SearchQueryFilter, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Transform.SearchQueryFilter, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of SearchQueryFilter, T)(Expression(Of Func(Of SearchQueryFilter, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.SearchQueryFilter, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Transform.SearchQueryFilter, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of SearchQueryFilter, T)(Expression(Of Func(Of SearchQueryFilter, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<SearchQueryFilter, T>
    nameWithType: ObjectExtensions.Set<SearchQueryFilter, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.SearchQueryFilter, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.SearchQueryFilter
    name: SearchQueryFilter
    nameWithType: SearchQueryFilter
    fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of SearchQueryFilter, T)
    nameWithType: ObjectExtensions.Set(Of SearchQueryFilter, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.SearchQueryFilter, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.SearchQueryFilter
    name: SearchQueryFilter
    nameWithType: SearchQueryFilter
    fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType
  name: FilterType
  nameWithType: SearchQueryFilter.FilterType
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.FilterType
- uid: System.Nullable{PnP.Framework.Modernization.Transform.FilterType}
  commentId: T:System.Nullable{PnP.Framework.Modernization.Transform.FilterType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<FilterType>
  nameWithType: Nullable<FilterType>
  fullName: System.Nullable<PnP.Framework.Modernization.Transform.FilterType>
  nameWithType.vb: Nullable(Of FilterType)
  fullName.vb: System.Nullable(Of PnP.Framework.Modernization.Transform.FilterType)
  name.vb: Nullable(Of FilterType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.FilterType
    name: FilterType
    nameWithType: FilterType
    fullName: PnP.Framework.Modernization.Transform.FilterType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.FilterType
    name: FilterType
    nameWithType: FilterType
    fullName: PnP.Framework.Modernization.Transform.FilterType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType
  name: UserType
  nameWithType: SearchQueryFilter.UserType
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.UserType
- uid: System.Nullable{PnP.Framework.Modernization.Transform.UserType}
  commentId: T:System.Nullable{PnP.Framework.Modernization.Transform.UserType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UserType>
  nameWithType: Nullable<UserType>
  fullName: System.Nullable<PnP.Framework.Modernization.Transform.UserType>
  nameWithType.vb: Nullable(Of UserType)
  fullName.vb: System.Nullable(Of PnP.Framework.Modernization.Transform.UserType)
  name.vb: Nullable(Of UserType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.UserType
    name: UserType
    nameWithType: UserType
    fullName: PnP.Framework.Modernization.Transform.UserType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.UserType
    name: UserType
    nameWithType: UserType
    fullName: PnP.Framework.Modernization.Transform.UserType
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText
  name: FieldNameMatchText
  nameWithType: SearchQueryFilter.FieldNameMatchText
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.FieldNameMatchText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText
  name: LastFieldNameMatchText
  nameWithType: SearchQueryFilter.LastFieldNameMatchText
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.LastFieldNameMatchText
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname
  name: Fieldname
  nameWithType: SearchQueryFilter.Fieldname
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Fieldname
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Op*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.Op
  name: Op
  nameWithType: SearchQueryFilter.Op
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Op
- uid: System.Nullable{PnP.Framework.Modernization.Transform.FilterOperator}
  commentId: T:System.Nullable{PnP.Framework.Modernization.Transform.FilterOperator}
  parent: System
  definition: System.Nullable`1
  name: Nullable<FilterOperator>
  nameWithType: Nullable<FilterOperator>
  fullName: System.Nullable<PnP.Framework.Modernization.Transform.FilterOperator>
  nameWithType.vb: Nullable(Of FilterOperator)
  fullName.vb: System.Nullable(Of PnP.Framework.Modernization.Transform.FilterOperator)
  name.vb: Nullable(Of FilterOperator)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.FilterOperator
    name: FilterOperator
    nameWithType: FilterOperator
    fullName: PnP.Framework.Modernization.Transform.FilterOperator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.FilterOperator
    name: FilterOperator
    nameWithType: FilterOperator
    fullName: PnP.Framework.Modernization.Transform.FilterOperator
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.Value
  name: Value
  nameWithType: SearchQueryFilter.Value
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2
  name: Value2
  nameWithType: SearchQueryFilter.Value2
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Value2
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.Values*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.Values
  name: Values
  nameWithType: SearchQueryFilter.Values
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.Values
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP
  name: ChainingOperatorUsedInCQWP
  nameWithType: SearchQueryFilter.ChainingOperatorUsedInCQWP
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.ChainingOperatorUsedInCQWP
- uid: System.Nullable{PnP.Framework.Modernization.Transform.FilterChainingOperator}
  commentId: T:System.Nullable{PnP.Framework.Modernization.Transform.FilterChainingOperator}
  parent: System
  definition: System.Nullable`1
  name: Nullable<FilterChainingOperator>
  nameWithType: Nullable<FilterChainingOperator>
  fullName: System.Nullable<PnP.Framework.Modernization.Transform.FilterChainingOperator>
  nameWithType.vb: Nullable(Of FilterChainingOperator)
  fullName.vb: System.Nullable(Of PnP.Framework.Modernization.Transform.FilterChainingOperator)
  name.vb: Nullable(Of FilterChainingOperator)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.FilterChainingOperator
    name: FilterChainingOperator
    nameWithType: FilterChainingOperator
    fullName: PnP.Framework.Modernization.Transform.FilterChainingOperator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.FilterChainingOperator
    name: FilterChainingOperator
    nameWithType: FilterChainingOperator
    fullName: PnP.Framework.Modernization.Transform.FilterChainingOperator
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.SearchQueryFilter.#ctor*
  commentId: Overload:PnP.Framework.Modernization.Transform.SearchQueryFilter.#ctor
  name: SearchQueryFilter
  nameWithType: SearchQueryFilter.SearchQueryFilter
  fullName: PnP.Framework.Modernization.Transform.SearchQueryFilter.SearchQueryFilter

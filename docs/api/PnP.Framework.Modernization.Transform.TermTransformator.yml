### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Modernization.Transform.TermTransformator
  commentId: T:PnP.Framework.Modernization.Transform.TermTransformator
  id: TermTransformator
  parent: PnP.Framework.Modernization.Transform
  children:
  - PnP.Framework.Modernization.Transform.TermTransformator.#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  - PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore(System.Guid,System.Guid,System.Guid,System.Boolean)
  - PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Guid,System.String)
  - PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid)
  - PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema(System.String,System.Boolean)
  - PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet(System.Guid,Microsoft.SharePoint.Client.ClientContext)
  - PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms(System.String,Microsoft.SharePoint.Client.Taxonomy.Term,System.Guid,Microsoft.SharePoint.Client.ClientRuntimeContext)
  - PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  - PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.String)
  - PnP.Framework.Modernization.Transform.TermTransformator.TermGroupUnknownName
  - PnP.Framework.Modernization.Transform.TermTransformator.TermNodeDelimiter
  - PnP.Framework.Modernization.Transform.TermTransformator.Transform(PnP.Framework.Modernization.Entities.TermData)
  - PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection(Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection)
  langs:
  - csharp
  - vb
  name: TermTransformator
  nameWithType: TermTransformator
  fullName: PnP.Framework.Modernization.Transform.TermTransformator
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TermTransformator
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: 'public class TermTransformator : BaseTransform'
    content.vb: >-
      Public Class TermTransformator
          Inherits BaseTransform
  inheritance:
  - System.Object
  - PnP.Framework.Modernization.Transform.BaseTransform
  inheritedMembers:
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  - PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  - PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  - PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Modernization.Transform.TermTransformator.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Modernization.Transform.TermTransformator.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.TermTransformator,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Modernization.Transform.TermTransformator.TermNodeDelimiter
  commentId: F:PnP.Framework.Modernization.Transform.TermTransformator.TermNodeDelimiter
  id: TermNodeDelimiter
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: TermNodeDelimiter
  nameWithType: TermTransformator.TermNodeDelimiter
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.TermNodeDelimiter
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TermNodeDelimiter
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: public const string TermNodeDelimiter = "|"
    return:
      type: System.String
    content.vb: Public Const TermNodeDelimiter As String = "|"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Modernization.Transform.TermTransformator.TermGroupUnknownName
  commentId: F:PnP.Framework.Modernization.Transform.TermTransformator.TermGroupUnknownName
  id: TermGroupUnknownName
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: TermGroupUnknownName
  nameWithType: TermTransformator.TermGroupUnknownName
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.TermGroupUnknownName
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TermGroupUnknownName
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 23
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  syntax:
    content: public const string TermGroupUnknownName = "DEFAULT"
    return:
      type: System.String
    content.vb: Public Const TermGroupUnknownName As String = "DEFAULT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Modernization.Transform.TermTransformator.#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})
  id: '#ctor(PnP.Framework.Modernization.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver})'
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: TermTransformator(BaseTransformationInformation, ClientContext, ClientContext, IList<ILogObserver>)
  nameWithType: TermTransformator.TermTransformator(BaseTransformationInformation, ClientContext, ClientContext, IList<ILogObserver>)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.TermTransformator(PnP.Framework.Modernization.Transform.BaseTransformationInformation, Microsoft.SharePoint.Client.ClientContext, Microsoft.SharePoint.Client.ClientContext, System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 34
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nConstructor for the Term Transformator class\n"
  example: []
  syntax:
    content: public TermTransformator(BaseTransformationInformation baseTransformationInformation, ClientContext sourceContext, ClientContext targetContext, IList<ILogObserver> logObservers = null)
    parameters:
    - id: baseTransformationInformation
      type: PnP.Framework.Modernization.Transform.BaseTransformationInformation
      description: ''
    - id: sourceContext
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: targetContext
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: logObservers
      type: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
      description: ''
    content.vb: Public Sub New(baseTransformationInformation As BaseTransformationInformation, sourceContext As ClientContext, targetContext As ClientContext, logObservers As IList(Of ILogObserver) = Nothing)
  overload: PnP.Framework.Modernization.Transform.TermTransformator.#ctor*
  nameWithType.vb: TermTransformator.TermTransformator(BaseTransformationInformation, ClientContext, ClientContext, IList(Of ILogObserver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Modernization.Transform.TermTransformator.TermTransformator(PnP.Framework.Modernization.Transform.BaseTransformationInformation, Microsoft.SharePoint.Client.ClientContext, Microsoft.SharePoint.Client.ClientContext, System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver))
  name.vb: TermTransformator(BaseTransformationInformation, ClientContext, ClientContext, IList(Of ILogObserver))
- uid: PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection(Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection(Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection)
  id: TransformCollection(Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: TransformCollection(TaxonomyFieldValueCollection)
  nameWithType: TermTransformator.TransformCollection(TaxonomyFieldValueCollection)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection(Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TransformCollection
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 82
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nTransforms a collection of terms in a dictionary\n"
  example: []
  syntax:
    content: public Tuple<TaxonomyFieldValueCollection, List<TaxonomyFieldValue>> TransformCollection(TaxonomyFieldValueCollection taxonomyFieldValueCollection)
    parameters:
    - id: taxonomyFieldValueCollection
      type: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
    return:
      type: System.Tuple{Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection,System.Collections.Generic.List{Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue}}
      description: "\nTuple&lt;TaxonomyFieldValueCollection,List&lt;TaxonomyFieldValue>> \nTaxonomyFieldValueCollection - Original Array\nList&lt;TaxonomyFieldValue> - Items to remove as they are not resolved\n"
    content.vb: Public Function TransformCollection(taxonomyFieldValueCollection As TaxonomyFieldValueCollection) As Tuple(Of TaxonomyFieldValueCollection, List(Of TaxonomyFieldValue))
  overload: PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.TermTransformator.Transform(PnP.Framework.Modernization.Entities.TermData)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.Transform(PnP.Framework.Modernization.Entities.TermData)
  id: Transform(PnP.Framework.Modernization.Entities.TermData)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: Transform(TermData)
  nameWithType: TermTransformator.Transform(TermData)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.Transform(PnP.Framework.Modernization.Entities.TermData)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Transform
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 107
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nMain entry method for transforming terms\n"
  example: []
  syntax:
    content: public TermData Transform(TermData inputSourceTerm)
    parameters:
    - id: inputSourceTerm
      type: PnP.Framework.Modernization.Entities.TermData
    return:
      type: PnP.Framework.Modernization.Entities.TermData
    content.vb: Public Function Transform(inputSourceTerm As TermData) As TermData
  overload: PnP.Framework.Modernization.Transform.TermTransformator.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore(System.Guid,System.Guid,System.Guid,System.Boolean)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore(System.Guid,System.Guid,System.Guid,System.Boolean)
  id: CacheTermsFromTermStore(System.Guid,System.Guid,System.Guid,System.Boolean)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: CacheTermsFromTermStore(Guid, Guid, Guid, Boolean)
  nameWithType: TermTransformator.CacheTermsFromTermStore(Guid, Guid, Guid, Boolean)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore(System.Guid, System.Guid, System.Guid, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CacheTermsFromTermStore
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 234
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nSets the cache for contents of the term store to be used when getting terms for fields\n"
  example: []
  syntax:
    content: public void CacheTermsFromTermStore(Guid sourceTermSetId, Guid targetTermSetId, Guid sourceSspId, bool isSP2010)
    parameters:
    - id: sourceTermSetId
      type: System.Guid
      description: ''
    - id: targetTermSetId
      type: System.Guid
      description: ''
    - id: sourceSspId
      type: System.Guid
      description: ''
    - id: isSP2010
      type: System.Boolean
      description: ''
    content.vb: Public Sub CacheTermsFromTermStore(sourceTermSetId As Guid, targetTermSetId As Guid, sourceSspId As Guid, isSP2010 As Boolean)
  overload: PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet(System.Guid,Microsoft.SharePoint.Client.ClientContext)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet(System.Guid,Microsoft.SharePoint.Client.ClientContext)
  id: GetAllTermsFromTermSet(System.Guid,Microsoft.SharePoint.Client.ClientContext)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: GetAllTermsFromTermSet(Guid, ClientContext)
  nameWithType: TermTransformator.GetAllTermsFromTermSet(Guid, ClientContext)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet(System.Guid, Microsoft.SharePoint.Client.ClientContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetAllTermsFromTermSet
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 257
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nExtract all the terms from a termset for caching and quicker processing\n"
  example: []
  syntax:
    content: public static Dictionary<Guid, TermData> GetAllTermsFromTermSet(Guid termSetId, ClientContext context)
    parameters:
    - id: termSetId
      type: System.Guid
      description: ''
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
      description: ''
    content.vb: Public Shared Function GetAllTermsFromTermSet(termSetId As Guid, context As ClientContext) As Dictionary(Of Guid, TermData)
  overload: PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms(System.String,Microsoft.SharePoint.Client.Taxonomy.Term,System.Guid,Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms(System.String,Microsoft.SharePoint.Client.Taxonomy.Term,System.Guid,Microsoft.SharePoint.Client.ClientRuntimeContext)
  id: ParseSubTerms(System.String,Microsoft.SharePoint.Client.Taxonomy.Term,System.Guid,Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: ParseSubTerms(String, Term, Guid, ClientRuntimeContext)
  nameWithType: TermTransformator.ParseSubTerms(String, Term, Guid, ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms(System.String, Microsoft.SharePoint.Client.Taxonomy.Term, System.Guid, Microsoft.SharePoint.Client.ClientRuntimeContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParseSubTerms
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 314
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nGets the term labels within a term recursively\n"
  example: []
  syntax:
    content: public static Dictionary<Guid, TermData> ParseSubTerms(string subTermPath, Term term, Guid termSetId, ClientRuntimeContext clientContext)
    parameters:
    - id: subTermPath
      type: System.String
      description: ''
    - id: term
      type: Microsoft.SharePoint.Client.Taxonomy.Term
      description: ''
    - id: termSetId
      type: System.Guid
      description: ''
    - id: clientContext
      type: Microsoft.SharePoint.Client.ClientRuntimeContext
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
      description: ''
    content.vb: Public Shared Function ParseSubTerms(subTermPath As String, term As Term, termSetId As Guid, clientContext As ClientRuntimeContext) As Dictionary(Of Guid, TermData)
  overload: PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.String)
  id: ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.String)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: ResolveTermInCache(ClientContext, String)
  nameWithType: TermTransformator.ResolveTermInCache(ClientContext, String)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResolveTermInCache
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 350
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nValidate the source term contains the path and is recognised in the term store\n"
  example: []
  syntax:
    content: public TermData ResolveTermInCache(ClientContext context, string termPath)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: termPath
      type: System.String
      description: ''
    return:
      type: PnP.Framework.Modernization.Entities.TermData
    content.vb: Public Function ResolveTermInCache(context As ClientContext, termPath As String) As TermData
  overload: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  id: ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext,System.Guid)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: ResolveTermInCache(ClientContext, Guid)
  nameWithType: TermTransformator.ResolveTermInCache(ClientContext, Guid)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache(Microsoft.SharePoint.Client.ClientContext, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResolveTermInCache
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 369
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nValidate the source term contains the GUID and is recognised in the term store\n"
  example: []
  syntax:
    content: public TermData ResolveTermInCache(ClientContext context, Guid termId)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: termId
      type: System.Guid
      description: ''
    return:
      type: PnP.Framework.Modernization.Entities.TermData
    content.vb: Public Function ResolveTermInCache(context As ClientContext, termId As Guid) As TermData
  overload: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema(System.String,System.Boolean)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema(System.String,System.Boolean)
  id: ExtractTermSetIdOrSspIdFromXmlSchema(System.String,System.Boolean)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: ExtractTermSetIdOrSspIdFromXmlSchema(String, Boolean)
  nameWithType: TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema(String, Boolean)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExtractTermSetIdOrSspIdFromXmlSchema
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 386
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nExtracts the term set id from the xml schema\n"
  example: []
  syntax:
    content: public static string ExtractTermSetIdOrSspIdFromXmlSchema(string xmlfieldSchema, bool findSspId = false)
    parameters:
    - id: xmlfieldSchema
      type: System.String
      description: XML Schema
    - id: findSspId
      type: System.Boolean
      description: If true the SspId will be returned, otherwise the TermSetId will be
    return:
      type: System.String
      description: TermSetId or SspId depending on <code data-dev-comment-type="paramref" class="paramref">findSspId</code> value
    content.vb: Public Shared Function ExtractTermSetIdOrSspIdFromXmlSchema(xmlfieldSchema As String, findSspId As Boolean = False) As String
  overload: PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid)
  id: CallTaxonomyWebServiceFindTermSetId(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: CallTaxonomyWebServiceFindTermSetId(ClientContext, Guid, Guid)
  nameWithType: TermTransformator.CallTaxonomyWebServiceFindTermSetId(ClientContext, Guid, Guid)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId(Microsoft.SharePoint.Client.ClientContext, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CallTaxonomyWebServiceFindTermSetId
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 428
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nCalls the web services to get the termset details\n"
  example: []
  syntax:
    content: public static Dictionary<Guid, TermData> CallTaxonomyWebServiceFindTermSetId(ClientContext context, Guid sspId, Guid termSetId)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: sspId
      type: System.Guid
      description: ''
    - id: termSetId
      type: System.Guid
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
      description: ''
    content.vb: Public Shared Function CallTaxonomyWebServiceFindTermSetId(context As ClientContext, sspId As Guid, termSetId As Guid) As Dictionary(Of Guid, TermData)
  overload: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Guid,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Guid,System.String)
  id: CallTaxonomyWebServiceFindChildTerms(Microsoft.SharePoint.Client.ClientContext,System.Guid,System.Guid,System.Guid,System.String)
  parent: PnP.Framework.Modernization.Transform.TermTransformator
  langs:
  - csharp
  - vb
  name: CallTaxonomyWebServiceFindChildTerms(ClientContext, Guid, Guid, Guid, String)
  nameWithType: TermTransformator.CallTaxonomyWebServiceFindChildTerms(ClientContext, Guid, Guid, Guid, String)
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms(Microsoft.SharePoint.Client.ClientContext, System.Guid, System.Guid, System.Guid, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CallTaxonomyWebServiceFindChildTerms
    path: ../src/lib/PnP.Framework/Modernization/Transform/TermTransformator.cs
    startLine: 584
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Modernization.Transform
  summary: "\nFinds the child terms using the fall back web services\n"
  example: []
  syntax:
    content: public static Dictionary<Guid, TermData> CallTaxonomyWebServiceFindChildTerms(ClientContext context, Guid sspId, Guid termSetId, Guid termId, string subTermPath)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: ''
    - id: sspId
      type: System.Guid
      description: ''
    - id: termSetId
      type: System.Guid
      description: ''
    - id: termId
      type: System.Guid
      description: ''
    - id: subTermPath
      type: System.String
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
      description: ''
    content.vb: Public Shared Function CallTaxonomyWebServiceFindChildTerms(context As ClientContext, sspId As Guid, termSetId As Guid, termId As Guid, subTermPath As String) As Dictionary(Of Guid, TermData)
  overload: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Modernization.Transform
  commentId: N:PnP.Framework.Modernization.Transform
  name: PnP.Framework.Modernization.Transform
  nameWithType: PnP.Framework.Modernization.Transform
  fullName: PnP.Framework.Modernization.Transform
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Modernization.Transform.BaseTransform
  commentId: T:PnP.Framework.Modernization.Transform.BaseTransform
  parent: PnP.Framework.Modernization.Transform
  name: BaseTransform
  nameWithType: BaseTransform
  fullName: PnP.Framework.Modernization.Transform.BaseTransform
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  commentId: P:PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: RegisteredLogObservers
  nameWithType: BaseTransform.RegisteredLogObservers
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisteredLogObservers
- uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: RegisterObserver(ILogObserver)
  nameWithType: BaseTransform.RegisterObserver(ILogObserver)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
    name: RegisterObserver
    nameWithType: BaseTransform.RegisterObserver
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver(PnP.Framework.Modernization.Telemetry.ILogObserver)
    name: RegisterObserver
    nameWithType: BaseTransform.RegisterObserver
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.RegisterObserver
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: FlushObservers()
  nameWithType: BaseTransform.FlushObservers()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
    name: FlushObservers
    nameWithType: BaseTransform.FlushObservers
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
    name: FlushObservers
    nameWithType: BaseTransform.FlushObservers
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushObservers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: FlushSpecificObserver<T>()
  nameWithType: BaseTransform.FlushSpecificObserver<T>()
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver<T>()
  nameWithType.vb: BaseTransform.FlushSpecificObserver(Of T)()
  fullName.vb: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver(Of T)()
  name.vb: FlushSpecificObserver(Of T)()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
    name: FlushSpecificObserver<T>
    nameWithType: BaseTransform.FlushSpecificObserver<T>
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver``1
    name: FlushSpecificObserver(Of T)
    nameWithType: BaseTransform.FlushSpecificObserver(Of T)
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.FlushSpecificObserver(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogError(String, String, Exception, Boolean, Boolean)
  nameWithType: BaseTransform.LogError(String, String, Exception, Boolean, Boolean)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String, System.String, System.Exception, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
    name: LogError
    nameWithType: BaseTransform.LogError
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)
    name: LogError
    nameWithType: BaseTransform.LogError
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogInfo(String, String, LogEntrySignificance)
  nameWithType: BaseTransform.LogInfo(String, String, LogEntrySignificance)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String, System.String, PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
    name: LogInfo
    nameWithType: BaseTransform.LogInfo
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
    name: LogEntrySignificance
    nameWithType: LogEntrySignificance
    fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo(System.String,System.String,PnP.Framework.Modernization.Telemetry.LogEntrySignificance)
    name: LogInfo
    nameWithType: BaseTransform.LogInfo
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
    name: LogEntrySignificance
    nameWithType: LogEntrySignificance
    fullName: PnP.Framework.Modernization.Telemetry.LogEntrySignificance
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogWarning(String, String)
  nameWithType: BaseTransform.LogWarning(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
    name: LogWarning
    nameWithType: BaseTransform.LogWarning
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning(System.String,System.String)
    name: LogWarning
    nameWithType: BaseTransform.LogWarning
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: LogDebug(String, String)
  nameWithType: BaseTransform.LogDebug(String, String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
    name: LogDebug
    nameWithType: BaseTransform.LogDebug
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug(System.String,System.String)
    name: LogDebug
    nameWithType: BaseTransform.LogDebug
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  name: Log(LogEntry, LogLevel)
  nameWithType: BaseTransform.Log(LogEntry, LogLevel)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry, PnP.Framework.Modernization.Telemetry.LogLevel)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
    name: Log
    nameWithType: BaseTransform.Log
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: PnP.Framework.Modernization.Telemetry.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.Log(PnP.Framework.Modernization.Telemetry.LogEntry,PnP.Framework.Modernization.Telemetry.LogLevel)
    name: Log
    nameWithType: BaseTransform.Log
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Modernization.Telemetry.LogEntry
    name: LogEntry
    nameWithType: LogEntry
    fullName: PnP.Framework.Modernization.Telemetry.LogEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Telemetry.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: PnP.Framework.Modernization.Telemetry.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: SetPageId(String)
  nameWithType: BaseTransform.SetPageId(String)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
    name: SetPageId
    nameWithType: BaseTransform.SetPageId
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId(System.String)
    name: SetPageId
    nameWithType: BaseTransform.SetPageId
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.SetPageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: GetExactVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetExactVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetExactVersion
    nameWithType: BaseTransform.GetExactVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetExactVersion
    nameWithType: BaseTransform.GetExactVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetExactVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  commentId: M:PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  parent: PnP.Framework.Modernization.Transform.BaseTransform
  isExternal: true
  name: GetVersion(ClientRuntimeContext)
  nameWithType: BaseTransform.GetVersion(ClientRuntimeContext)
  fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetVersion
    nameWithType: BaseTransform.GetVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)
    name: GetVersion
    nameWithType: BaseTransform.GetVersion
    fullName: PnP.Framework.Modernization.Transform.BaseTransform.GetVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.TermTransformator.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<TermTransformator>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TermTransformator>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.TermTransformator>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of TermTransformator)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.TermTransformator)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of TermTransformator)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<TermTransformator>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TermTransformator>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Modernization.Transform.TermTransformator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of TermTransformator)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of TermTransformator)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Modernization.Transform.TermTransformator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.TermTransformator.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Modernization.Transform.TermTransformator,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<TermTransformator, T>(Expression<Func<TermTransformator, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TermTransformator, T>(Expression<Func<TermTransformator, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.TermTransformator, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Modernization.Transform.TermTransformator, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TermTransformator, T)(Expression(Of Func(Of TermTransformator, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.TermTransformator, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Modernization.Transform.TermTransformator, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TermTransformator, T)(Expression(Of Func(Of TermTransformator, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TermTransformator, T>
    nameWithType: ObjectExtensions.Set<TermTransformator, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Modernization.Transform.TermTransformator, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Transform.TermTransformator
    name: TermTransformator
    nameWithType: TermTransformator
    fullName: PnP.Framework.Modernization.Transform.TermTransformator
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TermTransformator, T)
    nameWithType: ObjectExtensions.Set(Of TermTransformator, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Modernization.Transform.TermTransformator, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Transform.TermTransformator
    name: TermTransformator
    nameWithType: TermTransformator
    fullName: PnP.Framework.Modernization.Transform.TermTransformator
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Modernization.Transform.TermTransformator.#ctor*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.#ctor
  name: TermTransformator
  nameWithType: TermTransformator.TermTransformator
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.TermTransformator
- uid: PnP.Framework.Modernization.Transform.BaseTransformationInformation
  commentId: T:PnP.Framework.Modernization.Transform.BaseTransformationInformation
  parent: PnP.Framework.Modernization.Transform
  name: BaseTransformationInformation
  nameWithType: BaseTransformationInformation
  fullName: PnP.Framework.Modernization.Transform.BaseTransformationInformation
- uid: Microsoft.SharePoint.Client.ClientContext
  commentId: T:Microsoft.SharePoint.Client.ClientContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientContext
  nameWithType: ClientContext
  fullName: Microsoft.SharePoint.Client.ClientContext
- uid: System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  commentId: T:System.Collections.Generic.IList{PnP.Framework.Modernization.Telemetry.ILogObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ILogObserver>
  nameWithType: IList<ILogObserver>
  fullName: System.Collections.Generic.IList<PnP.Framework.Modernization.Telemetry.ILogObserver>
  nameWithType.vb: IList(Of ILogObserver)
  fullName.vb: System.Collections.Generic.IList(Of PnP.Framework.Modernization.Telemetry.ILogObserver)
  name.vb: IList(Of ILogObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Modernization.Telemetry.ILogObserver
    name: ILogObserver
    nameWithType: ILogObserver
    fullName: PnP.Framework.Modernization.Telemetry.ILogObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection
  name: TransformCollection
  nameWithType: TermTransformator.TransformCollection
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.TransformCollection
- uid: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
  commentId: T:Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
  parent: Microsoft.SharePoint.Client.Taxonomy
  isExternal: true
  name: TaxonomyFieldValueCollection
  nameWithType: TaxonomyFieldValueCollection
  fullName: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
- uid: System.Tuple{Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection,System.Collections.Generic.List{Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue}}
  commentId: T:System.Tuple{Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection,System.Collections.Generic.List{Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue}}
  parent: System
  definition: System.Tuple`2
  name: Tuple<TaxonomyFieldValueCollection, List<TaxonomyFieldValue>>
  nameWithType: Tuple<TaxonomyFieldValueCollection, List<TaxonomyFieldValue>>
  fullName: System.Tuple<Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection, System.Collections.Generic.List<Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue>>
  nameWithType.vb: Tuple(Of TaxonomyFieldValueCollection, List(Of TaxonomyFieldValue))
  fullName.vb: System.Tuple(Of Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection, System.Collections.Generic.List(Of Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue))
  name.vb: Tuple(Of TaxonomyFieldValueCollection, List(Of TaxonomyFieldValue))
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
    name: TaxonomyFieldValueCollection
    nameWithType: TaxonomyFieldValueCollection
    fullName: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue
    name: TaxonomyFieldValue
    nameWithType: TaxonomyFieldValue
    fullName: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
    name: TaxonomyFieldValueCollection
    nameWithType: TaxonomyFieldValueCollection
    fullName: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue
    name: TaxonomyFieldValue
    nameWithType: TaxonomyFieldValue
    fullName: Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SharePoint.Client.Taxonomy
  commentId: N:Microsoft.SharePoint.Client.Taxonomy
  isExternal: true
  name: Microsoft.SharePoint.Client.Taxonomy
  nameWithType: Microsoft.SharePoint.Client.Taxonomy
  fullName: Microsoft.SharePoint.Client.Taxonomy
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.TermTransformator.Transform*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.Transform
  name: Transform
  nameWithType: TermTransformator.Transform
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.Transform
- uid: PnP.Framework.Modernization.Entities.TermData
  commentId: T:PnP.Framework.Modernization.Entities.TermData
  parent: PnP.Framework.Modernization.Entities
  name: TermData
  nameWithType: TermData
  fullName: PnP.Framework.Modernization.Entities.TermData
- uid: PnP.Framework.Modernization.Entities
  commentId: N:PnP.Framework.Modernization.Entities
  name: PnP.Framework.Modernization.Entities
  nameWithType: PnP.Framework.Modernization.Entities
  fullName: PnP.Framework.Modernization.Entities
- uid: PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore
  name: CacheTermsFromTermStore
  nameWithType: TermTransformator.CacheTermsFromTermStore
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.CacheTermsFromTermStore
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet
  name: GetAllTermsFromTermSet
  nameWithType: TermTransformator.GetAllTermsFromTermSet
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.GetAllTermsFromTermSet
- uid: System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
  commentId: T:System.Collections.Generic.Dictionary{System.Guid,PnP.Framework.Modernization.Entities.TermData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Guid, TermData>
  nameWithType: Dictionary<Guid, TermData>
  fullName: System.Collections.Generic.Dictionary<System.Guid, PnP.Framework.Modernization.Entities.TermData>
  nameWithType.vb: Dictionary(Of Guid, TermData)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Guid, PnP.Framework.Modernization.Entities.TermData)
  name.vb: Dictionary(Of Guid, TermData)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Entities.TermData
    name: TermData
    nameWithType: TermData
    fullName: PnP.Framework.Modernization.Entities.TermData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Modernization.Entities.TermData
    name: TermData
    nameWithType: TermData
    fullName: PnP.Framework.Modernization.Entities.TermData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms
  name: ParseSubTerms
  nameWithType: TermTransformator.ParseSubTerms
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.ParseSubTerms
- uid: Microsoft.SharePoint.Client.Taxonomy.Term
  commentId: T:Microsoft.SharePoint.Client.Taxonomy.Term
  parent: Microsoft.SharePoint.Client.Taxonomy
  isExternal: true
  name: Term
  nameWithType: Term
  fullName: Microsoft.SharePoint.Client.Taxonomy.Term
- uid: Microsoft.SharePoint.Client.ClientRuntimeContext
  commentId: T:Microsoft.SharePoint.Client.ClientRuntimeContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientRuntimeContext
  nameWithType: ClientRuntimeContext
  fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
- uid: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache
  name: ResolveTermInCache
  nameWithType: TermTransformator.ResolveTermInCache
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.ResolveTermInCache
- uid: PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema
  name: ExtractTermSetIdOrSspIdFromXmlSchema
  nameWithType: TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.ExtractTermSetIdOrSspIdFromXmlSchema
- uid: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId
  name: CallTaxonomyWebServiceFindTermSetId
  nameWithType: TermTransformator.CallTaxonomyWebServiceFindTermSetId
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindTermSetId
- uid: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms*
  commentId: Overload:PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms
  name: CallTaxonomyWebServiceFindChildTerms
  nameWithType: TermTransformator.CallTaxonomyWebServiceFindChildTerms
  fullName: PnP.Framework.Modernization.Transform.TermTransformator.CallTaxonomyWebServiceFindChildTerms

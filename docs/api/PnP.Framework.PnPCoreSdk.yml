### YamlMime:ManagedReference
items:
- uid: PnP.Framework.PnPCoreSdk
  commentId: T:PnP.Framework.PnPCoreSdk
  id: PnPCoreSdk
  parent: PnP.Framework
  children:
  - PnP.Framework.PnPCoreSdk.GetClientContext(PnP.Core.Services.PnPContext)
  - PnP.Framework.PnPCoreSdk.GetClientContextAsync(PnP.Core.Services.PnPContext)
  - PnP.Framework.PnPCoreSdk.GetPnPContext(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  - PnP.Framework.PnPCoreSdk.GetPnPContextAsync(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  - PnP.Framework.PnPCoreSdk.Instance
  langs:
  - csharp
  - vb
  name: PnPCoreSdk
  nameWithType: PnPCoreSdk
  fullName: PnP.Framework.PnPCoreSdk
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/PnPCoreSdk.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PnPCoreSdk
    path: ../src/lib/PnP.Framework/PnPCoreSdk.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework
  summary: "\nClass that implements interop between PnP Framework and PnP Core SDK\n"
  example: []
  syntax:
    content: public class PnPCoreSdk
    content.vb: Public Class PnPCoreSdk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.PnPCoreSdk.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.PnPCoreSdk.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.PnPCoreSdk,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.PnPCoreSdk.Instance
  commentId: P:PnP.Framework.PnPCoreSdk.Instance
  id: Instance
  parent: PnP.Framework.PnPCoreSdk
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: PnPCoreSdk.Instance
  fullName: PnP.Framework.PnPCoreSdk.Instance
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/PnPCoreSdk.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Instance
    path: ../src/lib/PnP.Framework/PnPCoreSdk.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework
  summary: "\nProvides the singleton instance of th entity manager\n"
  example: []
  syntax:
    content: public static PnPCoreSdk Instance { get; }
    parameters: []
    return:
      type: PnP.Framework.PnPCoreSdk
    content.vb: Public Shared ReadOnly Property Instance As PnPCoreSdk
  overload: PnP.Framework.PnPCoreSdk.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PnP.Framework.PnPCoreSdk.GetPnPContextAsync(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  commentId: M:PnP.Framework.PnPCoreSdk.GetPnPContextAsync(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  id: GetPnPContextAsync(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  parent: PnP.Framework.PnPCoreSdk
  langs:
  - csharp
  - vb
  name: GetPnPContextAsync(ClientContext, IPnPContextFactory)
  nameWithType: PnPCoreSdk.GetPnPContextAsync(ClientContext, IPnPContextFactory)
  fullName: PnP.Framework.PnPCoreSdk.GetPnPContextAsync(Microsoft.SharePoint.Client.ClientContext, PnP.Core.Services.IPnPContextFactory)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/PnPCoreSdk.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetPnPContextAsync
    path: ../src/lib/PnP.Framework/PnPCoreSdk.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework
  summary: "\nGet&apos;s a PnPContext from a CSOM ClientContext\n"
  example: []
  syntax:
    content: public async Task<PnPContext> GetPnPContextAsync(ClientContext context, IPnPContextFactory existingFactory = null)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: CSOM ClientContext
    - id: existingFactory
      type: PnP.Core.Services.IPnPContextFactory
      description: An existing factory to use for PnPContext creation, instead of an internal one.
    return:
      type: System.Threading.Tasks.Task{PnP.Core.Services.PnPContext}
      description: The equivalent PnPContext
    content.vb: Public Function GetPnPContextAsync(context As ClientContext, existingFactory As IPnPContextFactory = Nothing) As Task(Of PnPContext)
  overload: PnP.Framework.PnPCoreSdk.GetPnPContextAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: PnP.Framework.PnPCoreSdk.GetPnPContext(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  commentId: M:PnP.Framework.PnPCoreSdk.GetPnPContext(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  id: GetPnPContext(Microsoft.SharePoint.Client.ClientContext,PnP.Core.Services.IPnPContextFactory)
  parent: PnP.Framework.PnPCoreSdk
  langs:
  - csharp
  - vb
  name: GetPnPContext(ClientContext, IPnPContextFactory)
  nameWithType: PnPCoreSdk.GetPnPContext(ClientContext, IPnPContextFactory)
  fullName: PnP.Framework.PnPCoreSdk.GetPnPContext(Microsoft.SharePoint.Client.ClientContext, PnP.Core.Services.IPnPContextFactory)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/PnPCoreSdk.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetPnPContext
    path: ../src/lib/PnP.Framework/PnPCoreSdk.cs
    startLine: 98
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework
  summary: "\nGet&apos;s a PnPContext from a CSOM ClientContext\n"
  example: []
  syntax:
    content: public PnPContext GetPnPContext(ClientContext context, IPnPContextFactory existingFactory = null)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientContext
      description: CSOM ClientContext
    - id: existingFactory
      type: PnP.Core.Services.IPnPContextFactory
      description: An existing factory to use for PnPContext creation, instead of an internal one.
    return:
      type: PnP.Core.Services.PnPContext
      description: The equivalent PnPContext
    content.vb: Public Function GetPnPContext(context As ClientContext, existingFactory As IPnPContextFactory = Nothing) As PnPContext
  overload: PnP.Framework.PnPCoreSdk.GetPnPContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.PnPCoreSdk.GetClientContextAsync(PnP.Core.Services.PnPContext)
  commentId: M:PnP.Framework.PnPCoreSdk.GetClientContextAsync(PnP.Core.Services.PnPContext)
  id: GetClientContextAsync(PnP.Core.Services.PnPContext)
  parent: PnP.Framework.PnPCoreSdk
  langs:
  - csharp
  - vb
  name: GetClientContextAsync(PnPContext)
  nameWithType: PnPCoreSdk.GetClientContextAsync(PnPContext)
  fullName: PnP.Framework.PnPCoreSdk.GetClientContextAsync(PnP.Core.Services.PnPContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/PnPCoreSdk.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetClientContextAsync
    path: ../src/lib/PnP.Framework/PnPCoreSdk.cs
    startLine: 156
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework
  summary: "\nReturns a CSOM ClientContext for a given PnP Core SDK context\n"
  example: []
  syntax:
    content: public async Task<ClientContext> GetClientContextAsync(PnPContext pnpContext)
    parameters:
    - id: pnpContext
      type: PnP.Core.Services.PnPContext
      description: The PnP Core SDK context
    return:
      type: System.Threading.Tasks.Task{Microsoft.SharePoint.Client.ClientContext}
      description: The equivalent CSOM ClientContext
    content.vb: Public Function GetClientContextAsync(pnpContext As PnPContext) As Task(Of ClientContext)
  overload: PnP.Framework.PnPCoreSdk.GetClientContextAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: PnP.Framework.PnPCoreSdk.GetClientContext(PnP.Core.Services.PnPContext)
  commentId: M:PnP.Framework.PnPCoreSdk.GetClientContext(PnP.Core.Services.PnPContext)
  id: GetClientContext(PnP.Core.Services.PnPContext)
  parent: PnP.Framework.PnPCoreSdk
  langs:
  - csharp
  - vb
  name: GetClientContext(PnPContext)
  nameWithType: PnPCoreSdk.GetClientContext(PnPContext)
  fullName: PnP.Framework.PnPCoreSdk.GetClientContext(PnP.Core.Services.PnPContext)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/PnPCoreSdk.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetClientContext
    path: ../src/lib/PnP.Framework/PnPCoreSdk.cs
    startLine: 175
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework
  summary: "\nReturns a CSOM ClientContext for a given PnP Core SDK context\n"
  example: []
  syntax:
    content: public ClientContext GetClientContext(PnPContext pnpContext)
    parameters:
    - id: pnpContext
      type: PnP.Core.Services.PnPContext
      description: The PnP Core SDK context
    return:
      type: Microsoft.SharePoint.Client.ClientContext
      description: The equivalent CSOM ClientContext
    content.vb: Public Function GetClientContext(pnpContext As PnPContext) As ClientContext
  overload: PnP.Framework.PnPCoreSdk.GetClientContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework
  commentId: N:PnP.Framework
  name: PnP.Framework
  nameWithType: PnP.Framework
  fullName: PnP.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.PnPCoreSdk.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<PnPCoreSdk>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<PnPCoreSdk>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.PnPCoreSdk>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of PnPCoreSdk)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.PnPCoreSdk)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of PnPCoreSdk)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<PnPCoreSdk>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<PnPCoreSdk>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.PnPCoreSdk>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of PnPCoreSdk)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of PnPCoreSdk)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.PnPCoreSdk)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.PnPCoreSdk.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.PnPCoreSdk,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<PnPCoreSdk, T>(Expression<Func<PnPCoreSdk, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<PnPCoreSdk, T>(Expression<Func<PnPCoreSdk, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.PnPCoreSdk, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.PnPCoreSdk, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of PnPCoreSdk, T)(Expression(Of Func(Of PnPCoreSdk, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.PnPCoreSdk, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.PnPCoreSdk, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of PnPCoreSdk, T)(Expression(Of Func(Of PnPCoreSdk, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<PnPCoreSdk, T>
    nameWithType: ObjectExtensions.Set<PnPCoreSdk, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.PnPCoreSdk, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.PnPCoreSdk
    name: PnPCoreSdk
    nameWithType: PnPCoreSdk
    fullName: PnP.Framework.PnPCoreSdk
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of PnPCoreSdk, T)
    nameWithType: ObjectExtensions.Set(Of PnPCoreSdk, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.PnPCoreSdk, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.PnPCoreSdk
    name: PnPCoreSdk
    nameWithType: PnPCoreSdk
    fullName: PnP.Framework.PnPCoreSdk
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.PnPCoreSdk.Instance*
  commentId: Overload:PnP.Framework.PnPCoreSdk.Instance
  name: Instance
  nameWithType: PnPCoreSdk.Instance
  fullName: PnP.Framework.PnPCoreSdk.Instance
- uid: PnP.Framework.PnPCoreSdk
  commentId: T:PnP.Framework.PnPCoreSdk
  parent: PnP.Framework
  name: PnPCoreSdk
  nameWithType: PnPCoreSdk
  fullName: PnP.Framework.PnPCoreSdk
- uid: PnP.Framework.PnPCoreSdk.GetPnPContextAsync*
  commentId: Overload:PnP.Framework.PnPCoreSdk.GetPnPContextAsync
  name: GetPnPContextAsync
  nameWithType: PnPCoreSdk.GetPnPContextAsync
  fullName: PnP.Framework.PnPCoreSdk.GetPnPContextAsync
- uid: Microsoft.SharePoint.Client.ClientContext
  commentId: T:Microsoft.SharePoint.Client.ClientContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientContext
  nameWithType: ClientContext
  fullName: Microsoft.SharePoint.Client.ClientContext
- uid: PnP.Core.Services.IPnPContextFactory
  commentId: T:PnP.Core.Services.IPnPContextFactory
  parent: PnP.Core.Services
  isExternal: true
  name: IPnPContextFactory
  nameWithType: IPnPContextFactory
  fullName: PnP.Core.Services.IPnPContextFactory
- uid: System.Threading.Tasks.Task{PnP.Core.Services.PnPContext}
  commentId: T:System.Threading.Tasks.Task{PnP.Core.Services.PnPContext}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PnPContext>
  nameWithType: Task<PnPContext>
  fullName: System.Threading.Tasks.Task<PnP.Core.Services.PnPContext>
  nameWithType.vb: Task(Of PnPContext)
  fullName.vb: System.Threading.Tasks.Task(Of PnP.Core.Services.PnPContext)
  name.vb: Task(Of PnPContext)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Core.Services.PnPContext
    name: PnPContext
    nameWithType: PnPContext
    fullName: PnP.Core.Services.PnPContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Core.Services.PnPContext
    name: PnPContext
    nameWithType: PnPContext
    fullName: PnP.Core.Services.PnPContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: PnP.Core.Services
  commentId: N:PnP.Core.Services
  isExternal: true
  name: PnP.Core.Services
  nameWithType: PnP.Core.Services
  fullName: PnP.Core.Services
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: PnP.Framework.PnPCoreSdk.GetPnPContext*
  commentId: Overload:PnP.Framework.PnPCoreSdk.GetPnPContext
  name: GetPnPContext
  nameWithType: PnPCoreSdk.GetPnPContext
  fullName: PnP.Framework.PnPCoreSdk.GetPnPContext
- uid: PnP.Core.Services.PnPContext
  commentId: T:PnP.Core.Services.PnPContext
  parent: PnP.Core.Services
  isExternal: true
  name: PnPContext
  nameWithType: PnPContext
  fullName: PnP.Core.Services.PnPContext
- uid: PnP.Framework.PnPCoreSdk.GetClientContextAsync*
  commentId: Overload:PnP.Framework.PnPCoreSdk.GetClientContextAsync
  name: GetClientContextAsync
  nameWithType: PnPCoreSdk.GetClientContextAsync
  fullName: PnP.Framework.PnPCoreSdk.GetClientContextAsync
- uid: System.Threading.Tasks.Task{Microsoft.SharePoint.Client.ClientContext}
  commentId: T:System.Threading.Tasks.Task{Microsoft.SharePoint.Client.ClientContext}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ClientContext>
  nameWithType: Task<ClientContext>
  fullName: System.Threading.Tasks.Task<Microsoft.SharePoint.Client.ClientContext>
  nameWithType.vb: Task(Of ClientContext)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.SharePoint.Client.ClientContext)
  name.vb: Task(Of ClientContext)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SharePoint.Client.ClientContext
    name: ClientContext
    nameWithType: ClientContext
    fullName: Microsoft.SharePoint.Client.ClientContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SharePoint.Client.ClientContext
    name: ClientContext
    nameWithType: ClientContext
    fullName: Microsoft.SharePoint.Client.ClientContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.PnPCoreSdk.GetClientContext*
  commentId: Overload:PnP.Framework.PnPCoreSdk.GetClientContext
  name: GetClientContext
  nameWithType: PnPCoreSdk.GetClientContext
  fullName: PnP.Framework.PnPCoreSdk.GetClientContext

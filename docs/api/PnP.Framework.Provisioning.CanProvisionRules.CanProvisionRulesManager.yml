### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager
  commentId: T:PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager
  id: CanProvisionRulesManager
  parent: PnP.Framework.Provisioning.CanProvisionRules
  children:
  - PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  - PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  - PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  langs:
  - csharp
  - vb
  name: CanProvisionRulesManager
  nameWithType: CanProvisionRulesManager
  fullName: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CanProvisionRulesManager
    path: ../src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.CanProvisionRules
  summary: "\nThis class manages all the CanProvision rules\n"
  example: []
  syntax:
    content: public static class CanProvisionRulesManager
    content.vb: Public Module CanProvisionRulesManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  commentId: M:PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  id: CanProvision(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  parent: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager
  langs:
  - csharp
  - vb
  name: CanProvision(Web, ProvisioningTemplate, ProvisioningTemplateApplyingInformation)
  nameWithType: CanProvisionRulesManager.CanProvision(Web, ProvisioningTemplate, ProvisioningTemplateApplyingInformation)
  fullName: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.SharePoint.Client.Web, PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CanProvision
    path: ../src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.CanProvisionRules
  summary: "\nThis method allows to check if a template can be provisioned in the currently selected target\n"
  example: []
  syntax:
    content: public static CanProvisionResult CanProvision(Web web, ProvisioningTemplate template, ProvisioningTemplateApplyingInformation applyingInformation)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: The target Web
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The Template to provision
    - id: applyingInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
      description: Any custom provisioning settings
    return:
      type: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionResult
      description: A boolean stating whether the current object handler can be run during provisioning or if there are any missing requirements
    content.vb: Public Shared Function CanProvision(web As Web, template As ProvisioningTemplate, applyingInformation As ProvisioningTemplateApplyingInformation) As CanProvisionResult
  overload: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  commentId: M:PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  id: CanProvision(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  parent: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager
  langs:
  - csharp
  - vb
  name: CanProvision(Tenant, ProvisioningHierarchy, String, ProvisioningTemplateApplyingInformation)
  nameWithType: CanProvisionRulesManager.CanProvision(Tenant, ProvisioningHierarchy, String, ProvisioningTemplateApplyingInformation)
  fullName: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(Microsoft.Online.SharePoint.TenantAdministration.Tenant, PnP.Framework.Provisioning.Model.ProvisioningHierarchy, System.String, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CanProvision
    path: ../src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.CanProvisionRules
  summary: "\nThis method allows to check if a template can be provisioned in the currently selected target\n"
  example: []
  syntax:
    content: public static CanProvisionResult CanProvision(Tenant tenant, ProvisioningHierarchy hierarchy, string sequenceId, ProvisioningTemplateApplyingInformation applyingInformation)
    parameters:
    - id: tenant
      type: Microsoft.Online.SharePoint.TenantAdministration.Tenant
      description: The target Tenant
    - id: hierarchy
      type: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
      description: The Template to hierarchy
    - id: sequenceId
      type: System.String
      description: The sequence to test within the hierarchy
    - id: applyingInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
      description: Any custom provisioning settings
    return:
      type: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionResult
      description: A boolean stating whether the current object handler can be run during provisioning or if there are any missing requirements
    content.vb: Public Shared Function CanProvision(tenant As Tenant, hierarchy As ProvisioningHierarchy, sequenceId As String, applyingInformation As ProvisioningTemplateApplyingInformation) As CanProvisionResult
  overload: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  commentId: M:PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  id: CanProvision(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  parent: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager
  langs:
  - csharp
  - vb
  name: CanProvision(ProvisioningHierarchy, String, ProvisioningTemplateApplyingInformation)
  nameWithType: CanProvisionRulesManager.CanProvision(ProvisioningHierarchy, String, ProvisioningTemplateApplyingInformation)
  fullName: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision(PnP.Framework.Provisioning.Model.ProvisioningHierarchy, System.String, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CanProvision
    path: ../src/lib/PnP.Framework/Provisioning/CanProvisionRules/CanProvisionRulesManager.cs
    startLine: 69
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.CanProvisionRules
  summary: "\nThis method allows to check if a template can be provisioned\n"
  example: []
  syntax:
    content: public static CanProvisionResult CanProvision(ProvisioningHierarchy hierarchy, string sequenceId, ProvisioningTemplateApplyingInformation applyingInformation)
    parameters:
    - id: hierarchy
      type: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
      description: The Template to hierarchy
    - id: sequenceId
      type: System.String
      description: The sequence to test within the hierarchy
    - id: applyingInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
      description: Any custom provisioning settings
    return:
      type: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionResult
      description: A boolean stating whether the current object handler can be run during provisioning or if there are any missing requirements
    content.vb: Public Shared Function CanProvision(hierarchy As ProvisioningHierarchy, sequenceId As String, applyingInformation As ProvisioningTemplateApplyingInformation) As CanProvisionResult
  overload: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Provisioning.CanProvisionRules
  commentId: N:PnP.Framework.Provisioning.CanProvisionRules
  name: PnP.Framework.Provisioning.CanProvisionRules
  nameWithType: PnP.Framework.Provisioning.CanProvisionRules
  fullName: PnP.Framework.Provisioning.CanProvisionRules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision*
  commentId: Overload:PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision
  name: CanProvision
  nameWithType: CanProvisionRulesManager.CanProvision
  fullName: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionRulesManager.CanProvision
- uid: Microsoft.SharePoint.Client.Web
  commentId: T:Microsoft.SharePoint.Client.Web
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: Web
  nameWithType: Web
  fullName: Microsoft.SharePoint.Client.Web
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
  parent: PnP.Framework.Provisioning.ObjectHandlers
  name: ProvisioningTemplateApplyingInformation
  nameWithType: ProvisioningTemplateApplyingInformation
  fullName: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
- uid: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionResult
  commentId: T:PnP.Framework.Provisioning.CanProvisionRules.CanProvisionResult
  parent: PnP.Framework.Provisioning.CanProvisionRules
  name: CanProvisionResult
  nameWithType: CanProvisionResult
  fullName: PnP.Framework.Provisioning.CanProvisionRules.CanProvisionResult
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Provisioning.ObjectHandlers
  commentId: N:PnP.Framework.Provisioning.ObjectHandlers
  name: PnP.Framework.Provisioning.ObjectHandlers
  nameWithType: PnP.Framework.Provisioning.ObjectHandlers
  fullName: PnP.Framework.Provisioning.ObjectHandlers
- uid: Microsoft.Online.SharePoint.TenantAdministration.Tenant
  commentId: T:Microsoft.Online.SharePoint.TenantAdministration.Tenant
  parent: Microsoft.Online.SharePoint.TenantAdministration
  isExternal: true
  name: Tenant
  nameWithType: Tenant
  fullName: Microsoft.Online.SharePoint.TenantAdministration.Tenant
- uid: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningHierarchy
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningHierarchy
  nameWithType: ProvisioningHierarchy
  fullName: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Online.SharePoint.TenantAdministration
  commentId: N:Microsoft.Online.SharePoint.TenantAdministration
  isExternal: true
  name: Microsoft.Online.SharePoint.TenantAdministration
  nameWithType: Microsoft.Online.SharePoint.TenantAdministration
  fullName: Microsoft.Online.SharePoint.TenantAdministration

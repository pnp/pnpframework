### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  commentId: T:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  id: PnPPackageExtensions
  parent: PnP.Framework.Provisioning.Connectors.OpenXML
  children:
  - PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename(System.String)
  - PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  - PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  - PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.Byte[])
  - PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.IO.MemoryStream)
  langs:
  - csharp
  - vb
  name: PnPPackageExtensions
  nameWithType: PnPPackageExtensions
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PnPPackageExtensions
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors.OpenXML
  summary: "\nExtension class for PnP OpenXML package files\n"
  example: []
  syntax:
    content: public static class PnPPackageExtensions
    content.vb: Public Module PnPPackageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  commentId: M:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  id: PackTemplateAsStream(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  isExtensionMethod: true
  parent: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  langs:
  - csharp
  - vb
  name: PackTemplateAsStream(PnPInfo)
  nameWithType: PnPPackageExtensions.PackTemplateAsStream(PnPInfo)
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PackTemplateAsStream
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
    startLine: 19
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors.OpenXML
  summary: "\nPacks template as a memory stream\n"
  example: []
  syntax:
    content: public static MemoryStream PackTemplateAsStream(this PnPInfo pnpInfo)
    parameters:
    - id: pnpInfo
      type: PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo
      description: PnPInfo object
    return:
      type: System.IO.MemoryStream
      description: Returns MemoryStream
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PackTemplateAsStream(pnpInfo As PnPInfo) As MemoryStream
  overload: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  commentId: M:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  id: PackTemplate(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  isExtensionMethod: true
  parent: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  langs:
  - csharp
  - vb
  name: PackTemplate(PnPInfo)
  nameWithType: PnPPackageExtensions.PackTemplate(PnPInfo)
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate(PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PackTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
    startLine: 35
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors.OpenXML
  summary: "\nPacks template as a stream array\n"
  example: []
  syntax:
    content: public static byte[] PackTemplate(this PnPInfo pnpInfo)
    parameters:
    - id: pnpInfo
      type: PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo
      description: PnPInfo object
    return:
      type: System.Byte[]
      description: Returns stream as an array
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PackTemplate(pnpInfo As PnPInfo) As Byte()
  overload: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.IO.MemoryStream)
  commentId: M:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.IO.MemoryStream)
  id: UnpackTemplate(System.IO.MemoryStream)
  isExtensionMethod: true
  parent: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  langs:
  - csharp
  - vb
  name: UnpackTemplate(MemoryStream)
  nameWithType: PnPPackageExtensions.UnpackTemplate(MemoryStream)
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.IO.MemoryStream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UnpackTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
    startLine: 48
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors.OpenXML
  summary: "\nUnpacks template into PnP OpenXML package info object based on memory stream\n"
  example: []
  syntax:
    content: public static PnPInfo UnpackTemplate(this MemoryStream stream)
    parameters:
    - id: stream
      type: System.IO.MemoryStream
      description: MemoryStream
    return:
      type: PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo
      description: Returns site template
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnpackTemplate(stream As MemoryStream) As PnPInfo
  overload: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.Byte[])
  commentId: M:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.Byte[])
  id: UnpackTemplate(System.Byte[])
  isExtensionMethod: true
  parent: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  langs:
  - csharp
  - vb
  name: UnpackTemplate(Byte[])
  nameWithType: PnPPackageExtensions.UnpackTemplate(Byte[])
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.Byte[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UnpackTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
    startLine: 64
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors.OpenXML
  summary: "\nUnpacks template into PnP OpenXML package info object\n"
  example: []
  syntax:
    content: public static PnPInfo UnpackTemplate(this byte[] packageBytes)
    parameters:
    - id: packageBytes
      type: System.Byte[]
      description: Package Byte
    return:
      type: PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo
      description: Returns site template
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnpackTemplate(packageBytes As Byte()) As PnPInfo
  overload: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate*
  nameWithType.vb: PnPPackageExtensions.UnpackTemplate(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate(System.Byte())
  name.vb: UnpackTemplate(Byte())
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename(System.String)
  id: AsInternalFilename(System.String)
  isExtensionMethod: true
  parent: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions
  langs:
  - csharp
  - vb
  name: AsInternalFilename(String)
  nameWithType: PnPPackageExtensions.AsInternalFilename(String)
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AsInternalFilename
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/OpenXML/PnPPackageHelper.cs
    startLine: 77
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors.OpenXML
  summary: "\nReturn filename as Internal filename\n"
  example: []
  syntax:
    content: public static string AsInternalFilename(this string filename)
    parameters:
    - id: filename
      type: System.String
      description: Name of the file
    return:
      type: System.String
      description: Returns filename as Internal filename
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsInternalFilename(filename As String) As String
  overload: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Provisioning.Connectors.OpenXML
  commentId: N:PnP.Framework.Provisioning.Connectors.OpenXML
  name: PnP.Framework.Provisioning.Connectors.OpenXML
  nameWithType: PnP.Framework.Provisioning.Connectors.OpenXML
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream
  name: PackTemplateAsStream
  nameWithType: PnPPackageExtensions.PackTemplateAsStream
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplateAsStream
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo
  commentId: T:PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo
  parent: PnP.Framework.Provisioning.Connectors.OpenXML.Model
  name: PnPInfo
  nameWithType: PnPInfo
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.Model.PnPInfo
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.Model
  commentId: N:PnP.Framework.Provisioning.Connectors.OpenXML.Model
  name: PnP.Framework.Provisioning.Connectors.OpenXML.Model
  nameWithType: PnP.Framework.Provisioning.Connectors.OpenXML.Model
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.Model
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate
  name: PackTemplate
  nameWithType: PnPPackageExtensions.PackTemplate
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.PackTemplate
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate
  name: UnpackTemplate
  nameWithType: PnPPackageExtensions.UnpackTemplate
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.UnpackTemplate
- uid: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename
  name: AsInternalFilename
  nameWithType: PnPPackageExtensions.AsInternalFilename
  fullName: PnP.Framework.Provisioning.Connectors.OpenXML.PnPPackageExtensions.AsInternalFilename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

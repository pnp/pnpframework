### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector
  commentId: T:PnP.Framework.Provisioning.Connectors.SharePointConnector
  id: SharePointConnector
  parent: PnP.Framework.Provisioning.Connectors
  children:
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String,System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.CLIENTCONTEXT
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String,System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String,System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart(System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles(System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String,System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders(System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.IO.Stream)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.String,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: SharePointConnector
  nameWithType: SharePointConnector
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SharePointConnector
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nConnector for files in SharePoint\n"
  example: []
  syntax:
    content: 'public class SharePointConnector : FileConnectorBase'
    content.vb: >-
      Public Class SharePointConnector
          Inherits FileConnectorBase
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Connectors.FileConnectorBase
  inheritedMembers:
  - PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONNECTIONSTRING
  - PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONTAINER
  - PnP.Framework.Provisioning.Connectors.FileConnectorBase.Parameters
  - PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString(System.String,System.String)
  - PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter(System.String,System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Connectors.SharePointConnector.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Connectors.SharePointConnector,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.CLIENTCONTEXT
  commentId: F:PnP.Framework.Provisioning.Connectors.SharePointConnector.CLIENTCONTEXT
  id: CLIENTCONTEXT
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: CLIENTCONTEXT
  nameWithType: SharePointConnector.CLIENTCONTEXT
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.CLIENTCONTEXT
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CLIENTCONTEXT
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 18
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  syntax:
    content: public const string CLIENTCONTEXT = "ClientContext"
    return:
      type: System.String
    content.vb: Public Const CLIENTCONTEXT As String = "ClientContext"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: SharePointConnector()
  nameWithType: SharePointConnector.SharePointConnector()
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.SharePointConnector()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nBase constructor\n"
  example: []
  syntax:
    content: public SharePointConnector()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String,System.String)
  id: '#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String,System.String)'
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: SharePointConnector(ClientRuntimeContext, String, String)
  nameWithType: SharePointConnector.SharePointConnector(ClientRuntimeContext, String, String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.SharePointConnector(Microsoft.SharePoint.Client.ClientRuntimeContext, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 37
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nSharePointConnector constructor. Allows to directly set root folder and sub folder\n"
  example: []
  syntax:
    content: public SharePointConnector(ClientRuntimeContext clientContext, string connectionString, string container)
    parameters:
    - id: clientContext
      type: Microsoft.SharePoint.Client.ClientRuntimeContext
      description: Client context for SharePoint connection
    - id: connectionString
      type: System.String
      description: 'Site collection URL (e.g. https://yourtenant.sharepoint.com/sites/dev) '
    - id: container
      type: System.String
      description: Library + folder that holds the files (mydocs/myfolder)
    content.vb: Public Sub New(clientContext As ClientRuntimeContext, connectionString As String, container As String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles
  id: GetFiles
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFiles()
  nameWithType: SharePointConnector.GetFiles()
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFiles
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 68
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGet the files available in the default container\n"
  example: []
  syntax:
    content: public override List<string> GetFiles()
    return:
      type: System.Collections.Generic.List{System.String}
      description: List of files
    content.vb: Public Overrides Function GetFiles As List(Of String)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFiles(String)
  nameWithType: SharePointConnector.GetFiles(String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFiles
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 78
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGet the files available in the specified container\n"
  example: []
  syntax:
    content: public override List<string> GetFiles(string container)
    parameters:
    - id: container
      type: System.String
      description: Name of the container to get the files from
    return:
      type: System.Collections.Generic.List{System.String}
      description: List of files
    content.vb: Public Overrides Function GetFiles(container As String) As List(Of String)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles(System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders
  id: GetFolders
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFolders()
  nameWithType: SharePointConnector.GetFolders()
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFolders
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 120
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGet the folders of the default container\n"
  example: []
  syntax:
    content: public override List<string> GetFolders()
    return:
      type: System.Collections.Generic.List{System.String}
      description: List of folders
    content.vb: Public Overrides Function GetFolders As List(Of String)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders(System.String)
  id: GetFolders(System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFolders(String)
  nameWithType: SharePointConnector.GetFolders(String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFolders
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 130
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGet the folders of a specified container\n"
  example: []
  syntax:
    content: public override List<string> GetFolders(string container)
    parameters:
    - id: container
      type: System.String
      description: Name of the container to get the folders from
    return:
      type: System.Collections.Generic.List{System.String}
      description: List of folders
    content.vb: Public Overrides Function GetFolders(container As String) As List(Of String)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders(System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String)
  id: GetFile(System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFile(String)
  nameWithType: SharePointConnector.GetFile(String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFile
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 173
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGets a file as string from the default container\n"
  example: []
  syntax:
    content: public override string GetFile(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to get
    return:
      type: System.String
      description: String containing the file contents
    content.vb: Public Overrides Function GetFile(fileName As String) As String
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String,System.String)
  id: GetFile(System.String,System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFile(String, String)
  nameWithType: SharePointConnector.GetFile(String, String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFile
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 184
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGets a file as string from the specified container\n"
  example: []
  syntax:
    content: public override string GetFile(string fileName, string container)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to get
    - id: container
      type: System.String
      description: Name of the container to get the file from
    return:
      type: System.String
      description: String containing the file contents
    content.vb: Public Overrides Function GetFile(fileName As String, container As String) As String
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String,System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String)
  id: GetFileStream(System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFileStream(String)
  nameWithType: SharePointConnector.GetFileStream(String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFileStream
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 225
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGets a file as stream from the default container\n"
  example: []
  syntax:
    content: public override Stream GetFileStream(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to get
    return:
      type: System.IO.Stream
      description: String containing the file contents
    content.vb: Public Overrides Function GetFileStream(fileName As String) As Stream
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String,System.String)
  id: GetFileStream(System.String,System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFileStream(String, String)
  nameWithType: SharePointConnector.GetFileStream(String, String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFileStream
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 236
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nGets a file as stream from the specified container\n"
  example: []
  syntax:
    content: public override Stream GetFileStream(string fileName, string container)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to get
    - id: container
      type: System.String
      description: Name of the container to get the file from
    return:
      type: System.IO.Stream
      description: String containing the file contents
    content.vb: Public Overrides Function GetFileStream(fileName As String, container As String) As Stream
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String,System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.IO.Stream)
  id: SaveFileStream(System.String,System.IO.Stream)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: SaveFileStream(String, Stream)
  nameWithType: SharePointConnector.SaveFileStream(String, Stream)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveFileStream
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 257
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nSaves a stream to the default container with the given name. If the file exists it will be overwritten\n"
  example: []
  syntax:
    content: public override void SaveFileStream(string fileName, Stream stream)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to save
    - id: stream
      type: System.IO.Stream
      description: Stream containing the file contents
    content.vb: Public Overrides Sub SaveFileStream(fileName As String, stream As Stream)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.IO.Stream)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.String,System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.String,System.IO.Stream)
  id: SaveFileStream(System.String,System.String,System.IO.Stream)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: SaveFileStream(String, String, Stream)
  nameWithType: SharePointConnector.SaveFileStream(String, String, Stream)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String, System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveFileStream
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 268
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nSaves a stream to the specified container with the given name. If the file exists it will be overwritten\n"
  example: []
  syntax:
    content: public override void SaveFileStream(string fileName, string container, Stream stream)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to save
    - id: container
      type: System.String
      description: Name of the container to save the file to
    - id: stream
      type: System.IO.Stream
      description: Stream containing the file contents
    content.vb: Public Overrides Sub SaveFileStream(fileName As String, container As String, stream As Stream)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.String,System.IO.Stream)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: DeleteFile(String)
  nameWithType: SharePointConnector.DeleteFile(String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeleteFile
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 327
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nDeletes a file from the default container\n"
  example: []
  syntax:
    content: public override void DeleteFile(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to delete
    content.vb: Public Overrides Sub DeleteFile(fileName As String)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String,System.String)
  id: DeleteFile(System.String,System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: DeleteFile(String, String)
  nameWithType: SharePointConnector.DeleteFile(String, String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DeleteFile
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 337
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nDeletes a file from the specified container\n"
  example: []
  syntax:
    content: public override void DeleteFile(string fileName, string container)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file to delete
    - id: container
      type: System.String
      description: Name of the container to delete the file from
    content.vb: Public Overrides Sub DeleteFile(fileName As String, container As String)
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String,System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart(System.String)
  id: GetFilenamePart(System.String)
  parent: PnP.Framework.Provisioning.Connectors.SharePointConnector
  langs:
  - csharp
  - vb
  name: GetFilenamePart(String)
  nameWithType: SharePointConnector.GetFilenamePart(String)
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetFilenamePart
    path: ../src/lib/PnP.Framework/Provisioning/Connectors/SharePointConnector.cs
    startLine: 377
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Connectors
  summary: "\nReturns a filename without a path\n"
  example: []
  syntax:
    content: public override string GetFilenamePart(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file
    return:
      type: System.String
      description: Returns a filename without a path
    content.vb: Public Overrides Function GetFilenamePart(fileName As String) As String
  overridden: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart(System.String)
  overload: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: PnP.Framework.Provisioning.Connectors
  commentId: N:PnP.Framework.Provisioning.Connectors
  name: PnP.Framework.Provisioning.Connectors
  nameWithType: PnP.Framework.Provisioning.Connectors
  fullName: PnP.Framework.Provisioning.Connectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  commentId: T:PnP.Framework.Provisioning.Connectors.FileConnectorBase
  parent: PnP.Framework.Provisioning.Connectors
  name: FileConnectorBase
  nameWithType: FileConnectorBase
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONNECTIONSTRING
  commentId: F:PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONNECTIONSTRING
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  name: CONNECTIONSTRING
  nameWithType: FileConnectorBase.CONNECTIONSTRING
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONNECTIONSTRING
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONTAINER
  commentId: F:PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONTAINER
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  name: CONTAINER
  nameWithType: FileConnectorBase.CONTAINER
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.CONTAINER
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.Parameters
  commentId: P:PnP.Framework.Provisioning.Connectors.FileConnectorBase.Parameters
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  name: Parameters
  nameWithType: FileConnectorBase.Parameters
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.Parameters
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString(System.String,System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: AddParameterAsString(String, String)
  nameWithType: FileConnectorBase.AddParameterAsString(String, String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString(System.String,System.String)
    name: AddParameterAsString
    nameWithType: FileConnectorBase.AddParameterAsString
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString(System.String,System.String)
    name: AddParameterAsString
    nameWithType: FileConnectorBase.AddParameterAsString
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameterAsString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter(System.String,System.Object)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter(System.String,System.Object)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: AddParameter(String, Object)
  nameWithType: FileConnectorBase.AddParameter(String, Object)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter(System.String,System.Object)
    name: AddParameter
    nameWithType: FileConnectorBase.AddParameter
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter(System.String,System.Object)
    name: AddParameter
    nameWithType: FileConnectorBase.AddParameter
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<SharePointConnector>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SharePointConnector>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Connectors.SharePointConnector>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of SharePointConnector)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Connectors.SharePointConnector)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of SharePointConnector)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<SharePointConnector>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SharePointConnector>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Connectors.SharePointConnector>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of SharePointConnector)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of SharePointConnector)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Connectors.SharePointConnector)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Connectors.SharePointConnector,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<SharePointConnector, T>(Expression<Func<SharePointConnector, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<SharePointConnector, T>(Expression<Func<SharePointConnector, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Connectors.SharePointConnector, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Connectors.SharePointConnector, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of SharePointConnector, T)(Expression(Of Func(Of SharePointConnector, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Connectors.SharePointConnector, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Connectors.SharePointConnector, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of SharePointConnector, T)(Expression(Of Func(Of SharePointConnector, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<SharePointConnector, T>
    nameWithType: ObjectExtensions.Set<SharePointConnector, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Connectors.SharePointConnector, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Connectors.SharePointConnector
    name: SharePointConnector
    nameWithType: SharePointConnector
    fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of SharePointConnector, T)
    nameWithType: ObjectExtensions.Set(Of SharePointConnector, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Connectors.SharePointConnector, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Connectors.SharePointConnector
    name: SharePointConnector
    nameWithType: SharePointConnector
    fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.#ctor
  name: SharePointConnector
  nameWithType: SharePointConnector.SharePointConnector
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.SharePointConnector
- uid: Microsoft.SharePoint.Client.ClientRuntimeContext
  commentId: T:Microsoft.SharePoint.Client.ClientRuntimeContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientRuntimeContext
  nameWithType: ClientRuntimeContext
  fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  name: GetFiles()
  nameWithType: FileConnectorBase.GetFiles()
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
    name: GetFiles
    nameWithType: FileConnectorBase.GetFiles
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
    name: GetFiles
    nameWithType: FileConnectorBase.GetFiles
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles
  name: GetFiles
  nameWithType: SharePointConnector.GetFiles
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFiles
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles(System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: GetFiles(String)
  nameWithType: FileConnectorBase.GetFiles(String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles(System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles(System.String)
    name: GetFiles
    nameWithType: FileConnectorBase.GetFiles
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles(System.String)
    name: GetFiles
    nameWithType: FileConnectorBase.GetFiles
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  name: GetFolders()
  nameWithType: FileConnectorBase.GetFolders()
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
    name: GetFolders
    nameWithType: FileConnectorBase.GetFolders
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
    name: GetFolders
    nameWithType: FileConnectorBase.GetFolders
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders
  name: GetFolders
  nameWithType: SharePointConnector.GetFolders
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFolders
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders(System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: GetFolders(String)
  nameWithType: FileConnectorBase.GetFolders(String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders(System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders(System.String)
    name: GetFolders
    nameWithType: FileConnectorBase.GetFolders
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders(System.String)
    name: GetFolders
    nameWithType: FileConnectorBase.GetFolders
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFolders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: GetFile(String)
  nameWithType: FileConnectorBase.GetFile(String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String)
    name: GetFile
    nameWithType: FileConnectorBase.GetFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String)
    name: GetFile
    nameWithType: FileConnectorBase.GetFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile
  name: GetFile
  nameWithType: SharePointConnector.GetFile
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFile
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String,System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: GetFile(String, String)
  nameWithType: FileConnectorBase.GetFile(String, String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String,System.String)
    name: GetFile
    nameWithType: FileConnectorBase.GetFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String,System.String)
    name: GetFile
    nameWithType: FileConnectorBase.GetFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: GetFileStream(String)
  nameWithType: FileConnectorBase.GetFileStream(String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String)
    name: GetFileStream
    nameWithType: FileConnectorBase.GetFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String)
    name: GetFileStream
    nameWithType: FileConnectorBase.GetFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream
  name: GetFileStream
  nameWithType: SharePointConnector.GetFileStream
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String,System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: GetFileStream(String, String)
  nameWithType: FileConnectorBase.GetFileStream(String, String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String,System.String)
    name: GetFileStream
    nameWithType: FileConnectorBase.GetFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String,System.String)
    name: GetFileStream
    nameWithType: FileConnectorBase.GetFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.IO.Stream)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: SaveFileStream(String, Stream)
  nameWithType: FileConnectorBase.SaveFileStream(String, Stream)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String, System.IO.Stream)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.IO.Stream)
    name: SaveFileStream
    nameWithType: FileConnectorBase.SaveFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.IO.Stream)
    name: SaveFileStream
    nameWithType: FileConnectorBase.SaveFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream
  name: SaveFileStream
  nameWithType: SharePointConnector.SaveFileStream
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.String,System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.String,System.IO.Stream)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: SaveFileStream(String, String, Stream)
  nameWithType: FileConnectorBase.SaveFileStream(String, String, Stream)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String, System.String, System.IO.Stream)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.String,System.IO.Stream)
    name: SaveFileStream
    nameWithType: FileConnectorBase.SaveFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.String,System.IO.Stream)
    name: SaveFileStream
    nameWithType: FileConnectorBase.SaveFileStream
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: DeleteFile(String)
  nameWithType: FileConnectorBase.DeleteFile(String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String)
    name: DeleteFile
    nameWithType: FileConnectorBase.DeleteFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String)
    name: DeleteFile
    nameWithType: FileConnectorBase.DeleteFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile
  name: DeleteFile
  nameWithType: SharePointConnector.DeleteFile
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String,System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: DeleteFile(String, String)
  nameWithType: FileConnectorBase.DeleteFile(String, String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String,System.String)
    name: DeleteFile
    nameWithType: FileConnectorBase.DeleteFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String,System.String)
    name: DeleteFile
    nameWithType: FileConnectorBase.DeleteFile
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart(System.String)
  commentId: M:PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart(System.String)
  parent: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  isExternal: true
  name: GetFilenamePart(String)
  nameWithType: FileConnectorBase.GetFilenamePart(String)
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart(System.String)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart(System.String)
    name: GetFilenamePart
    nameWithType: FileConnectorBase.GetFilenamePart
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart(System.String)
    name: GetFilenamePart
    nameWithType: FileConnectorBase.GetFilenamePart
    fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase.GetFilenamePart
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart*
  commentId: Overload:PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart
  name: GetFilenamePart
  nameWithType: SharePointConnector.GetFilenamePart
  fullName: PnP.Framework.Provisioning.Connectors.SharePointConnector.GetFilenamePart

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  commentId: T:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  id: ExtensibilityManager
  parent: PnP.Framework.Provisioning.Extensibility
  children:
  - PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation,PnP.Framework.Diagnostics.PnPMonitoredScope)
  - PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation,PnP.Framework.Provisioning.ObjectHandlers.TokenParser,PnP.Framework.Diagnostics.PnPMonitoredScope)
  - PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  langs:
  - csharp
  - vb
  name: ExtensibilityManager
  nameWithType: ExtensibilityManager
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExtensibilityManager
    path: ../src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Extensibility
  summary: "\nProvisioning Framework Component that is used for invoking custom providers during the provisioning process.\n"
  example: []
  syntax:
    content: public class ExtensibilityManager
    content.vb: Public Class ExtensibilityManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Extensibility.ExtensibilityManager,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: ExecuteExtensibilityCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  langs:
  - csharp
  - vb
  name: ExecuteExtensibilityCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate)
  nameWithType: ExtensibilityManager.ExecuteExtensibilityCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut(Microsoft.SharePoint.Client.ClientContext, PnP.Framework.Provisioning.Model.ExtensibilityHandler, PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Deprecated/Extensibility/ExtensibilityManager.deprecated.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExecuteExtensibilityCallOut
    path: ../src/lib/PnP.Framework/Provisioning/Deprecated/Extensibility/ExtensibilityManager.deprecated.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Extensibility
  summary: "\nMethod to Invoke Custom Provisioning Providers. \nEnsure the ClientContext is not disposed in the custom provider.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use ExecuteExtensibilityProvisionCallOut. This method will be removed in the June 2016 release.")]

      public void ExecuteExtensibilityCallOut(ClientContext ctx, ExtensibilityHandler handler, ProvisioningTemplate template)
    parameters:
    - id: ctx
      type: Microsoft.SharePoint.Client.ClientContext
      description: Authenticated ClientContext that is passed to the custom provider.
    - id: handler
      type: PnP.Framework.Provisioning.Model.ExtensibilityHandler
      description: A custom Extensibility Provisioning Provider
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: ProvisioningTemplate that is passed to the custom provider
    content.vb: >-
      <Obsolete("Use ExecuteExtensibilityProvisionCallOut. This method will be removed in the June 2016 release.")>

      Public Sub ExecuteExtensibilityCallOut(ctx As ClientContext, handler As ExtensibilityHandler, template As ProvisioningTemplate)
  overload: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut*
  exceptions:
  - type: PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
    commentId: T:PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Provider.Assembly or Provider.Type is NullOrWhiteSpace>
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ClientContext is Null>
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ExecuteExtensibilityProvisionCallOut. This method will be removed in the June 2016 release.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: ExecuteTokenProviderCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  langs:
  - csharp
  - vb
  name: ExecuteTokenProviderCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate)
  nameWithType: ExtensibilityManager.ExecuteTokenProviderCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut(Microsoft.SharePoint.Client.ClientContext, PnP.Framework.Provisioning.Model.ExtensibilityHandler, PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExecuteTokenProviderCallOut
    path: ../src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
    startLine: 27
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Extensibility
  summary: "\nMethod to Invoke Custom Provisioning Token Providers which implement the IProvisioningExtensibilityTokenProvider interface.\nEnsure the ClientContext is not disposed in the custom provider.\n"
  example: []
  syntax:
    content: public IEnumerable<TokenDefinition> ExecuteTokenProviderCallOut(ClientContext ctx, ExtensibilityHandler provider, ProvisioningTemplate template)
    parameters:
    - id: ctx
      type: Microsoft.SharePoint.Client.ClientContext
      description: Authenticated ClientContext that is passed to the custom provider.
    - id: provider
      type: PnP.Framework.Provisioning.Model.ExtensibilityHandler
      description: A custom Extensibility Provisioning Provider
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: ProvisioningTemplate that is passed to the custom provider
    return:
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition}
    content.vb: Public Function ExecuteTokenProviderCallOut(ctx As ClientContext, provider As ExtensibilityHandler, template As ProvisioningTemplate) As IEnumerable(Of TokenDefinition)
  overload: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut*
  exceptions:
  - type: PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
    commentId: T:PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Provider.Assembly or Provider.Type is NullOrWhiteSpace>
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ClientContext is Null>
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation,PnP.Framework.Provisioning.ObjectHandlers.TokenParser,PnP.Framework.Diagnostics.PnPMonitoredScope)
  commentId: M:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation,PnP.Framework.Provisioning.ObjectHandlers.TokenParser,PnP.Framework.Diagnostics.PnPMonitoredScope)
  id: ExecuteExtensibilityProvisionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation,PnP.Framework.Provisioning.ObjectHandlers.TokenParser,PnP.Framework.Diagnostics.PnPMonitoredScope)
  parent: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  langs:
  - csharp
  - vb
  name: ExecuteExtensibilityProvisionCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate, ProvisioningTemplateApplyingInformation, TokenParser, PnPMonitoredScope)
  nameWithType: ExtensibilityManager.ExecuteExtensibilityProvisionCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate, ProvisioningTemplateApplyingInformation, TokenParser, PnPMonitoredScope)
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut(Microsoft.SharePoint.Client.ClientContext, PnP.Framework.Provisioning.Model.ExtensibilityHandler, PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation, PnP.Framework.Provisioning.ObjectHandlers.TokenParser, PnP.Framework.Diagnostics.PnPMonitoredScope)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExecuteExtensibilityProvisionCallOut
    path: ../src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
    startLine: 98
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Extensibility
  summary: "\nMethod to Invoke Custom Provisioning Handlers.\n"
  remarks: "\nEnsure the ClientContext is not disposed in the custom provider.\n"
  example: []
  syntax:
    content: public void ExecuteExtensibilityProvisionCallOut(ClientContext ctx, ExtensibilityHandler handler, ProvisioningTemplate template, ProvisioningTemplateApplyingInformation applyingInformation, TokenParser tokenParser, PnPMonitoredScope scope)
    parameters:
    - id: ctx
      type: Microsoft.SharePoint.Client.ClientContext
      description: Authenticated ClientContext that is passed to the custom provider.
    - id: handler
      type: PnP.Framework.Provisioning.Model.ExtensibilityHandler
      description: A custom Extensibility Provisioning Provider
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: ProvisioningTemplate that is passed to the custom provider
    - id: applyingInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
      description: The Provisioning Template application information object
    - id: tokenParser
      type: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
      description: The Token Parser used by the engine during template provisioning
    - id: scope
      type: PnP.Framework.Diagnostics.PnPMonitoredScope
      description: The PnPMonitoredScope of the current step in the pipeline
    content.vb: Public Sub ExecuteExtensibilityProvisionCallOut(ctx As ClientContext, handler As ExtensibilityHandler, template As ProvisioningTemplate, applyingInformation As ProvisioningTemplateApplyingInformation, tokenParser As TokenParser, scope As PnPMonitoredScope)
  overload: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut*
  exceptions:
  - type: PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
    commentId: T:PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Provider.Assembly or Provider.Type is NullOrWhiteSpace>
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ClientContext is Null>
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation,PnP.Framework.Diagnostics.PnPMonitoredScope)
  commentId: M:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation,PnP.Framework.Diagnostics.PnPMonitoredScope)
  id: ExecuteExtensibilityExtractionCallOut(Microsoft.SharePoint.Client.ClientContext,PnP.Framework.Provisioning.Model.ExtensibilityHandler,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation,PnP.Framework.Diagnostics.PnPMonitoredScope)
  parent: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  langs:
  - csharp
  - vb
  name: ExecuteExtensibilityExtractionCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate, ProvisioningTemplateCreationInformation, PnPMonitoredScope)
  nameWithType: ExtensibilityManager.ExecuteExtensibilityExtractionCallOut(ClientContext, ExtensibilityHandler, ProvisioningTemplate, ProvisioningTemplateCreationInformation, PnPMonitoredScope)
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut(Microsoft.SharePoint.Client.ClientContext, PnP.Framework.Provisioning.Model.ExtensibilityHandler, PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation, PnP.Framework.Diagnostics.PnPMonitoredScope)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExecuteExtensibilityExtractionCallOut
    path: ../src/lib/PnP.Framework/Provisioning/Extensibility/ExtensibilityManager.cs
    startLine: 185
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Extensibility
  summary: "\nMethod to Invoke Custom Extraction Handlers.\n"
  remarks: "\nEnsure the ClientContext is not disposed in the custom provider.\n"
  example: []
  syntax:
    content: public ProvisioningTemplate ExecuteExtensibilityExtractionCallOut(ClientContext ctx, ExtensibilityHandler handler, ProvisioningTemplate template, ProvisioningTemplateCreationInformation creationInformation, PnPMonitoredScope scope)
    parameters:
    - id: ctx
      type: Microsoft.SharePoint.Client.ClientContext
      description: Authenticated ClientContext that is passed to the custom provider.
    - id: handler
      type: PnP.Framework.Provisioning.Model.ExtensibilityHandler
      description: A custom Extensibility Provisioning Provider
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: ProvisioningTemplate that is passed to the custom provider
    - id: creationInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation
      description: The Provisioning Template creation information object
    - id: scope
      type: PnP.Framework.Diagnostics.PnPMonitoredScope
      description: The PnPMonitoredScope of the current step in the pipeline
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    content.vb: Public Function ExecuteExtensibilityExtractionCallOut(ctx As ClientContext, handler As ExtensibilityHandler, template As ProvisioningTemplate, creationInformation As ProvisioningTemplateCreationInformation, scope As PnPMonitoredScope) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut*
  exceptions:
  - type: PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
    commentId: T:PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Provider.Assembly or Provider.Type is NullOrWhiteSpace>
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ClientContext is Null>
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Extensibility
  commentId: N:PnP.Framework.Provisioning.Extensibility
  name: PnP.Framework.Provisioning.Extensibility
  nameWithType: PnP.Framework.Provisioning.Extensibility
  fullName: PnP.Framework.Provisioning.Extensibility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ExtensibilityManager>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ExtensibilityManager>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Extensibility.ExtensibilityManager>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ExtensibilityManager)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Extensibility.ExtensibilityManager)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ExtensibilityManager)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ExtensibilityManager>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ExtensibilityManager>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Extensibility.ExtensibilityManager>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ExtensibilityManager)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ExtensibilityManager)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Extensibility.ExtensibilityManager)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Extensibility.ExtensibilityManager,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ExtensibilityManager, T>(Expression<Func<ExtensibilityManager, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ExtensibilityManager, T>(Expression<Func<ExtensibilityManager, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Extensibility.ExtensibilityManager, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Extensibility.ExtensibilityManager, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ExtensibilityManager, T)(Expression(Of Func(Of ExtensibilityManager, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Extensibility.ExtensibilityManager, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Extensibility.ExtensibilityManager, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ExtensibilityManager, T)(Expression(Of Func(Of ExtensibilityManager, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ExtensibilityManager, T>
    nameWithType: ObjectExtensions.Set<ExtensibilityManager, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Extensibility.ExtensibilityManager, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
    name: ExtensibilityManager
    nameWithType: ExtensibilityManager
    fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ExtensibilityManager, T)
    nameWithType: ObjectExtensions.Set(Of ExtensibilityManager, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Extensibility.ExtensibilityManager, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
    name: ExtensibilityManager
    nameWithType: ExtensibilityManager
    fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
  commentId: T:PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
  name: ExtensiblityPipelineException
  nameWithType: ExtensiblityPipelineException
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensiblityPipelineException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut*
  commentId: Overload:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut
  name: ExecuteExtensibilityCallOut
  nameWithType: ExtensibilityManager.ExecuteExtensibilityCallOut
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut
- uid: Microsoft.SharePoint.Client.ClientContext
  commentId: T:Microsoft.SharePoint.Client.ClientContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientContext
  nameWithType: ClientContext
  fullName: Microsoft.SharePoint.Client.ClientContext
- uid: PnP.Framework.Provisioning.Model.ExtensibilityHandler
  commentId: T:PnP.Framework.Provisioning.Model.ExtensibilityHandler
  parent: PnP.Framework.Provisioning.Model
  name: ExtensibilityHandler
  nameWithType: ExtensibilityHandler
  fullName: PnP.Framework.Provisioning.Model.ExtensibilityHandler
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut*
  commentId: Overload:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut
  name: ExecuteTokenProviderCallOut
  nameWithType: ExtensibilityManager.ExecuteTokenProviderCallOut
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteTokenProviderCallOut
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TokenDefinition>
  nameWithType: IEnumerable<TokenDefinition>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition>
  nameWithType.vb: IEnumerable(Of TokenDefinition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition)
  name.vb: IEnumerable(Of TokenDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
    name: TokenDefinition
    nameWithType: TokenDefinition
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
    name: TokenDefinition
    nameWithType: TokenDefinition
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut*
  commentId: Overload:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut
  name: ExecuteExtensibilityProvisionCallOut
  nameWithType: ExtensibilityManager.ExecuteExtensibilityProvisionCallOut
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityProvisionCallOut
- uid: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
  parent: PnP.Framework.Provisioning.ObjectHandlers
  name: ProvisioningTemplateApplyingInformation
  nameWithType: ProvisioningTemplateApplyingInformation
  fullName: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  parent: PnP.Framework.Provisioning.ObjectHandlers
  name: TokenParser
  nameWithType: TokenParser
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
- uid: PnP.Framework.Diagnostics.PnPMonitoredScope
  commentId: T:PnP.Framework.Diagnostics.PnPMonitoredScope
  parent: PnP.Framework.Diagnostics
  name: PnPMonitoredScope
  nameWithType: PnPMonitoredScope
  fullName: PnP.Framework.Diagnostics.PnPMonitoredScope
- uid: PnP.Framework.Provisioning.ObjectHandlers
  commentId: N:PnP.Framework.Provisioning.ObjectHandlers
  name: PnP.Framework.Provisioning.ObjectHandlers
  nameWithType: PnP.Framework.Provisioning.ObjectHandlers
  fullName: PnP.Framework.Provisioning.ObjectHandlers
- uid: PnP.Framework.Diagnostics
  commentId: N:PnP.Framework.Diagnostics
  name: PnP.Framework.Diagnostics
  nameWithType: PnP.Framework.Diagnostics
  fullName: PnP.Framework.Diagnostics
- uid: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut*
  commentId: Overload:PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut
  name: ExecuteExtensibilityExtractionCallOut
  nameWithType: ExtensibilityManager.ExecuteExtensibilityExtractionCallOut
  fullName: PnP.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityExtractionCallOut
- uid: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation
  parent: PnP.Framework.Provisioning.ObjectHandlers
  name: ProvisioningTemplateCreationInformation
  nameWithType: ProvisioningTemplateCreationInformation
  fullName: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
  commentId: T:PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
  id: UserLicenseCollection
  parent: PnP.Framework.Provisioning.Model.AzureActiveDirectory
  children:
  - PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  langs:
  - csharp
  - vb
  name: UserLicenseCollection
  nameWithType: UserLicenseCollection
  fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/AzureActiveDirectory/UserLicenseCollection.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UserLicenseCollection
    path: ../src/lib/PnP.Framework/Provisioning/Model/AzureActiveDirectory/UserLicenseCollection.cs
    startLine: 5
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.AzureActiveDirectory
  summary: "\nCollection of AAD Users&apos; Licenses\n"
  example: []
  syntax:
    content: 'public class UserLicenseCollection : BaseProvisioningTemplateObjectCollection<UserLicense>, IList<UserLicense>, ICollection<UserLicense>, IReadOnlyList<UserLicense>, IReadOnlyCollection<UserLicense>, IEnumerable<UserLicense>, IList, ICollection, IEnumerable, IProvisioningTemplateDescendant'
    content.vb: >-
      Public Class UserLicenseCollection
          Inherits BaseProvisioningTemplateObjectCollection(Of UserLicense)
          Implements IList(Of UserLicense), ICollection(Of UserLicense), IReadOnlyList(Of UserLicense), IReadOnlyCollection(Of UserLicense), IEnumerable(Of UserLicense), IList, ICollection, IEnumerable, IProvisioningTemplateDescendant
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  implements:
  - System.Collections.Generic.IList{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  - System.Collections.Generic.ICollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  - System.Collections.Generic.IReadOnlyList{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  - System.Collections.Generic.IReadOnlyCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  - System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.ParentTemplate
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.InsertItem(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveItem(System.Int32)
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.SetItem(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.ClearItems
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.AddRange(System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Find(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Int32,System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Int32,System.Int32,System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveAll(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Add(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Clear
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Contains(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.CopyTo(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense[],System.Int32)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.GetEnumerator
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.IndexOf(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Insert(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Remove(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Count
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Items
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  - PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{{TKey}}},System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,{TKey}},System.Boolean)
  - System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}},System.Collections.Generic.IEqualityComparer{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense},System.Boolean)
  - System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{{TKey}}},System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,{TKey}},System.Boolean)
  - System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}},System.Collections.Generic.IEqualityComparer{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense},System.Boolean)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: '#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)'
  parent: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
  langs:
  - csharp
  - vb
  name: UserLicenseCollection(ProvisioningTemplate)
  nameWithType: UserLicenseCollection.UserLicenseCollection(ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.UserLicenseCollection(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/AzureActiveDirectory/UserLicenseCollection.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/AzureActiveDirectory/UserLicenseCollection.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.AzureActiveDirectory
  summary: "\nConstructor for UserLicenseCollection class\n"
  example: []
  syntax:
    content: public UserLicenseCollection(ProvisioningTemplate parentTemplate)
    parameters:
    - id: parentTemplate
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Parent provisioning template
    content.vb: Public Sub New(parentTemplate As ProvisioningTemplate)
  overload: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory
  commentId: N:PnP.Framework.Provisioning.Model.AzureActiveDirectory
  name: PnP.Framework.Provisioning.Model.AzureActiveDirectory
  nameWithType: PnP.Framework.Provisioning.Model.AzureActiveDirectory
  fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  commentId: T:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<UserLicense>
  nameWithType: Collection<UserLicense>
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  nameWithType.vb: Collection(Of UserLicense)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  name.vb: Collection(Of UserLicense)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  commentId: T:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  parent: PnP.Framework.Provisioning.Model
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1
  name: BaseProvisioningTemplateObjectCollection<UserLicense>
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  name.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1
    name: BaseProvisioningTemplateObjectCollection
    nameWithType: BaseProvisioningTemplateObjectCollection
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1
    name: BaseProvisioningTemplateObjectCollection
    nameWithType: BaseProvisioningTemplateObjectCollection
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  commentId: T:System.Collections.Generic.IList{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<UserLicense>
  nameWithType: IList<UserLicense>
  fullName: System.Collections.Generic.IList<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  nameWithType.vb: IList(Of UserLicense)
  fullName.vb: System.Collections.Generic.IList(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  name.vb: IList(Of UserLicense)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  commentId: T:System.Collections.Generic.ICollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<UserLicense>
  nameWithType: ICollection<UserLicense>
  fullName: System.Collections.Generic.ICollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  nameWithType.vb: ICollection(Of UserLicense)
  fullName.vb: System.Collections.Generic.ICollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  name.vb: ICollection(Of UserLicense)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  commentId: T:System.Collections.Generic.IReadOnlyList{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<UserLicense>
  nameWithType: IReadOnlyList<UserLicense>
  fullName: System.Collections.Generic.IReadOnlyList<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  nameWithType.vb: IReadOnlyList(Of UserLicense)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  name.vb: IReadOnlyList(Of UserLicense)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<UserLicense>
  nameWithType: IReadOnlyCollection<UserLicense>
  fullName: System.Collections.Generic.IReadOnlyCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  nameWithType.vb: IReadOnlyCollection(Of UserLicense)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  name.vb: IReadOnlyCollection(Of UserLicense)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UserLicense>
  nameWithType: IEnumerable<UserLicense>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  nameWithType.vb: IEnumerable(Of UserLicense)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  name.vb: IEnumerable(Of UserLicense)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ParentTemplate
  name: ParentTemplate
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.ParentTemplate
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).ParentTemplate
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).ParentTemplate
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.InsertItem(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.InsertItem(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.InsertItem(System.Int32,`0)
  name: InsertItem(Int32, UserLicense)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.InsertItem(Int32, UserLicense)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.InsertItem(System.Int32, PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).InsertItem(Int32, UserLicense)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).InsertItem(System.Int32, PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.InsertItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).InsertItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveItem(System.Int32)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveItem(System.Int32)
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.RemoveItem(Int32)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.RemoveItem(System.Int32)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).RemoveItem(Int32)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).RemoveItem(System.Int32)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.RemoveItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).RemoveItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.SetItem(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.SetItem(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.SetItem(System.Int32,`0)
  name: SetItem(Int32, UserLicense)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.SetItem(Int32, UserLicense)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.SetItem(System.Int32, PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).SetItem(Int32, UserLicense)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).SetItem(System.Int32, PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.SetItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).SetItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.ClearItems
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.ClearItems
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ClearItems
  name: ClearItems()
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.ClearItems()
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.ClearItems()
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).ClearItems()
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).ClearItems()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ClearItems
    name: ClearItems
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.ClearItems
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ClearItems
    name: ClearItems
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).ClearItems
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.AddRange(System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.AddRange(System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<UserLicense>)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.AddRange(IEnumerable<UserLicense>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.AddRange(System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).AddRange(IEnumerable(Of UserLicense))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).AddRange(System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense))
  name.vb: AddRange(IEnumerable(Of UserLicense))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.AddRange
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).AddRange
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Find(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Find(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.Find(System.Predicate{`0})
  name: Find(Predicate<UserLicense>)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.Find(Predicate<UserLicense>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Find(System.Predicate<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).Find(Predicate(Of UserLicense))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Find(System.Predicate(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense))
  name.vb: Find(Predicate(Of UserLicense))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.Find
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).Find
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<UserLicense>)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.FindIndex(Predicate<UserLicense>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.FindIndex(System.Predicate<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).FindIndex(Predicate(Of UserLicense))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).FindIndex(System.Predicate(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense))
  name.vb: FindIndex(Predicate(Of UserLicense))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Int32,System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Int32,System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<UserLicense>)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.FindIndex(Int32, Predicate<UserLicense>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.FindIndex(System.Int32, System.Predicate<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).FindIndex(Int32, Predicate(Of UserLicense))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).FindIndex(System.Int32, System.Predicate(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense))
  name.vb: FindIndex(Int32, Predicate(Of UserLicense))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Int32,System.Int32,System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.FindIndex(System.Int32,System.Int32,System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<UserLicense>)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.FindIndex(Int32, Int32, Predicate<UserLicense>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.FindIndex(System.Int32, System.Int32, System.Predicate<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).FindIndex(Int32, Int32, Predicate(Of UserLicense))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).FindIndex(System.Int32, System.Int32, System.Predicate(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense))
  name.vb: FindIndex(Int32, Int32, Predicate(Of UserLicense))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveAll(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveAll(System.Predicate{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<UserLicense>)
  nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.RemoveAll(Predicate<UserLicense>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.RemoveAll(System.Predicate<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of UserLicense).RemoveAll(Predicate(Of UserLicense))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).RemoveAll(System.Predicate(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense))
  name.vb: RemoveAll(Predicate(Of UserLicense))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: BaseProvisioningTemplateObjectCollection<UserLicense>.RemoveAll
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: BaseProvisioningTemplateObjectCollection(Of UserLicense).RemoveAll
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<UserLicense>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<UserLicense>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of UserLicense).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<UserLicense>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<UserLicense>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of UserLicense).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Add(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Add(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(UserLicense)
  nameWithType: Collection<UserLicense>.Add(UserLicense)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Add(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  nameWithType.vb: Collection(Of UserLicense).Add(UserLicense)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Add(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<UserLicense>.Add
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of UserLicense).Add
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Clear
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<UserLicense>.Clear()
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Clear()
  nameWithType.vb: Collection(Of UserLicense).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<UserLicense>.Clear
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of UserLicense).Clear
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Contains(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Contains(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(UserLicense)
  nameWithType: Collection<UserLicense>.Contains(UserLicense)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Contains(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  nameWithType.vb: Collection(Of UserLicense).Contains(UserLicense)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Contains(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<UserLicense>.Contains
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of UserLicense).Contains
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.CopyTo(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.CopyTo(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(UserLicense[], Int32)
  nameWithType: Collection<UserLicense>.CopyTo(UserLicense[], Int32)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.CopyTo(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense[], System.Int32)
  nameWithType.vb: Collection(Of UserLicense).CopyTo(UserLicense(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).CopyTo(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense(), System.Int32)
  name.vb: CopyTo(UserLicense(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<UserLicense>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of UserLicense).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<UserLicense>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.GetEnumerator()
  nameWithType.vb: Collection(Of UserLicense).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<UserLicense>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of UserLicense).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.IndexOf(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.IndexOf(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(UserLicense)
  nameWithType: Collection<UserLicense>.IndexOf(UserLicense)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.IndexOf(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  nameWithType.vb: Collection(Of UserLicense).IndexOf(UserLicense)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).IndexOf(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<UserLicense>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of UserLicense).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Insert(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Insert(System.Int32,PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, UserLicense)
  nameWithType: Collection<UserLicense>.Insert(Int32, UserLicense)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Insert(System.Int32, PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  nameWithType.vb: Collection(Of UserLicense).Insert(Int32, UserLicense)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Insert(System.Int32, PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<UserLicense>.Insert
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of UserLicense).Insert
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Remove(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Remove(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(UserLicense)
  nameWithType: Collection<UserLicense>.Remove(UserLicense)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Remove(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  nameWithType.vb: Collection(Of UserLicense).Remove(UserLicense)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Remove(PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<UserLicense>.Remove
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of UserLicense).Remove
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<UserLicense>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of UserLicense).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<UserLicense>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of UserLicense).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<UserLicense>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<UserLicense>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of UserLicense).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<UserLicense>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<UserLicense>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of UserLicense).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<UserLicense>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<UserLicense>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of UserLicense).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<UserLicense>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<UserLicense>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of UserLicense).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<UserLicense>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<UserLicense>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of UserLicense).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<UserLicense>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<UserLicense>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of UserLicense).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<UserLicense>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<UserLicense>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of UserLicense).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Count
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Count
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<UserLicense>.Count
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Count
  nameWithType.vb: Collection(Of UserLicense).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Count
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<UserLicense>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Item[System.Int32]
  nameWithType.vb: Collection(Of UserLicense).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<UserLicense>.Item
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of UserLicense).Item
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Items
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.Items
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<UserLicense>.Items
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.Items
  nameWithType.vb: Collection(Of UserLicense).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).Items
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<UserLicense>.IsReadOnly
  nameWithType: Collection<UserLicense>.ICollection<UserLicense>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.Generic.ICollection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.IsReadOnly
  nameWithType.vb: Collection(Of UserLicense).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<UserLicense>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of UserLicense).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<UserLicense>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of UserLicense).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<UserLicense>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<UserLicense>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<UserLicense>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of UserLicense).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<UserLicense>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of UserLicense).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<UserLicenseCollection>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<UserLicenseCollection>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of UserLicenseCollection)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of UserLicenseCollection)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<UserLicenseCollection>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<UserLicenseCollection>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of UserLicenseCollection)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of UserLicenseCollection)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense})
  commentId: M:PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: PnP.Framework.Extensions.EnumerableExtensions
  definition: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: DeepEquals<UserLicense>(IEnumerable<UserLicense>)
  nameWithType: EnumerableExtensions.DeepEquals<UserLicense>(IEnumerable<UserLicense>)
  fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>(System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>)
  nameWithType.vb: EnumerableExtensions.DeepEquals(Of UserLicense)(IEnumerable(Of UserLicense))
  fullName.vb: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)(System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense))
  name.vb: DeepEquals(Of UserLicense)(IEnumerable(Of UserLicense))
  spec.csharp:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals<UserLicense>
    nameWithType: EnumerableExtensions.DeepEquals<UserLicense>
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals(Of UserLicense)
    nameWithType: EnumerableExtensions.DeepEquals(Of UserLicense)
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<UserLicenseCollection, T>(Expression<Func<UserLicenseCollection, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<UserLicenseCollection, T>(Expression<Func<UserLicenseCollection, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of UserLicenseCollection, T)(Expression(Of Func(Of UserLicenseCollection, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of UserLicenseCollection, T)(Expression(Of Func(Of UserLicenseCollection, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<UserLicenseCollection, T>
    nameWithType: ObjectExtensions.Set<UserLicenseCollection, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
    name: UserLicenseCollection
    nameWithType: UserLicenseCollection
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of UserLicenseCollection, T)
    nameWithType: ObjectExtensions.Set(Of UserLicenseCollection, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
    name: UserLicenseCollection
    nameWithType: UserLicenseCollection
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{{TKey}}},System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,{TKey}},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  name: Sort<UserLicense, TKey>(Func<UserLicense, IEnumerable<TKey>>, Func<UserLicense, TKey>, Boolean)
  nameWithType: TopologicalSort.Sort<UserLicense, TKey>(Func<UserLicense, IEnumerable<TKey>>, Func<UserLicense, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey>(System.Func<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable<TKey>>, System.Func<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of UserLicense, TKey)(Func(Of UserLicense, IEnumerable(Of TKey)), Func(Of UserLicense, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey)(System.Func(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey), System.Boolean)
  name.vb: Sort(Of UserLicense, TKey)(Func(Of UserLicense, IEnumerable(Of TKey)), Func(Of UserLicense, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort<UserLicense, TKey>
    nameWithType: TopologicalSort.Sort<UserLicense, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort(Of UserLicense, TKey)
    nameWithType: TopologicalSort.Sort(Of UserLicense, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}},System.Collections.Generic.IEqualityComparer{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  name: Sort<UserLicense>(Func<UserLicense, IEnumerable<UserLicense>>, IEqualityComparer<UserLicense>, Boolean)
  nameWithType: TopologicalSort.Sort<UserLicense>(Func<UserLicense, IEnumerable<UserLicense>>, IEqualityComparer<UserLicense>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>(System.Func<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>>, System.Collections.Generic.IEqualityComparer<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of UserLicense)(Func(Of UserLicense, IEnumerable(Of UserLicense)), IEqualityComparer(Of UserLicense), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)(System.Func(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)), System.Collections.Generic.IEqualityComparer(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense), System.Boolean)
  name.vb: Sort(Of UserLicense)(Func(Of UserLicense, IEnumerable(Of UserLicense)), IEqualityComparer(Of UserLicense), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort<UserLicense>
    nameWithType: TopologicalSort.Sort<UserLicense>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort(Of UserLicense)
    nameWithType: TopologicalSort.Sort(Of UserLicense)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{{TKey}}},System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,{TKey}},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  name: Group<UserLicense, TKey>(Func<UserLicense, IEnumerable<TKey>>, Func<UserLicense, TKey>, Boolean)
  nameWithType: TopologicalSort.Group<UserLicense, TKey>(Func<UserLicense, IEnumerable<TKey>>, Func<UserLicense, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey>(System.Func<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable<TKey>>, System.Func<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of UserLicense, TKey)(Func(Of UserLicense, IEnumerable(Of TKey)), Func(Of UserLicense, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey)(System.Func(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey), System.Boolean)
  name.vb: Group(Of UserLicense, TKey)(Func(Of UserLicense, IEnumerable(Of TKey)), Func(Of UserLicense, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group<UserLicense, TKey>
    nameWithType: TopologicalSort.Group<UserLicense, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group(Of UserLicense, TKey)
    nameWithType: TopologicalSort.Group(Of UserLicense, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}.PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense}},System.Collections.Generic.IEqualityComparer{PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  name: Group<UserLicense>(Func<UserLicense, IEnumerable<UserLicense>>, IEqualityComparer<UserLicense>, Boolean)
  nameWithType: TopologicalSort.Group<UserLicense>(Func<UserLicense, IEnumerable<UserLicense>>, IEqualityComparer<UserLicense>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>(System.Func<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>>, System.Collections.Generic.IEqualityComparer<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of UserLicense)(Func(Of UserLicense, IEnumerable(Of UserLicense)), IEqualityComparer(Of UserLicense), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)(System.Func(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense, System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)), System.Collections.Generic.IEqualityComparer(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense), System.Boolean)
  name.vb: Group(Of UserLicense)(Func(Of UserLicense, IEnumerable(Of UserLicense)), IEqualityComparer(Of UserLicense), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group<UserLicense>
    nameWithType: TopologicalSort.Group<UserLicense>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group(Of UserLicense)
    nameWithType: TopologicalSort.Group(Of UserLicense)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
    name: UserLicense
    nameWithType: UserLicense
    fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicense
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1
  commentId: T:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1
  name: BaseProvisioningTemplateObjectCollection<T>
  nameWithType: BaseProvisioningTemplateObjectCollection<T>
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T)
  name.vb: BaseProvisioningTemplateObjectCollection(Of T)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1
    name: BaseProvisioningTemplateObjectCollection
    nameWithType: BaseProvisioningTemplateObjectCollection
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1
    name: BaseProvisioningTemplateObjectCollection
    nameWithType: BaseProvisioningTemplateObjectCollection
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ParentTemplate
  name: ParentTemplate
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.ParentTemplate
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).ParentTemplate
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).ParentTemplate
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.InsertItem(System.Int32,`0)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: InsertItem(Int32, T)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.InsertItem(Int32, T)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.InsertItem(System.Int32, T)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).InsertItem(Int32, T)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.InsertItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).InsertItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveItem(System.Int32)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.RemoveItem(Int32)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.RemoveItem(System.Int32)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).RemoveItem(Int32)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.RemoveItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).RemoveItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.SetItem(System.Int32,`0)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.SetItem(System.Int32,`0)
  isExternal: true
  name: SetItem(Int32, T)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.SetItem(Int32, T)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.SetItem(System.Int32, T)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).SetItem(Int32, T)
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.SetItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).SetItem
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ClearItems
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ClearItems
  name: ClearItems()
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.ClearItems()
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.ClearItems()
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).ClearItems()
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).ClearItems()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ClearItems
    name: ClearItems
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.ClearItems
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.ClearItems
    name: ClearItems
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).ClearItems
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.AddRange(IEnumerable<T>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.AddRange
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).AddRange
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.Find(System.Predicate{`0})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.Find(Predicate<T>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.Find(System.Predicate<T>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).Find(Predicate(Of T))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.Find
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).Find
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Predicate{`0})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.FindIndex(Predicate<T>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).FindIndex(Predicate(Of T))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.FindIndex(Int32, Predicate<T>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).FindIndex
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).FindIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveAll(System.Predicate{`0})
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: BaseProvisioningTemplateObjectCollection<T>.RemoveAll(Predicate<T>)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: BaseProvisioningTemplateObjectCollection(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: BaseProvisioningTemplateObjectCollection<T>.RemoveAll
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection<T>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: BaseProvisioningTemplateObjectCollection(Of T).RemoveAll
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectCollection(Of T).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: DeepEquals<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: EnumerableExtensions.DeepEquals<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.DeepEquals(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: DeepEquals(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals<T>
    nameWithType: EnumerableExtensions.DeepEquals<T>
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals(Of T)
    nameWithType: EnumerableExtensions.DeepEquals(Of T)
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.EnumerableExtensions
  commentId: T:PnP.Framework.Extensions.EnumerableExtensions
  parent: PnP.Framework.Extensions
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: PnP.Framework.Extensions.EnumerableExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  isExternal: true
  name: Sort<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  nameWithType: TopologicalSort.Sort<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<TKey>>, System.Func<T, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of T, TKey), System.Boolean)
  name.vb: Sort(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort<T, TKey>
    nameWithType: TopologicalSort.Sort<T, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort(Of T, TKey)
    nameWithType: TopologicalSort.Sort(Of T, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort
  commentId: T:PnP.Framework.Extensions.TopologicalSort
  parent: PnP.Framework.Extensions
  name: TopologicalSort
  nameWithType: TopologicalSort
  fullName: PnP.Framework.Extensions.TopologicalSort
- uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  isExternal: true
  name: Sort<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  nameWithType: TopologicalSort.Sort<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEqualityComparer<T>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEqualityComparer(Of T), System.Boolean)
  name.vb: Sort(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort<T>
    nameWithType: TopologicalSort.Sort<T>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort(Of T)
    nameWithType: TopologicalSort.Sort(Of T)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  isExternal: true
  name: Group<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  nameWithType: TopologicalSort.Group<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<TKey>>, System.Func<T, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of T, TKey), System.Boolean)
  name.vb: Group(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group<T, TKey>
    nameWithType: TopologicalSort.Group<T, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group(Of T, TKey)
    nameWithType: TopologicalSort.Group(Of T, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  isExternal: true
  name: Group<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  nameWithType: TopologicalSort.Group<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEqualityComparer<T>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEqualityComparer(Of T), System.Boolean)
  name.vb: Group(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group<T>
    nameWithType: TopologicalSort.Group<T>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group(Of T)
    nameWithType: TopologicalSort.Group(Of T)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.#ctor
  name: UserLicenseCollection
  nameWithType: UserLicenseCollection.UserLicenseCollection
  fullName: PnP.Framework.Provisioning.Model.AzureActiveDirectory.UserLicenseCollection.UserLicenseCollection
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
  commentId: T:PnP.Framework.Provisioning.Model.BaseClientSidePage
  id: BaseClientSidePage
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.#ctor
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Header
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Security
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.Title
  langs:
  - csharp
  - vb
  name: BaseClientSidePage
  nameWithType: BaseClientSidePage
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BaseClientSidePage
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 10
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines a base Client Side Page\n"
  example: []
  syntax:
    content: 'public abstract class BaseClientSidePage : BaseModel, IProvisioningTemplateDescendant, IEquatable<BaseClientSidePage>'
    content.vb: >-
      Public MustInherit Class BaseClientSidePage
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of BaseClientSidePage)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  derivedClasses:
  - PnP.Framework.Provisioning.Model.ClientSidePage
  - PnP.Framework.Provisioning.Model.TranslatedClientSidePage
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.BaseClientSidePage}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.BaseClientSidePage.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.BaseClientSidePage,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections
  id: Sections
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Sections
  nameWithType: BaseClientSidePage.Sections
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Sections
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the sections\n"
  example: []
  syntax:
    content: public CanvasSectionCollection Sections { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.CanvasSectionCollection
    content.vb: Public ReadOnly Property Sections As CanvasSectionCollection
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Security
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Security
  id: Security
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: BaseClientSidePage.Security
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Security
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Security
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 34
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Security rules for the client-side Page\n"
  example: []
  syntax:
    content: public ObjectSecurity Security { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.ObjectSecurity
    content.vb: Public ReadOnly Property Security As ObjectSecurity
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Security*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle
  id: PromoteAsNewsArticle
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: PromoteAsNewsArticle
  nameWithType: BaseClientSidePage.PromoteAsNewsArticle
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PromoteAsNewsArticle
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 54
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether to promote the page as a news article, optional attribute\n"
  example: []
  syntax:
    content: public bool PromoteAsNewsArticle { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PromoteAsNewsArticle As Boolean
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate
  id: PromoteAsTemplate
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: PromoteAsTemplate
  nameWithType: BaseClientSidePage.PromoteAsTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PromoteAsTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether to promote the page as a template, optional attribute\n"
  example: []
  syntax:
    content: public bool PromoteAsTemplate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PromoteAsTemplate As Boolean
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite
  id: Overwrite
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Overwrite
  nameWithType: BaseClientSidePage.Overwrite
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Overwrite
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 64
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether the page can be overwritten if it exists\n"
  example: []
  syntax:
    content: public bool Overwrite { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Overwrite As Boolean
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout
  id: Layout
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Layout
  nameWithType: BaseClientSidePage.Layout
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Layout
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 69
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Layout for the client-side page\n"
  example: []
  syntax:
    content: public string Layout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Layout As String
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish
  id: Publish
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Publish
  nameWithType: BaseClientSidePage.Publish
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Publish
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 74
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether to publish the client-side page or not\n"
  example: []
  syntax:
    content: public bool Publish { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Publish As Boolean
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments
  id: EnableComments
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: EnableComments
  nameWithType: BaseClientSidePage.EnableComments
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EnableComments
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 79
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether the page will have comments enabled or not\n"
  example: []
  syntax:
    content: public bool EnableComments { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableComments As Boolean
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Title
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Title
  id: Title
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: BaseClientSidePage.Title
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Title
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Title
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 84
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Title for the client-side page\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID
  id: ContentTypeID
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: ContentTypeID
  nameWithType: BaseClientSidePage.ContentTypeID
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ContentTypeID
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 89
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the ContentTypeID for the client-side page\n"
  example: []
  syntax:
    content: public string ContentTypeID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentTypeID As String
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Header
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Header
  id: Header
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: BaseClientSidePage.Header
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Header
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Header
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 94
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Header for the client-side page\n"
  example: []
  syntax:
    content: public ClientSidePageHeader Header { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.ClientSidePageHeader
    content.vb: Public Property Header As ClientSidePageHeader
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Header*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues
  id: FieldValues
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: FieldValues
  nameWithType: BaseClientSidePage.FieldValues
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FieldValues
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 117
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the page fields values, if any\n"
  example: []
  syntax:
    content: public Dictionary<string, string> FieldValues { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property FieldValues As Dictionary(Of String, String)
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties
  id: Properties
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: BaseClientSidePage.Properties
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Properties
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 122
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines property bag properties for the client side page\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property Properties As Dictionary(Of String, String)
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl
  commentId: P:PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl
  id: ThumbnailUrl
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: ThumbnailUrl
  nameWithType: BaseClientSidePage.ThumbnailUrl
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ThumbnailUrl
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 127
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the URL of the thumbnail for the client side page\n"
  example: []
  syntax:
    content: public string ThumbnailUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThumbnailUrl As String
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.BaseClientSidePage.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: BaseClientSidePage()
  nameWithType: BaseClientSidePage.BaseClientSidePage()
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.BaseClientSidePage()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 136
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for BaseClientSidePage class\n"
  example: []
  syntax:
    content: public BaseClientSidePage()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BaseClientSidePage.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 150
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode
  commentId: M:PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode
  id: GetInheritedHashCode
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: GetInheritedHashCode()
  nameWithType: BaseClientSidePage.GetInheritedHashCode()
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetInheritedHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 173
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nReturns the HashCode of the members of any inherited type\n"
  example: []
  syntax:
    content: protected abstract int GetInheritedHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Protected MustOverride Function GetInheritedHashCode As Integer
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BaseClientSidePage.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 180
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with BaseClientSidePage class\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents BaseClientSidePage
    return:
      type: System.Boolean
      description: Checks whether object is BaseClientSidePage class
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  commentId: M:PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  id: Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: Equals(BaseClientSidePage)
  nameWithType: BaseClientSidePage.Equals(BaseClientSidePage)
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 195
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares BaseClientSidePage object based on Sections, PromoteAsNewsArticle, Overwrite, Layout, \nPublish, EnableComments, Title, Properties, PromoteAsTemplate, and ThumbnailUrl\n"
  example: []
  syntax:
    content: public bool Equals(BaseClientSidePage other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.BaseClientSidePage
      description: BaseClientSidePage Class object
    return:
      type: System.Boolean
      description: true if the BaseClientSidePage object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As BaseClientSidePage) As Boolean
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.BaseClientSidePage}.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  commentId: M:PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  id: EqualsInherited(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  parent: PnP.Framework.Provisioning.Model.BaseClientSidePage
  langs:
  - csharp
  - vb
  name: EqualsInherited(BaseClientSidePage)
  nameWithType: BaseClientSidePage.EqualsInherited(BaseClientSidePage)
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EqualsInherited
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/ModernExperiences/BaseClientSidePage.cs
    startLine: 222
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares the members of any inherited type\n"
  example: []
  syntax:
    content: protected abstract bool EqualsInherited(BaseClientSidePage other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.BaseClientSidePage
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected MustOverride Function EqualsInherited(other As BaseClientSidePage) As Boolean
  overload: PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.BaseClientSidePage}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.BaseClientSidePage}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BaseClientSidePage>
  nameWithType: IEquatable<BaseClientSidePage>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.BaseClientSidePage>
  nameWithType.vb: IEquatable(Of BaseClientSidePage)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.BaseClientSidePage)
  name.vb: IEquatable(Of BaseClientSidePage)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
    name: BaseClientSidePage
    nameWithType: BaseClientSidePage
    fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
    name: BaseClientSidePage
    nameWithType: BaseClientSidePage
    fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<BaseClientSidePage>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BaseClientSidePage>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.BaseClientSidePage>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of BaseClientSidePage)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.BaseClientSidePage)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of BaseClientSidePage)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<BaseClientSidePage>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BaseClientSidePage>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.BaseClientSidePage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of BaseClientSidePage)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of BaseClientSidePage)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.BaseClientSidePage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.BaseClientSidePage,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<BaseClientSidePage, T>(Expression<Func<BaseClientSidePage, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<BaseClientSidePage, T>(Expression<Func<BaseClientSidePage, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.BaseClientSidePage, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.BaseClientSidePage, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of BaseClientSidePage, T)(Expression(Of Func(Of BaseClientSidePage, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.BaseClientSidePage, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.BaseClientSidePage, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of BaseClientSidePage, T)(Expression(Of Func(Of BaseClientSidePage, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<BaseClientSidePage, T>
    nameWithType: ObjectExtensions.Set<BaseClientSidePage, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.BaseClientSidePage, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
    name: BaseClientSidePage
    nameWithType: BaseClientSidePage
    fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of BaseClientSidePage, T)
    nameWithType: ObjectExtensions.Set(Of BaseClientSidePage, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.BaseClientSidePage, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
    name: BaseClientSidePage
    nameWithType: BaseClientSidePage
    fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections
  name: Sections
  nameWithType: BaseClientSidePage.Sections
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Sections
- uid: PnP.Framework.Provisioning.Model.CanvasSectionCollection
  commentId: T:PnP.Framework.Provisioning.Model.CanvasSectionCollection
  parent: PnP.Framework.Provisioning.Model
  name: CanvasSectionCollection
  nameWithType: CanvasSectionCollection
  fullName: PnP.Framework.Provisioning.Model.CanvasSectionCollection
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Security*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Security
  name: Security
  nameWithType: BaseClientSidePage.Security
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Security
- uid: PnP.Framework.Provisioning.Model.ObjectSecurity
  commentId: T:PnP.Framework.Provisioning.Model.ObjectSecurity
  parent: PnP.Framework.Provisioning.Model
  name: ObjectSecurity
  nameWithType: ObjectSecurity
  fullName: PnP.Framework.Provisioning.Model.ObjectSecurity
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle
  name: PromoteAsNewsArticle
  nameWithType: BaseClientSidePage.PromoteAsNewsArticle
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsNewsArticle
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate
  name: PromoteAsTemplate
  nameWithType: BaseClientSidePage.PromoteAsTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.PromoteAsTemplate
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite
  name: Overwrite
  nameWithType: BaseClientSidePage.Overwrite
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Overwrite
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout
  name: Layout
  nameWithType: BaseClientSidePage.Layout
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Layout
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish
  name: Publish
  nameWithType: BaseClientSidePage.Publish
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Publish
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments
  name: EnableComments
  nameWithType: BaseClientSidePage.EnableComments
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.EnableComments
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Title*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Title
  name: Title
  nameWithType: BaseClientSidePage.Title
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Title
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID
  name: ContentTypeID
  nameWithType: BaseClientSidePage.ContentTypeID
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.ContentTypeID
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Header*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Header
  name: Header
  nameWithType: BaseClientSidePage.Header
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Header
- uid: PnP.Framework.Provisioning.Model.ClientSidePageHeader
  commentId: T:PnP.Framework.Provisioning.Model.ClientSidePageHeader
  parent: PnP.Framework.Provisioning.Model
  name: ClientSidePageHeader
  nameWithType: ClientSidePageHeader
  fullName: PnP.Framework.Provisioning.Model.ClientSidePageHeader
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues
  name: FieldValues
  nameWithType: BaseClientSidePage.FieldValues
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.FieldValues
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties
  name: Properties
  nameWithType: BaseClientSidePage.Properties
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Properties
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl
  name: ThumbnailUrl
  nameWithType: BaseClientSidePage.ThumbnailUrl
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.ThumbnailUrl
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.#ctor
  name: BaseClientSidePage
  nameWithType: BaseClientSidePage.BaseClientSidePage
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.BaseClientSidePage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode
  name: GetHashCode
  nameWithType: BaseClientSidePage.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode
  name: GetInheritedHashCode
  nameWithType: BaseClientSidePage.GetInheritedHashCode
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.GetInheritedHashCode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals
  name: Equals
  nameWithType: BaseClientSidePage.Equals
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.BaseClientSidePage}.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.BaseClientSidePage}.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.BaseClientSidePage}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BaseClientSidePage)
  nameWithType: IEquatable<BaseClientSidePage>.Equals(BaseClientSidePage)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.BaseClientSidePage>.Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  nameWithType.vb: IEquatable(Of BaseClientSidePage).Equals(BaseClientSidePage)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.BaseClientSidePage).Equals(PnP.Framework.Provisioning.Model.BaseClientSidePage)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BaseClientSidePage>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.BaseClientSidePage>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
    name: BaseClientSidePage
    nameWithType: BaseClientSidePage
    fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BaseClientSidePage).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.BaseClientSidePage).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
    name: BaseClientSidePage
    nameWithType: BaseClientSidePage
    fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage
  commentId: T:PnP.Framework.Provisioning.Model.BaseClientSidePage
  parent: PnP.Framework.Provisioning.Model
  name: BaseClientSidePage
  nameWithType: BaseClientSidePage
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited
  name: EqualsInherited
  nameWithType: BaseClientSidePage.EqualsInherited
  fullName: PnP.Framework.Provisioning.Model.BaseClientSidePage.EqualsInherited

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  commentId: T:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  id: BaseProvisioningTemplateObjectDictionary`2
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ClearItems
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.InsertItem(System.Int32,`1)
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ParentTemplate
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.RemoveItem(System.Int32)
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.SetItem(System.Int32,`1)
  langs:
  - csharp
  - vb
  name: BaseProvisioningTemplateObjectDictionary<TKey, TItem>
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BaseProvisioningTemplateObjectDictionary
    path: ../src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGeneric keyed collection of items stored in the ProvisioningTemplate graph\n"
  example: []
  syntax:
    content: 'public abstract class BaseProvisioningTemplateObjectDictionary<TKey, TItem> : KeyedCollection<TKey, TItem>, IList<TItem>, ICollection<TItem>, IReadOnlyList<TItem>, IReadOnlyCollection<TItem>, IEnumerable<TItem>, IList, ICollection, IEnumerable, IProvisioningTemplateDescendant where TItem : BaseModel'
    typeParameters:
    - id: TKey
      description: The type of the Key for the keyed collection
    - id: TItem
      description: The type of the Item for the keyed collection
    content.vb: >-
      Public MustInherit Class BaseProvisioningTemplateObjectDictionary(Of TKey, TItem As BaseModel)
          Inherits KeyedCollection(Of TKey, TItem)
          Implements IList(Of TItem), ICollection(Of TItem), IReadOnlyList(Of TItem), IReadOnlyCollection(Of TItem), IEnumerable(Of TItem), IList, ICollection, IEnumerable, IProvisioningTemplateDescendant
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{{TItem}}
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  implements:
  - System.Collections.Generic.IList{{TItem}}
  - System.Collections.Generic.ICollection{{TItem}}
  - System.Collections.Generic.IReadOnlyList{{TItem}}
  - System.Collections.Generic.IReadOnlyCollection{{TItem}}
  - System.Collections.Generic.IEnumerable{{TItem}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  inheritedMembers:
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.ChangeItemKey({TItem},{TKey})
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.ClearItems
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Contains({TKey})
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.GetKeyForItem({TItem})
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.InsertItem(System.Int32,{TItem})
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Remove({TKey})
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.SetItem(System.Int32,{TItem})
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Comparer
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Dictionary
  - System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Item({TKey})
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.Add({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.Clear
  - System.Collections.ObjectModel.Collection{{TItem}}.Contains({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.CopyTo({TItem}[],System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.GetEnumerator
  - System.Collections.ObjectModel.Collection{{TItem}}.IndexOf({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.Insert(System.Int32,{TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.Remove({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.Count
  - System.Collections.ObjectModel.Collection{{TItem}}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.Items
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{{TItem}})
  - PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary{{TKey},{TItem}},{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TKey}}},System.Func{{TItem},{TKey}},System.Boolean)
  - System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TItem}}},System.Collections.Generic.IEqualityComparer{{TItem}},System.Boolean)
  - System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TKey}}},System.Func{{TItem},{TKey}},System.Boolean)
  - System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TItem}}},System.Collections.Generic.IEqualityComparer{{TItem}},System.Boolean)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem)
  name.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem)
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: '#ctor(PnP.Framework.Provisioning.Model.ProvisioningTemplate)'
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  langs:
  - csharp
  - vb
  name: BaseProvisioningTemplateObjectDictionary(ProvisioningTemplate)
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.BaseProvisioningTemplateObjectDictionary(ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.BaseProvisioningTemplateObjectDictionary(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
    startLine: 17
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCustom constructor to manage the ParentTemplate for the collection \nand all the children of the collection\n"
  example: []
  syntax:
    content: public BaseProvisioningTemplateObjectDictionary(ProvisioningTemplate parentTemplate)
    parameters:
    - id: parentTemplate
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Parent provisioning template
    content.vb: Public Sub New(parentTemplate As ProvisioningTemplate)
  overload: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.#ctor*
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).BaseProvisioningTemplateObjectDictionary(ProvisioningTemplate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).BaseProvisioningTemplateObjectDictionary(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ParentTemplate
  id: ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  langs:
  - csharp
  - vb
  name: ParentTemplate
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ParentTemplate
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParentTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
    startLine: 27
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nReferences the parent ProvisioningTemplate for the current provisioning artifact\n"
  example: []
  syntax:
    content: public virtual ProvisioningTemplate ParentTemplate { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    content.vb: Public Overridable ReadOnly Property ParentTemplate As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ParentTemplate*
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant.ParentTemplate
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ParentTemplate
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ParentTemplate
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.InsertItem(System.Int32,`1)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.InsertItem(System.Int32,`1)
  id: InsertItem(System.Int32,`1)
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  langs:
  - csharp
  - vb
  name: InsertItem(Int32, TItem)
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.InsertItem(Int32, TItem)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.InsertItem(System.Int32, TItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: InsertItem
    path: ../src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
    startLine: 39
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: protected override void InsertItem(int index, TItem item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{TItem}'
    content.vb: Protected Overrides Sub InsertItem(index As Integer, item As TItem)
  overridden: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.InsertItem(System.Int32,{TItem})
  overload: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.InsertItem*
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).InsertItem(Int32, TItem)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).InsertItem(System.Int32, TItem)
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.SetItem(System.Int32,`1)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.SetItem(System.Int32,`1)
  id: SetItem(System.Int32,`1)
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  langs:
  - csharp
  - vb
  name: SetItem(Int32, TItem)
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.SetItem(Int32, TItem)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.SetItem(System.Int32, TItem)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetItem
    path: ../src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
    startLine: 44
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: protected override void SetItem(int index, TItem item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{TItem}'
    content.vb: Protected Overrides Sub SetItem(index As Integer, item As TItem)
  overridden: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.SetItem(System.Int32,{TItem})
  overload: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.SetItem*
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).SetItem(Int32, TItem)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).SetItem(System.Int32, TItem)
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.RemoveItem(System.Int32)
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  langs:
  - csharp
  - vb
  name: RemoveItem(Int32)
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.RemoveItem(Int32)
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.RemoveItem(System.Int32)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RemoveItem
    path: ../src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
    startLine: 50
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: protected override void RemoveItem(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Protected Overrides Sub RemoveItem(index As Integer)
  overridden: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.RemoveItem(System.Int32)
  overload: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.RemoveItem*
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).RemoveItem(Int32)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).RemoveItem(System.Int32)
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ClearItems
  commentId: M:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ClearItems
  id: ClearItems
  parent: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
  langs:
  - csharp
  - vb
  name: ClearItems()
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ClearItems()
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ClearItems()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearItems
    path: ../src/lib/PnP.Framework/Provisioning/Model/Base/BaseProvisioningTemplateObjectDictionary.cs
    startLine: 56
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: protected override void ClearItems()
    content.vb: Protected Overrides Sub ClearItems
  overridden: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.ClearItems
  overload: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ClearItems*
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ClearItems()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ClearItems()
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{{TItem}}
  commentId: T:System.Collections.ObjectModel.Collection{`1}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<TItem>
  nameWithType: Collection<TItem>
  fullName: System.Collections.ObjectModel.Collection<TItem>
  nameWithType.vb: Collection(Of TItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem)
  name.vb: Collection(Of TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{`0,`1}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{{TItem}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TItem>
  nameWithType: IList<TItem>
  fullName: System.Collections.Generic.IList<TItem>
  nameWithType.vb: IList(Of TItem)
  fullName.vb: System.Collections.Generic.IList(Of TItem)
  name.vb: IList(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TItem}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TItem>
  nameWithType: ICollection<TItem>
  fullName: System.Collections.Generic.ICollection<TItem>
  nameWithType.vb: ICollection(Of TItem)
  fullName.vb: System.Collections.Generic.ICollection(Of TItem)
  name.vb: ICollection(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{{TItem}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TItem>
  nameWithType: IReadOnlyList<TItem>
  fullName: System.Collections.Generic.IReadOnlyList<TItem>
  nameWithType.vb: IReadOnlyList(Of TItem)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of TItem)
  name.vb: IReadOnlyList(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{{TItem}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<TItem>
  nameWithType: IReadOnlyCollection<TItem>
  fullName: System.Collections.Generic.IReadOnlyCollection<TItem>
  nameWithType.vb: IReadOnlyCollection(Of TItem)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TItem)
  name.vb: IReadOnlyCollection(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TItem}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TItem>
  nameWithType: IEnumerable<TItem>
  fullName: System.Collections.Generic.IEnumerable<TItem>
  nameWithType.vb: IEnumerable(Of TItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TItem)
  name.vb: IEnumerable(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.ChangeItemKey({TItem},{TKey})
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.ChangeItemKey(`1,`0)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  name: ChangeItemKey(TItem, TKey)
  nameWithType: KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection<TKey, TItem>.ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection(Of TKey, TItem).ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.ClearItems
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.ClearItems
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  name: ClearItems()
  nameWithType: KeyedCollection<TKey, TItem>.ClearItems()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems()
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ClearItems()
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection<TKey, TItem>.ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection(Of TKey, TItem).ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Contains({TKey})
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.Contains(`0)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  name: Contains(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Contains(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Contains(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection<TKey, TItem>.Contains
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection(Of TKey, TItem).Contains
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.GetKeyForItem({TItem})
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.GetKeyForItem(`1)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  name: GetKeyForItem(TItem)
  nameWithType: KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection<TKey, TItem>.GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection(Of TKey, TItem).GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.InsertItem(System.Int32,{TItem})
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.InsertItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  name: InsertItem(Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.InsertItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem(System.Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).InsertItem(Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection<TKey, TItem>.InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection(Of TKey, TItem).InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Remove({TKey})
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.Remove(`0)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  name: Remove(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Remove(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Remove(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection<TKey, TItem>.Remove
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection(Of TKey, TItem).Remove
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: KeyedCollection<TKey, TItem>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem(System.Int32)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection<TKey, TItem>.RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection(Of TKey, TItem).RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.SetItem(System.Int32,{TItem})
  commentId: M:System.Collections.ObjectModel.KeyedCollection{`0,`1}.SetItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  name: SetItem(Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.SetItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem(System.Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).SetItem(Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection<TKey, TItem>.SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection(Of TKey, TItem).SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Comparer
  commentId: P:System.Collections.ObjectModel.KeyedCollection{`0,`1}.Comparer
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  name: Comparer
  nameWithType: KeyedCollection<TKey, TItem>.Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Comparer
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Comparer
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Comparer
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Dictionary
  commentId: P:System.Collections.ObjectModel.KeyedCollection{`0,`1}.Dictionary
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  name: Dictionary
  nameWithType: KeyedCollection<TKey, TItem>.Dictionary
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Dictionary
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Dictionary
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Dictionary
- uid: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}.Item({TKey})
  commentId: P:System.Collections.ObjectModel.KeyedCollection{`0,`1}.Item(`0)
  parent: System.Collections.ObjectModel.KeyedCollection{{TKey},{TItem}}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  name: Item[TKey]
  nameWithType: KeyedCollection<TKey, TItem>.Item[TKey]
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item[TKey]
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Item(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection<TKey, TItem>.Item
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection(Of TKey, TItem).Item
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<TItem>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<TItem>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of TItem).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<TItem>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<TItem>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of TItem).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Add({TItem})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Add(`1)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(TItem)
  nameWithType: Collection<TItem>.Add(TItem)
  fullName: System.Collections.ObjectModel.Collection<TItem>.Add(TItem)
  nameWithType.vb: Collection(Of TItem).Add(TItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Add(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<TItem>.Add
    fullName: System.Collections.ObjectModel.Collection<TItem>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of TItem).Add
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Clear
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<TItem>.Clear()
  fullName: System.Collections.ObjectModel.Collection<TItem>.Clear()
  nameWithType.vb: Collection(Of TItem).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<TItem>.Clear
    fullName: System.Collections.ObjectModel.Collection<TItem>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of TItem).Clear
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Contains({TItem})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Contains(`1)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(TItem)
  nameWithType: Collection<TItem>.Contains(TItem)
  fullName: System.Collections.ObjectModel.Collection<TItem>.Contains(TItem)
  nameWithType.vb: Collection(Of TItem).Contains(TItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Contains(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<TItem>.Contains
    fullName: System.Collections.ObjectModel.Collection<TItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of TItem).Contains
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.CopyTo({TItem}[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.CopyTo(`1[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TItem[], Int32)
  nameWithType: Collection<TItem>.CopyTo(TItem[], Int32)
  fullName: System.Collections.ObjectModel.Collection<TItem>.CopyTo(TItem[], System.Int32)
  nameWithType.vb: Collection(Of TItem).CopyTo(TItem(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).CopyTo(TItem(), System.Int32)
  name.vb: CopyTo(TItem(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<TItem>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<TItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of TItem).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of TItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{`1}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<TItem>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<TItem>.GetEnumerator()
  nameWithType.vb: Collection(Of TItem).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<TItem>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<TItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of TItem).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of TItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.IndexOf({TItem})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.IndexOf(`1)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(TItem)
  nameWithType: Collection<TItem>.IndexOf(TItem)
  fullName: System.Collections.ObjectModel.Collection<TItem>.IndexOf(TItem)
  nameWithType.vb: Collection(Of TItem).IndexOf(TItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).IndexOf(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<TItem>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<TItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of TItem).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of TItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Insert(System.Int32,{TItem})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Insert(System.Int32,`1)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, TItem)
  nameWithType: Collection<TItem>.Insert(Int32, TItem)
  fullName: System.Collections.ObjectModel.Collection<TItem>.Insert(System.Int32, TItem)
  nameWithType.vb: Collection(Of TItem).Insert(Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Insert(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<TItem>.Insert
    fullName: System.Collections.ObjectModel.Collection<TItem>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of TItem).Insert
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Remove({TItem})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Remove(`1)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(TItem)
  nameWithType: Collection<TItem>.Remove(TItem)
  fullName: System.Collections.ObjectModel.Collection<TItem>.Remove(TItem)
  nameWithType.vb: Collection(Of TItem).Remove(TItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Remove(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<TItem>.Remove
    fullName: System.Collections.ObjectModel.Collection<TItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of TItem).Remove
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<TItem>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<TItem>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of TItem).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<TItem>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<TItem>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of TItem).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of TItem).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<TItem>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of TItem).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<TItem>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of TItem).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<TItem>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of TItem).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<TItem>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of TItem).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<TItem>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<TItem>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of TItem).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<TItem>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<TItem>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of TItem).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<TItem>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<TItem>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of TItem).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<TItem>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<TItem>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of TItem).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<TItem>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<TItem>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of TItem).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Count
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Count
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<TItem>.Count
  fullName: System.Collections.ObjectModel.Collection<TItem>.Count
  nameWithType.vb: Collection(Of TItem).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Count
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<TItem>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<TItem>.Item[System.Int32]
  nameWithType.vb: Collection(Of TItem).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<TItem>.Item
    fullName: System.Collections.ObjectModel.Collection<TItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of TItem).Item
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Items
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Items
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<TItem>.Items
  fullName: System.Collections.ObjectModel.Collection<TItem>.Items
  nameWithType.vb: Collection(Of TItem).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).Items
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<TItem>.IsReadOnly
  nameWithType: Collection<TItem>.ICollection<TItem>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.Generic.ICollection<TItem>.IsReadOnly
  nameWithType.vb: Collection(Of TItem).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<TItem>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of TItem).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<TItem>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of TItem).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<TItem>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<TItem>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<TItem>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<TItem>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of TItem).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<BaseProvisioningTemplateObjectDictionary<TKey, TItem>>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BaseProvisioningTemplateObjectDictionary<TKey, TItem>>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem))(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem))(System.String)
  name.vb: ValidateNotNullOrEmpty(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem))(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<BaseProvisioningTemplateObjectDictionary<TKey, TItem>>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<BaseProvisioningTemplateObjectDictionary<TKey, TItem>>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem))
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem))
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{{TItem}})
  commentId: M:PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: PnP.Framework.Extensions.EnumerableExtensions
  definition: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: DeepEquals<TItem>(IEnumerable<TItem>)
  nameWithType: EnumerableExtensions.DeepEquals<TItem>(IEnumerable<TItem>)
  fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<TItem>(System.Collections.Generic.IEnumerable<TItem>)
  nameWithType.vb: EnumerableExtensions.DeepEquals(Of TItem)(IEnumerable(Of TItem))
  fullName.vb: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem))
  name.vb: DeepEquals(Of TItem)(IEnumerable(Of TItem))
  spec.csharp:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals<TItem>
    nameWithType: EnumerableExtensions.DeepEquals<TItem>
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<TItem>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals(Of TItem)
    nameWithType: EnumerableExtensions.DeepEquals(Of TItem)
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of TItem)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary{{TKey},{TItem}},{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>(Expression<Func<BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>(Expression<Func<BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)(Expression(Of Func(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)(Expression(Of Func(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>
    nameWithType: ObjectExtensions.Set<BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
    name: BaseProvisioningTemplateObjectDictionary
    nameWithType: BaseProvisioningTemplateObjectDictionary
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)
    nameWithType: ObjectExtensions.Set(Of BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem), T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2
    name: BaseProvisioningTemplateObjectDictionary
    nameWithType: BaseProvisioningTemplateObjectDictionary
    fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TKey}}},System.Func{{TItem},{TKey}},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  name: Sort<TItem, TKey>(Func<TItem, IEnumerable<TKey>>, Func<TItem, TKey>, Boolean)
  nameWithType: TopologicalSort.Sort<TItem, TKey>(Func<TItem, IEnumerable<TKey>>, Func<TItem, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<TItem, TKey>(System.Func<TItem, System.Collections.Generic.IEnumerable<TKey>>, System.Func<TItem, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of TItem, TKey)(Func(Of TItem, IEnumerable(Of TKey)), Func(Of TItem, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of TItem, TKey)(System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of TItem, TKey), System.Boolean)
  name.vb: Sort(Of TItem, TKey)(Func(Of TItem, IEnumerable(Of TKey)), Func(Of TItem, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort<TItem, TKey>
    nameWithType: TopologicalSort.Sort<TItem, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<TItem, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort(Of TItem, TKey)
    nameWithType: TopologicalSort.Sort(Of TItem, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of TItem, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TItem}}},System.Collections.Generic.IEqualityComparer{{TItem}},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  name: Sort<TItem>(Func<TItem, IEnumerable<TItem>>, IEqualityComparer<TItem>, Boolean)
  nameWithType: TopologicalSort.Sort<TItem>(Func<TItem, IEnumerable<TItem>>, IEqualityComparer<TItem>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<TItem>(System.Func<TItem, System.Collections.Generic.IEnumerable<TItem>>, System.Collections.Generic.IEqualityComparer<TItem>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of TItem)(Func(Of TItem, IEnumerable(Of TItem)), IEqualityComparer(Of TItem), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of TItem)(System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TItem)), System.Collections.Generic.IEqualityComparer(Of TItem), System.Boolean)
  name.vb: Sort(Of TItem)(Func(Of TItem, IEnumerable(Of TItem)), IEqualityComparer(Of TItem), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort<TItem>
    nameWithType: TopologicalSort.Sort<TItem>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<TItem>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort(Of TItem)
    nameWithType: TopologicalSort.Sort(Of TItem)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of TItem)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TKey}}},System.Func{{TItem},{TKey}},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  name: Group<TItem, TKey>(Func<TItem, IEnumerable<TKey>>, Func<TItem, TKey>, Boolean)
  nameWithType: TopologicalSort.Group<TItem, TKey>(Func<TItem, IEnumerable<TKey>>, Func<TItem, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<TItem, TKey>(System.Func<TItem, System.Collections.Generic.IEnumerable<TKey>>, System.Func<TItem, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of TItem, TKey)(Func(Of TItem, IEnumerable(Of TKey)), Func(Of TItem, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of TItem, TKey)(System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of TItem, TKey), System.Boolean)
  name.vb: Group(Of TItem, TKey)(Func(Of TItem, IEnumerable(Of TKey)), Func(Of TItem, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group<TItem, TKey>
    nameWithType: TopologicalSort.Group<TItem, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<TItem, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group(Of TItem, TKey)
    nameWithType: TopologicalSort.Group(Of TItem, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of TItem, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TItem}}},System.Collections.Generic.IEqualityComparer{{TItem}},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  parent: PnP.Framework.Extensions.TopologicalSort
  definition: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  name: Group<TItem>(Func<TItem, IEnumerable<TItem>>, IEqualityComparer<TItem>, Boolean)
  nameWithType: TopologicalSort.Group<TItem>(Func<TItem, IEnumerable<TItem>>, IEqualityComparer<TItem>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<TItem>(System.Func<TItem, System.Collections.Generic.IEnumerable<TItem>>, System.Collections.Generic.IEqualityComparer<TItem>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of TItem)(Func(Of TItem, IEnumerable(Of TItem)), IEqualityComparer(Of TItem), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of TItem)(System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TItem)), System.Collections.Generic.IEqualityComparer(Of TItem), System.Boolean)
  name.vb: Group(Of TItem)(Func(Of TItem, IEnumerable(Of TItem)), IEqualityComparer(Of TItem), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group<TItem>
    nameWithType: TopologicalSort.Group<TItem>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<TItem>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group(Of TItem)
    nameWithType: TopologicalSort.Group(Of TItem)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of TItem)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  isExternal: true
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  isExternal: true
  name: ChangeItemKey(TItem, TKey)
  nameWithType: KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection<TKey, TItem>.ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection(Of TKey, TItem).ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: KeyedCollection<TKey, TItem>.ClearItems()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems()
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ClearItems()
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection<TKey, TItem>.ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection(Of TKey, TItem).ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  isExternal: true
  name: Contains(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Contains(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Contains(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection<TKey, TItem>.Contains
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection(Of TKey, TItem).Contains
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  isExternal: true
  name: GetKeyForItem(TItem)
  nameWithType: KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection<TKey, TItem>.GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection(Of TKey, TItem).GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  isExternal: true
  name: InsertItem(Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.InsertItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem(System.Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).InsertItem(Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection<TKey, TItem>.InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection(Of TKey, TItem).InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Remove(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Remove(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection<TKey, TItem>.Remove
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection(Of TKey, TItem).Remove
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: KeyedCollection<TKey, TItem>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem(System.Int32)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection<TKey, TItem>.RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection(Of TKey, TItem).RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  isExternal: true
  name: SetItem(Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.SetItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem(System.Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).SetItem(Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection<TKey, TItem>.SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection(Of TKey, TItem).SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Comparer
  isExternal: true
  name: Comparer
  nameWithType: KeyedCollection<TKey, TItem>.Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Comparer
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Comparer
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Comparer
- uid: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  isExternal: true
  name: Dictionary
  nameWithType: KeyedCollection<TKey, TItem>.Dictionary
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Dictionary
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Dictionary
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Dictionary
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: KeyedCollection<TKey, TItem>.Item[TKey]
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item[TKey]
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Item(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection<TKey, TItem>.Item
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection(Of TKey, TItem).Item
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: DeepEquals<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: EnumerableExtensions.DeepEquals<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.DeepEquals(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: DeepEquals(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals<T>
    nameWithType: EnumerableExtensions.DeepEquals<T>
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: DeepEquals(Of T)
    nameWithType: EnumerableExtensions.DeepEquals(Of T)
    fullName: PnP.Framework.Extensions.EnumerableExtensions.DeepEquals(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.EnumerableExtensions
  commentId: T:PnP.Framework.Extensions.EnumerableExtensions
  parent: PnP.Framework.Extensions
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: PnP.Framework.Extensions.EnumerableExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  isExternal: true
  name: Sort<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  nameWithType: TopologicalSort.Sort<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<TKey>>, System.Func<T, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of T, TKey), System.Boolean)
  name.vb: Sort(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort<T, TKey>
    nameWithType: TopologicalSort.Sort<T, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Sort(Of T, TKey)
    nameWithType: TopologicalSort.Sort(Of T, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort
  commentId: T:PnP.Framework.Extensions.TopologicalSort
  parent: PnP.Framework.Extensions
  name: TopologicalSort
  nameWithType: TopologicalSort
  fullName: PnP.Framework.Extensions.TopologicalSort
- uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  isExternal: true
  name: Sort<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  nameWithType: TopologicalSort.Sort<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEqualityComparer<T>, System.Boolean)
  nameWithType.vb: TopologicalSort.Sort(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Sort(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEqualityComparer(Of T), System.Boolean)
  name.vb: Sort(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort<T>
    nameWithType: TopologicalSort.Sort<T>
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Sort(Of T)
    nameWithType: TopologicalSort.Sort(Of T)
    fullName: PnP.Framework.Extensions.TopologicalSort.Sort(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
  isExternal: true
  name: Group<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  nameWithType: TopologicalSort.Group<T, TKey>(IEnumerable<T>, Func<T, IEnumerable<TKey>>, Func<T, TKey>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<TKey>>, System.Func<T, TKey>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TKey)), System.Func(Of T, TKey), System.Boolean)
  name.vb: Group(Of T, TKey)(IEnumerable(Of T), Func(Of T, IEnumerable(Of TKey)), Func(Of T, TKey), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group<T, TKey>
    nameWithType: TopologicalSort.Group<T, TKey>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1},System.Boolean)
    name: Group(Of T, TKey)
    nameWithType: TopologicalSort.Group(Of T, TKey)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  commentId: M:PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
  isExternal: true
  name: Group<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  nameWithType: TopologicalSort.Group<T>(IEnumerable<T>, Func<T, IEnumerable<T>>, IEqualityComparer<T>, Boolean)
  fullName: PnP.Framework.Extensions.TopologicalSort.Group<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEqualityComparer<T>, System.Boolean)
  nameWithType.vb: TopologicalSort.Group(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  fullName.vb: PnP.Framework.Extensions.TopologicalSort.Group(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEqualityComparer(Of T), System.Boolean)
  name.vb: Group(Of T)(IEnumerable(Of T), Func(Of T, IEnumerable(Of T)), IEqualityComparer(Of T), Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group<T>
    nameWithType: TopologicalSort.Group<T>
    fullName: PnP.Framework.Extensions.TopologicalSort.Group<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.TopologicalSort.Group``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)
    name: Group(Of T)
    nameWithType: TopologicalSort.Group(Of T)
    fullName: PnP.Framework.Extensions.TopologicalSort.Group(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.#ctor
  name: BaseProvisioningTemplateObjectDictionary
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.BaseProvisioningTemplateObjectDictionary
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.BaseProvisioningTemplateObjectDictionary
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).BaseProvisioningTemplateObjectDictionary
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).BaseProvisioningTemplateObjectDictionary
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ParentTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ParentTemplate
  name: ParentTemplate
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ParentTemplate
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ParentTemplate
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ParentTemplate
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  name: ParentTemplate
  nameWithType: IProvisioningTemplateDescendant.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant.ParentTemplate
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.InsertItem*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.InsertItem
  name: InsertItem
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.InsertItem
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.InsertItem
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).InsertItem
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).InsertItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{TItem}'
  commentId: '!:TItem'
  definition: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.SetItem*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.SetItem
  name: SetItem
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.SetItem
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.SetItem
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).SetItem
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).SetItem
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.RemoveItem*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.RemoveItem
  name: RemoveItem
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.RemoveItem
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.RemoveItem
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).RemoveItem
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).RemoveItem
- uid: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ClearItems*
  commentId: Overload:PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary`2.ClearItems
  name: ClearItems
  nameWithType: BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ClearItems
  fullName: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary<TKey, TItem>.ClearItems
  nameWithType.vb: BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ClearItems
  fullName.vb: PnP.Framework.Provisioning.Model.BaseProvisioningTemplateObjectDictionary(Of TKey, TItem).ClearItems

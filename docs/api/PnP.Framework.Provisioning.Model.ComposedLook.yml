### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.ComposedLook
  commentId: T:PnP.Framework.Provisioning.Model.ComposedLook
  id: ComposedLook
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.ComposedLook.#ctor
  - PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS
  - PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile
  - PnP.Framework.Provisioning.Model.ComposedLook.ColorFile
  - PnP.Framework.Provisioning.Model.ComposedLook.Empty
  - PnP.Framework.Provisioning.Model.ComposedLook.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  - PnP.Framework.Provisioning.Model.ComposedLook.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.ComposedLook.FontFile
  - PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode
  - PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank
  - PnP.Framework.Provisioning.Model.ComposedLook.MasterPage
  - PnP.Framework.Provisioning.Model.ComposedLook.Name
  - PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo
  - PnP.Framework.Provisioning.Model.ComposedLook.Version
  langs:
  - csharp
  - vb
  name: ComposedLook
  nameWithType: ComposedLook
  fullName: PnP.Framework.Provisioning.Model.ComposedLook
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ComposedLook
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 7
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDomain Object that defines a Composed Look in the Provision Template\n"
  example: []
  syntax:
    content: 'public class ComposedLook : BaseModel, IProvisioningTemplateDescendant, IEquatable<ComposedLook>'
    content.vb: >-
      Public Class ComposedLook
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of ComposedLook)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.ComposedLook}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.ComposedLook.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.ComposedLook.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.ComposedLook,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo
  id: SiteLogo
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: SiteLogo
  nameWithType: ComposedLook.SiteLogo
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Deprecated/Model/ComposedLook.deprecated.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteLogo
    path: ../src/lib/PnP.Framework/Provisioning/Deprecated/Model/ComposedLook.deprecated.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the Site Logo\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Instead of this member, please use SiteLogo property of the WebSettings object. This method will be removed in the June 2016 release.")]

      public string SiteLogo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Instead of this member, please use SiteLogo property of the WebSettings object. This method will be removed in the June 2016 release.")>

      Public Property SiteLogo As String
  overload: PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Instead of this member, please use SiteLogo property of the WebSettings object. This method will be removed in the June 2016 release.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS
  id: AlternateCSS
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: AlternateCSS
  nameWithType: ComposedLook.AlternateCSS
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Deprecated/Model/ComposedLook.deprecated.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AlternateCSS
    path: ../src/lib/PnP.Framework/Provisioning/Deprecated/Model/ComposedLook.deprecated.cs
    startLine: 41
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the AlternateCSS\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Instead of this member, please use AlternateCSS property of the WebSettings object. This method will be removed in the June 2016 release.")]

      public string AlternateCSS { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Instead of this member, please use AlternateCSS property of the WebSettings object. This method will be removed in the June 2016 release.")>

      Public Property AlternateCSS As String
  overload: PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Instead of this member, please use AlternateCSS property of the WebSettings object. This method will be removed in the June 2016 release.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.MasterPage
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.MasterPage
  id: MasterPage
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: MasterPage
  nameWithType: ComposedLook.MasterPage
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.MasterPage
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Deprecated/Model/ComposedLook.deprecated.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MasterPage
    path: ../src/lib/PnP.Framework/Provisioning/Deprecated/Model/ComposedLook.deprecated.cs
    startLine: 73
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the MasterPage for the Composed Look\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Instead of this member, please use MasterPageUrl property of the WebSettings object. This method will be removed in the June 2016 release.")]

      public string MasterPage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Instead of this member, please use MasterPageUrl property of the WebSettings object. This method will be removed in the June 2016 release.")>

      Public Property MasterPage As String
  overload: PnP.Framework.Provisioning.Model.ComposedLook.MasterPage*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Instead of this member, please use MasterPageUrl property of the WebSettings object. This method will be removed in the June 2016 release.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.ComposedLook.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: ComposedLook()
  nameWithType: ComposedLook.ComposedLook()
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.ComposedLook()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for ComposedLook class\n"
  example: []
  syntax:
    content: public ComposedLook()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.ComposedLook.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Empty
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.Empty
  id: Empty
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: ComposedLook.Empty
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Empty
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Empty
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 32
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: public static ComposedLook Empty { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.ComposedLook
    content.vb: Public Shared ReadOnly Property Empty As ComposedLook
  overload: PnP.Framework.Provisioning.Model.ComposedLook.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Name
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.Name
  id: Name
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ComposedLook.Name
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Name
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Name
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 44
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the Name\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: PnP.Framework.Provisioning.Model.ComposedLook.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.ColorFile
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.ColorFile
  id: ColorFile
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: ColorFile
  nameWithType: ComposedLook.ColorFile
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.ColorFile
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ColorFile
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 49
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the ColorFile\n"
  example: []
  syntax:
    content: public string ColorFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ColorFile As String
  overload: PnP.Framework.Provisioning.Model.ComposedLook.ColorFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.FontFile
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.FontFile
  id: FontFile
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: FontFile
  nameWithType: ComposedLook.FontFile
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.FontFile
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FontFile
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 54
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the FontFile\n"
  example: []
  syntax:
    content: public string FontFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FontFile As String
  overload: PnP.Framework.Provisioning.Model.ComposedLook.FontFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile
  id: BackgroundFile
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: BackgroundFile
  nameWithType: ComposedLook.BackgroundFile
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BackgroundFile
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the Background Image \n"
  example: []
  syntax:
    content: public string BackgroundFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BackgroundFile As String
  overload: PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Version
  commentId: P:PnP.Framework.Provisioning.Model.ComposedLook.Version
  id: Version
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ComposedLook.Version
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Version
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Version
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 64
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets or sets the Version of the ComposedLook.\n"
  example: []
  syntax:
    content: public int Version { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Version As Integer
  overload: PnP.Framework.Provisioning.Model.ComposedLook.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ComposedLook.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 74
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.ComposedLook.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ComposedLook.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 90
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with ComposedLook\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents ComposedLook
    return:
      type: System.Boolean
      description: true if the current object is equal to the ComposedLook
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.ComposedLook.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  commentId: M:PnP.Framework.Provisioning.Model.ComposedLook.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  id: Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: Equals(ComposedLook)
  nameWithType: ComposedLook.Equals(ComposedLook)
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 104
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares ComposedLook object based on BackgroundFile, ColorFile, FontFile, Name and Version.\n"
  example: []
  syntax:
    content: public bool Equals(ComposedLook other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.ComposedLook
      description: ComposedLook object
    return:
      type: System.Boolean
      description: true if the ComposedLook object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As ComposedLook) As Boolean
  overload: PnP.Framework.Provisioning.Model.ComposedLook.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.ComposedLook}.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank
  commentId: M:PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank
  id: IsEmptyOrBlank
  parent: PnP.Framework.Provisioning.Model.ComposedLook
  langs:
  - csharp
  - vb
  name: IsEmptyOrBlank()
  nameWithType: ComposedLook.IsEmptyOrBlank()
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsEmptyOrBlank
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Design/ComposedLook.cs
    startLine: 118
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: public bool IsEmptyOrBlank()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmptyOrBlank As Boolean
  overload: PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.ComposedLook}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.ComposedLook}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ComposedLook>
  nameWithType: IEquatable<ComposedLook>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.ComposedLook>
  nameWithType.vb: IEquatable(Of ComposedLook)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.ComposedLook)
  name.vb: IEquatable(Of ComposedLook)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.ComposedLook
    name: ComposedLook
    nameWithType: ComposedLook
    fullName: PnP.Framework.Provisioning.Model.ComposedLook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.ComposedLook
    name: ComposedLook
    nameWithType: ComposedLook
    fullName: PnP.Framework.Provisioning.Model.ComposedLook
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ComposedLook.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ComposedLook>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ComposedLook>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.ComposedLook>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ComposedLook)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.ComposedLook)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ComposedLook)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ComposedLook>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ComposedLook>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.ComposedLook>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ComposedLook)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ComposedLook)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.ComposedLook)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ComposedLook.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.ComposedLook,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ComposedLook, T>(Expression<Func<ComposedLook, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ComposedLook, T>(Expression<Func<ComposedLook, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.ComposedLook, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.ComposedLook, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ComposedLook, T)(Expression(Of Func(Of ComposedLook, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.ComposedLook, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.ComposedLook, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ComposedLook, T)(Expression(Of Func(Of ComposedLook, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ComposedLook, T>
    nameWithType: ObjectExtensions.Set<ComposedLook, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.ComposedLook, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.ComposedLook
    name: ComposedLook
    nameWithType: ComposedLook
    fullName: PnP.Framework.Provisioning.Model.ComposedLook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ComposedLook, T)
    nameWithType: ObjectExtensions.Set(Of ComposedLook, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.ComposedLook, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.ComposedLook
    name: ComposedLook
    nameWithType: ComposedLook
    fullName: PnP.Framework.Provisioning.Model.ComposedLook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo
  name: SiteLogo
  nameWithType: ComposedLook.SiteLogo
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.SiteLogo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS
  name: AlternateCSS
  nameWithType: ComposedLook.AlternateCSS
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.AlternateCSS
- uid: PnP.Framework.Provisioning.Model.ComposedLook.MasterPage*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.MasterPage
  name: MasterPage
  nameWithType: ComposedLook.MasterPage
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.MasterPage
- uid: PnP.Framework.Provisioning.Model.ComposedLook.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.#ctor
  name: ComposedLook
  nameWithType: ComposedLook.ComposedLook
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.ComposedLook
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Empty*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.Empty
  name: Empty
  nameWithType: ComposedLook.Empty
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Empty
- uid: PnP.Framework.Provisioning.Model.ComposedLook
  commentId: T:PnP.Framework.Provisioning.Model.ComposedLook
  parent: PnP.Framework.Provisioning.Model
  name: ComposedLook
  nameWithType: ComposedLook
  fullName: PnP.Framework.Provisioning.Model.ComposedLook
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Name*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.Name
  name: Name
  nameWithType: ComposedLook.Name
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Name
- uid: PnP.Framework.Provisioning.Model.ComposedLook.ColorFile*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.ColorFile
  name: ColorFile
  nameWithType: ComposedLook.ColorFile
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.ColorFile
- uid: PnP.Framework.Provisioning.Model.ComposedLook.FontFile*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.FontFile
  name: FontFile
  nameWithType: ComposedLook.FontFile
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.FontFile
- uid: PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile
  name: BackgroundFile
  nameWithType: ComposedLook.BackgroundFile
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.BackgroundFile
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Version*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.Version
  name: Version
  nameWithType: ComposedLook.Version
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode
  name: GetHashCode
  nameWithType: ComposedLook.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.GetHashCode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ComposedLook.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.Equals
  name: Equals
  nameWithType: ComposedLook.Equals
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.ComposedLook}.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.ComposedLook}.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.ComposedLook}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ComposedLook)
  nameWithType: IEquatable<ComposedLook>.Equals(ComposedLook)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.ComposedLook>.Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  nameWithType.vb: IEquatable(Of ComposedLook).Equals(ComposedLook)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.ComposedLook).Equals(PnP.Framework.Provisioning.Model.ComposedLook)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ComposedLook>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.ComposedLook>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.ComposedLook
    name: ComposedLook
    nameWithType: ComposedLook
    fullName: PnP.Framework.Provisioning.Model.ComposedLook
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ComposedLook).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.ComposedLook).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.ComposedLook
    name: ComposedLook
    nameWithType: ComposedLook
    fullName: PnP.Framework.Provisioning.Model.ComposedLook
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank*
  commentId: Overload:PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank
  name: IsEmptyOrBlank
  nameWithType: ComposedLook.IsEmptyOrBlank
  fullName: PnP.Framework.Provisioning.Model.ComposedLook.IsEmptyOrBlank

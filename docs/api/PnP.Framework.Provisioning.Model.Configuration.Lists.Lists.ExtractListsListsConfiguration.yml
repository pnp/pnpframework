### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  commentId: T:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  id: ExtractListsListsConfiguration
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  children:
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior
  langs:
  - csharp
  - vb
  name: ExtractListsListsConfiguration
  nameWithType: ExtractListsListsConfiguration
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExtractListsListsConfiguration
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 4
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: public class ExtractListsListsConfiguration
    content.vb: Public Class ExtractListsListsConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title
  commentId: P:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title
  id: Title
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ExtractListsListsConfiguration.Title
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Title
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 6
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: >-
      [JsonPropertyName("title")]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("title")>

      Public Property Title As String
  overload: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems
  commentId: P:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems
  id: IncludeItems
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  langs:
  - csharp
  - vb
  name: IncludeItems
  nameWithType: ExtractListsListsConfiguration.IncludeItems
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IncludeItems
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: >-
      [JsonPropertyName("includeItems")]

      public bool IncludeItems { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("includeItems")>

      Public Property IncludeItems As Boolean
  overload: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: includeItems
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn
  commentId: P:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn
  id: KeyColumn
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  langs:
  - csharp
  - vb
  name: KeyColumn
  nameWithType: ExtractListsListsConfiguration.KeyColumn
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: KeyColumn
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: >-
      [JsonPropertyName("keyColumn")]

      public string KeyColumn { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("keyColumn")>

      Public Property KeyColumn As String
  overload: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: keyColumn
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior
  commentId: P:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior
  id: UpdateBehavior
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  langs:
  - csharp
  - vb
  name: UpdateBehavior
  nameWithType: ExtractListsListsConfiguration.UpdateBehavior
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UpdateBehavior
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: >-
      [JsonPropertyName("updateBehavior")]

      [JsonConverter(typeof(JsonStringEnumConverter))]

      public UpdateBehavior UpdateBehavior { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.UpdateBehavior
    content.vb: >-
      <JsonPropertyName("updateBehavior")>

      <JsonConverter(GetType(JsonStringEnumConverter))>

      Public Property UpdateBehavior As UpdateBehavior
  overload: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updateBehavior
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Text.Json.Serialization.JsonStringEnumConverter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields
  commentId: P:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields
  id: SkipEmptyFields
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  langs:
  - csharp
  - vb
  name: SkipEmptyFields
  nameWithType: ExtractListsListsConfiguration.SkipEmptyFields
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SkipEmptyFields
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 19
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: >-
      [JsonPropertyName("skipEmptyFields")]

      public bool SkipEmptyFields { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("skipEmptyFields")>

      Public Property SkipEmptyFields As Boolean
  overload: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: skipEmptyFields
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query
  commentId: P:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query
  id: Query
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ExtractListsListsConfiguration.Query
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Query
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: >-
      [JsonPropertyName("query")]

      public ExtractListsQueryConfiguration Query { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsQueryConfiguration
    content.vb: >-
      <JsonPropertyName("query")>

      Public Property Query As ExtractListsQueryConfiguration
  overload: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: query
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes
  commentId: P:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes
  id: RemoveExistingContentTypes
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  langs:
  - csharp
  - vb
  name: RemoveExistingContentTypes
  nameWithType: ExtractListsListsConfiguration.RemoveExistingContentTypes
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RemoveExistingContentTypes
    path: ../src/lib/PnP.Framework/Provisioning/Model/Configuration/Lists/Lists/ExtractListsListsConfiguration.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  syntax:
    content: >-
      [JsonPropertyName("removeExistingContentTypes")]

      public bool RemoveExistingContentTypes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("removeExistingContentTypes")>

      Public Property RemoveExistingContentTypes As Boolean
  overload: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: removeExistingContentTypes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  commentId: N:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  name: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  nameWithType: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ExtractListsListsConfiguration>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ExtractListsListsConfiguration>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ExtractListsListsConfiguration)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ExtractListsListsConfiguration)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ExtractListsListsConfiguration>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ExtractListsListsConfiguration>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ExtractListsListsConfiguration)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ExtractListsListsConfiguration)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ExtractListsListsConfiguration, T>(Expression<Func<ExtractListsListsConfiguration, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ExtractListsListsConfiguration, T>(Expression<Func<ExtractListsListsConfiguration, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ExtractListsListsConfiguration, T)(Expression(Of Func(Of ExtractListsListsConfiguration, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ExtractListsListsConfiguration, T)(Expression(Of Func(Of ExtractListsListsConfiguration, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ExtractListsListsConfiguration, T>
    nameWithType: ObjectExtensions.Set<ExtractListsListsConfiguration, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
    name: ExtractListsListsConfiguration
    nameWithType: ExtractListsListsConfiguration
    fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ExtractListsListsConfiguration, T)
    nameWithType: ObjectExtensions.Set(Of ExtractListsListsConfiguration, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
    name: ExtractListsListsConfiguration
    nameWithType: ExtractListsListsConfiguration
    fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title*
  commentId: Overload:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title
  name: Title
  nameWithType: ExtractListsListsConfiguration.Title
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems*
  commentId: Overload:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems
  name: IncludeItems
  nameWithType: ExtractListsListsConfiguration.IncludeItems
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.IncludeItems
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn*
  commentId: Overload:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn
  name: KeyColumn
  nameWithType: ExtractListsListsConfiguration.KeyColumn
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.KeyColumn
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior*
  commentId: Overload:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior
  name: UpdateBehavior
  nameWithType: ExtractListsListsConfiguration.UpdateBehavior
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.UpdateBehavior
- uid: PnP.Framework.Provisioning.Model.UpdateBehavior
  commentId: T:PnP.Framework.Provisioning.Model.UpdateBehavior
  parent: PnP.Framework.Provisioning.Model
  name: UpdateBehavior
  nameWithType: UpdateBehavior
  fullName: PnP.Framework.Provisioning.Model.UpdateBehavior
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields*
  commentId: Overload:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields
  name: SkipEmptyFields
  nameWithType: ExtractListsListsConfiguration.SkipEmptyFields
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.SkipEmptyFields
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query*
  commentId: Overload:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query
  name: Query
  nameWithType: ExtractListsListsConfiguration.Query
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.Query
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsQueryConfiguration
  commentId: T:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsQueryConfiguration
  parent: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists
  name: ExtractListsQueryConfiguration
  nameWithType: ExtractListsQueryConfiguration
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsQueryConfiguration
- uid: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes*
  commentId: Overload:PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes
  name: RemoveExistingContentTypes
  nameWithType: ExtractListsListsConfiguration.RemoveExistingContentTypes
  fullName: PnP.Framework.Provisioning.Model.Configuration.Lists.Lists.ExtractListsListsConfiguration.RemoveExistingContentTypes

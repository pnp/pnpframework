### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.ContentType
  commentId: T:PnP.Framework.Provisioning.Model.ContentType
  id: ContentType
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.ContentType.#ctor
  - PnP.Framework.Provisioning.Model.ContentType.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldRef})
  - PnP.Framework.Provisioning.Model.ContentType.Description
  - PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId
  - PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties
  - PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl
  - PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate
  - PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate
  - PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId
  - PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties
  - PnP.Framework.Provisioning.Model.ContentType.EditFormUrl
  - PnP.Framework.Provisioning.Model.ContentType.Equals(PnP.Framework.Provisioning.Model.ContentType)
  - PnP.Framework.Provisioning.Model.ContentType.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.ContentType.FieldRefs
  - PnP.Framework.Provisioning.Model.ContentType.GetHashCode
  - PnP.Framework.Provisioning.Model.ContentType.Group
  - PnP.Framework.Provisioning.Model.ContentType.Hidden
  - PnP.Framework.Provisioning.Model.ContentType.Id
  - PnP.Framework.Provisioning.Model.ContentType.Name
  - PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId
  - PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties
  - PnP.Framework.Provisioning.Model.ContentType.NewFormUrl
  - PnP.Framework.Provisioning.Model.ContentType.Overwrite
  - PnP.Framework.Provisioning.Model.ContentType.ReadOnly
  - PnP.Framework.Provisioning.Model.ContentType.Sealed
  - PnP.Framework.Provisioning.Model.ContentType.UpdateChildren
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: ContentType
  fullName: PnP.Framework.Provisioning.Model.ContentType
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ContentType
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDomain Object used in the Provisioning template that defines a Content Type\n<seealso>\n<cref>https://msdn.microsoft.com/en-us/library/office/ms463449.aspx</cref>\n</seealso>\n"
  example: []
  syntax:
    content: 'public class ContentType : BaseModel, IProvisioningTemplateDescendant, IEquatable<ContentType>'
    content.vb: >-
      Public Class ContentType
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of ContentType)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.ContentType}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.ContentType.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.ContentType.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.ContentType,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.ContentType.Id
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.Id
  id: Id
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ContentType.Id
  fullName: PnP.Framework.Provisioning.Model.ContentType.Id
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Id
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe Id of the Content Type\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: PnP.Framework.Provisioning.Model.ContentType.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.Name
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.Name
  id: Name
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ContentType.Name
  fullName: PnP.Framework.Provisioning.Model.ContentType.Name
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Name
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 30
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe name of the Content Type\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: PnP.Framework.Provisioning.Model.ContentType.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.Description
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.Description
  id: Description
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ContentType.Description
  fullName: PnP.Framework.Provisioning.Model.ContentType.Description
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Description
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 35
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe description of the Content Type\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: PnP.Framework.Provisioning.Model.ContentType.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.Group
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.Group
  id: Group
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: ContentType.Group
  fullName: PnP.Framework.Provisioning.Model.ContentType.Group
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Group
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 40
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe group name of the content type\n"
  example: []
  syntax:
    content: public string Group { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Group As String
  overload: PnP.Framework.Provisioning.Model.ContentType.Group*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.FieldRefs
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.FieldRefs
  id: FieldRefs
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: FieldRefs
  nameWithType: ContentType.FieldRefs
  fullName: PnP.Framework.Provisioning.Model.ContentType.FieldRefs
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FieldRefs
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 45
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe FieldRefs entries of the List Instance\n"
  example: []
  syntax:
    content: public FieldRefCollection FieldRefs { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.FieldRefCollection
    content.vb: Public ReadOnly Property FieldRefs As FieldRefCollection
  overload: PnP.Framework.Provisioning.Model.ContentType.FieldRefs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.ContentType.Hidden
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.Hidden
  id: Hidden
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Hidden
  nameWithType: ContentType.Hidden
  fullName: PnP.Framework.Provisioning.Model.ContentType.Hidden
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Hidden
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 54
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nTrue to define the content type as hidden. If you define a content type as hidden, SharePoint Foundation does not display that content type on the New button in list views. \n"
  example: []
  syntax:
    content: public bool Hidden { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Hidden As Boolean
  overload: PnP.Framework.Provisioning.Model.ContentType.Hidden*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.Sealed
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.Sealed
  id: Sealed
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Sealed
  nameWithType: ContentType.Sealed
  fullName: PnP.Framework.Provisioning.Model.ContentType.Sealed
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Sealed
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nTrue to prevent changes to this content type. You cannot change the value of this attribute through the user interface, but you can change it in code if you have sufficient rights. You must have site collection administrator rights to unseal a content type. \n"
  example: []
  syntax:
    content: public bool Sealed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Sealed As Boolean
  overload: PnP.Framework.Provisioning.Model.ContentType.Sealed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.ReadOnly
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.ReadOnly
  id: ReadOnly
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: ContentType.ReadOnly
  fullName: PnP.Framework.Provisioning.Model.ContentType.ReadOnly
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ReadOnly
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 64
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nTrue to specify that the content type cannot be edited without explicitly removing the read-only setting. This can be done either in the user interface or in code. \n"
  example: []
  syntax:
    content: public bool ReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReadOnly As Boolean
  overload: PnP.Framework.Provisioning.Model.ContentType.ReadOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.Overwrite
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.Overwrite
  id: Overwrite
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Overwrite
  nameWithType: ContentType.Overwrite
  fullName: PnP.Framework.Provisioning.Model.ContentType.Overwrite
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Overwrite
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 69
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nTrue to overwrite an existing content type with the same ID.\n"
  example: []
  syntax:
    content: public bool Overwrite { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Overwrite As Boolean
  overload: PnP.Framework.Provisioning.Model.ContentType.Overwrite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate
  id: DocumentTemplate
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: DocumentTemplate
  nameWithType: ContentType.DocumentTemplate
  fullName: PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DocumentTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 74
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the document template for the content type\n"
  example: []
  syntax:
    content: public string DocumentTemplate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DocumentTemplate As String
  overload: PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate
  id: DocumentSetTemplate
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: DocumentSetTemplate
  nameWithType: ContentType.DocumentSetTemplate
  fullName: PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DocumentSetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 79
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the properties of the DocumentSet Template if the ContentType defines a DocumentSet\n"
  example: []
  syntax:
    content: public DocumentSetTemplate DocumentSetTemplate { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.DocumentSetTemplate
    content.vb: Public Property DocumentSetTemplate As DocumentSetTemplate
  overload: PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl
  id: DisplayFormUrl
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: DisplayFormUrl
  nameWithType: ContentType.DisplayFormUrl
  fullName: PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DisplayFormUrl
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 84
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the URL of a custom display form to use for list items that have been assigned the content type\n"
  example: []
  syntax:
    content: public string DisplayFormUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayFormUrl As String
  overload: PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.EditFormUrl
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.EditFormUrl
  id: EditFormUrl
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: EditFormUrl
  nameWithType: ContentType.EditFormUrl
  fullName: PnP.Framework.Provisioning.Model.ContentType.EditFormUrl
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EditFormUrl
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 89
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the URL of a custom edit form to use for list items that have been assigned the content type\n"
  example: []
  syntax:
    content: public string EditFormUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EditFormUrl As String
  overload: PnP.Framework.Provisioning.Model.ContentType.EditFormUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.NewFormUrl
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.NewFormUrl
  id: NewFormUrl
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: NewFormUrl
  nameWithType: ContentType.NewFormUrl
  fullName: PnP.Framework.Provisioning.Model.ContentType.NewFormUrl
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: NewFormUrl
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 94
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the URL of a custom new form to use for list items that have been assigned the content type\n"
  example: []
  syntax:
    content: public string NewFormUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NewFormUrl As String
  overload: PnP.Framework.Provisioning.Model.ContentType.NewFormUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.UpdateChildren
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.UpdateChildren
  id: UpdateChildren
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: UpdateChildren
  nameWithType: ContentType.UpdateChildren
  fullName: PnP.Framework.Provisioning.Model.ContentType.UpdateChildren
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UpdateChildren
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 99
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether changes to the content type will be udpated on inherited content types, optional attribute\n"
  example: []
  syntax:
    content: public bool UpdateChildren { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UpdateChildren As Boolean
  overload: PnP.Framework.Provisioning.Model.ContentType.UpdateChildren*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId
  id: DisplayFormClientSideComponentId
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: DisplayFormClientSideComponentId
  nameWithType: ContentType.DisplayFormClientSideComponentId
  fullName: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DisplayFormClientSideComponentId
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 104
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares the ID of the SPFx Client Side Component to customize the Display Form of the Content Type.\n"
  example: []
  syntax:
    content: public string DisplayFormClientSideComponentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayFormClientSideComponentId As String
  overload: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties
  id: DisplayFormClientSideComponentProperties
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: DisplayFormClientSideComponentProperties
  nameWithType: ContentType.DisplayFormClientSideComponentProperties
  fullName: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DisplayFormClientSideComponentProperties
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 109
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the properties of the SPFx Client Side Component to customize the Display Form of the Content Type.\n"
  example: []
  syntax:
    content: public string DisplayFormClientSideComponentProperties { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayFormClientSideComponentProperties As String
  overload: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId
  id: NewFormClientSideComponentId
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: NewFormClientSideComponentId
  nameWithType: ContentType.NewFormClientSideComponentId
  fullName: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: NewFormClientSideComponentId
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 114
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares the ID of the SPFx Client Side Component to customize the New Form of the Content Type.\n"
  example: []
  syntax:
    content: public string NewFormClientSideComponentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NewFormClientSideComponentId As String
  overload: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties
  id: NewFormClientSideComponentProperties
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: NewFormClientSideComponentProperties
  nameWithType: ContentType.NewFormClientSideComponentProperties
  fullName: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: NewFormClientSideComponentProperties
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 119
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the properties of the SPFx Client Side Component to customize the New Form of the Content Type.\n"
  example: []
  syntax:
    content: public string NewFormClientSideComponentProperties { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NewFormClientSideComponentProperties As String
  overload: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId
  id: EditFormClientSideComponentId
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: EditFormClientSideComponentId
  nameWithType: ContentType.EditFormClientSideComponentId
  fullName: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EditFormClientSideComponentId
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 124
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares the ID of the SPFx Client Side Component to customize the Edit Form of the Content Type.\n"
  example: []
  syntax:
    content: public string EditFormClientSideComponentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EditFormClientSideComponentId As String
  overload: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties
  commentId: P:PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties
  id: EditFormClientSideComponentProperties
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: EditFormClientSideComponentProperties
  nameWithType: ContentType.EditFormClientSideComponentProperties
  fullName: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EditFormClientSideComponentProperties
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 129
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the properties of the SPFx Client Side Component to customize the Edit Form of the Content Type.\n"
  example: []
  syntax:
    content: public string EditFormClientSideComponentProperties { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EditFormClientSideComponentProperties As String
  overload: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.ContentType.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: ContentType()
  nameWithType: ContentType.ContentType()
  fullName: PnP.Framework.Provisioning.Model.ContentType.ContentType()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 137
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for ContentType class\n"
  example: []
  syntax:
    content: public ContentType()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.ContentType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.ContentType.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldRef})
  commentId: M:PnP.Framework.Provisioning.Model.ContentType.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldRef})
  id: '#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldRef})'
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: ContentType(String, String, String, String, Boolean, Boolean, Boolean, String, Boolean, IEnumerable<FieldRef>)
  nameWithType: ContentType.ContentType(String, String, String, String, Boolean, Boolean, Boolean, String, Boolean, IEnumerable<FieldRef>)
  fullName: PnP.Framework.Provisioning.Model.ContentType.ContentType(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, System.String, System.Boolean, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.FieldRef>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 155
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for ContentType class\n"
  example: []
  syntax:
    content: public ContentType(string id, string name, string description, string group, bool contenttypeSealed, bool hidden, bool readyonly, string documentTemplate, bool overwrite, IEnumerable<FieldRef> fieldRefs)
    parameters:
    - id: id
      type: System.String
      description: Content Type ID
    - id: name
      type: System.String
      description: Content Type Name
    - id: description
      type: System.String
      description: Content Type Description
    - id: group
      type: System.String
      description: Content Type Group
    - id: contenttypeSealed
      type: System.Boolean
      description: Sealed Content Type
    - id: hidden
      type: System.Boolean
      description: Hidden Content Type
    - id: readyonly
      type: System.Boolean
      description: ReadOnly Content Type
    - id: documentTemplate
      type: System.String
      description: Document template of the content type
    - id: overwrite
      type: System.Boolean
      description: Specify true to overwrite
    - id: fieldRefs
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldRef}
      description: Content Type Field References
    content.vb: Public Sub New(id As String, name As String, description As String, group As String, contenttypeSealed As Boolean, hidden As Boolean, readyonly As Boolean, documentTemplate As String, overwrite As Boolean, fieldRefs As IEnumerable(Of FieldRef))
  overload: PnP.Framework.Provisioning.Model.ContentType.#ctor*
  nameWithType.vb: ContentType.ContentType(String, String, String, String, Boolean, Boolean, Boolean, String, Boolean, IEnumerable(Of FieldRef))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.Model.ContentType.ContentType(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.FieldRef))
  name.vb: ContentType(String, String, String, String, Boolean, Boolean, Boolean, String, Boolean, IEnumerable(Of FieldRef))
- uid: PnP.Framework.Provisioning.Model.ContentType.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.ContentType.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ContentType.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.ContentType.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 178
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.ContentType.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.ContentType.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.ContentType.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ContentType.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.ContentType.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 207
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with ContentType\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents ContentType
    return:
      type: System.Boolean
      description: true if the current object is equal to the ContentType
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.ContentType.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.ContentType.Equals(PnP.Framework.Provisioning.Model.ContentType)
  commentId: M:PnP.Framework.Provisioning.Model.ContentType.Equals(PnP.Framework.Provisioning.Model.ContentType)
  id: Equals(PnP.Framework.Provisioning.Model.ContentType)
  parent: PnP.Framework.Provisioning.Model.ContentType
  langs:
  - csharp
  - vb
  name: Equals(ContentType)
  nameWithType: ContentType.Equals(ContentType)
  fullName: PnP.Framework.Provisioning.Model.ContentType.Equals(PnP.Framework.Provisioning.Model.ContentType)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/ContentType.cs
    startLine: 221
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares ContentType object based on Id, Name, Description, Group, Hidden, RedOnly, Overwrite, Sealed, DocumentTemplate, DocumentSetTemplate, FieldRefs, and UpdateChildren properties.\n"
  example: []
  syntax:
    content: public bool Equals(ContentType other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.ContentType
      description: ContentType object
    return:
      type: System.Boolean
      description: true if the ContentType object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As ContentType) As Boolean
  overload: PnP.Framework.Provisioning.Model.ContentType.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.ContentType}.Equals(PnP.Framework.Provisioning.Model.ContentType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.ContentType}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.ContentType}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ContentType>
  nameWithType: IEquatable<ContentType>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.ContentType>
  nameWithType.vb: IEquatable(Of ContentType)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.ContentType)
  name.vb: IEquatable(Of ContentType)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: PnP.Framework.Provisioning.Model.ContentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: PnP.Framework.Provisioning.Model.ContentType
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ContentType.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ContentType>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ContentType>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.ContentType>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ContentType)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.ContentType)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ContentType)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ContentType>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ContentType>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.ContentType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ContentType)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ContentType)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.ContentType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ContentType.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.ContentType,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ContentType, T>(Expression<Func<ContentType, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ContentType, T>(Expression<Func<ContentType, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.ContentType, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.ContentType, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ContentType, T)(Expression(Of Func(Of ContentType, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.ContentType, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.ContentType, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ContentType, T)(Expression(Of Func(Of ContentType, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ContentType, T>
    nameWithType: ObjectExtensions.Set<ContentType, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.ContentType, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: PnP.Framework.Provisioning.Model.ContentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ContentType, T)
    nameWithType: ObjectExtensions.Set(Of ContentType, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.ContentType, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: PnP.Framework.Provisioning.Model.ContentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.ContentType.Id*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Id
  name: Id
  nameWithType: ContentType.Id
  fullName: PnP.Framework.Provisioning.Model.ContentType.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.ContentType.Name*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Name
  name: Name
  nameWithType: ContentType.Name
  fullName: PnP.Framework.Provisioning.Model.ContentType.Name
- uid: PnP.Framework.Provisioning.Model.ContentType.Description*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Description
  name: Description
  nameWithType: ContentType.Description
  fullName: PnP.Framework.Provisioning.Model.ContentType.Description
- uid: PnP.Framework.Provisioning.Model.ContentType.Group*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Group
  name: Group
  nameWithType: ContentType.Group
  fullName: PnP.Framework.Provisioning.Model.ContentType.Group
- uid: PnP.Framework.Provisioning.Model.ContentType.FieldRefs*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.FieldRefs
  name: FieldRefs
  nameWithType: ContentType.FieldRefs
  fullName: PnP.Framework.Provisioning.Model.ContentType.FieldRefs
- uid: PnP.Framework.Provisioning.Model.FieldRefCollection
  commentId: T:PnP.Framework.Provisioning.Model.FieldRefCollection
  parent: PnP.Framework.Provisioning.Model
  name: FieldRefCollection
  nameWithType: FieldRefCollection
  fullName: PnP.Framework.Provisioning.Model.FieldRefCollection
- uid: PnP.Framework.Provisioning.Model.ContentType.Hidden*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Hidden
  name: Hidden
  nameWithType: ContentType.Hidden
  fullName: PnP.Framework.Provisioning.Model.ContentType.Hidden
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.ContentType.Sealed*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Sealed
  name: Sealed
  nameWithType: ContentType.Sealed
  fullName: PnP.Framework.Provisioning.Model.ContentType.Sealed
- uid: PnP.Framework.Provisioning.Model.ContentType.ReadOnly*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.ReadOnly
  name: ReadOnly
  nameWithType: ContentType.ReadOnly
  fullName: PnP.Framework.Provisioning.Model.ContentType.ReadOnly
- uid: PnP.Framework.Provisioning.Model.ContentType.Overwrite*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Overwrite
  name: Overwrite
  nameWithType: ContentType.Overwrite
  fullName: PnP.Framework.Provisioning.Model.ContentType.Overwrite
- uid: PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate
  name: DocumentTemplate
  nameWithType: ContentType.DocumentTemplate
  fullName: PnP.Framework.Provisioning.Model.ContentType.DocumentTemplate
- uid: PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate
  name: DocumentSetTemplate
  nameWithType: ContentType.DocumentSetTemplate
  fullName: PnP.Framework.Provisioning.Model.ContentType.DocumentSetTemplate
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  commentId: T:PnP.Framework.Provisioning.Model.DocumentSetTemplate
  parent: PnP.Framework.Provisioning.Model
  name: DocumentSetTemplate
  nameWithType: DocumentSetTemplate
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
- uid: PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl
  name: DisplayFormUrl
  nameWithType: ContentType.DisplayFormUrl
  fullName: PnP.Framework.Provisioning.Model.ContentType.DisplayFormUrl
- uid: PnP.Framework.Provisioning.Model.ContentType.EditFormUrl*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.EditFormUrl
  name: EditFormUrl
  nameWithType: ContentType.EditFormUrl
  fullName: PnP.Framework.Provisioning.Model.ContentType.EditFormUrl
- uid: PnP.Framework.Provisioning.Model.ContentType.NewFormUrl*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.NewFormUrl
  name: NewFormUrl
  nameWithType: ContentType.NewFormUrl
  fullName: PnP.Framework.Provisioning.Model.ContentType.NewFormUrl
- uid: PnP.Framework.Provisioning.Model.ContentType.UpdateChildren*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.UpdateChildren
  name: UpdateChildren
  nameWithType: ContentType.UpdateChildren
  fullName: PnP.Framework.Provisioning.Model.ContentType.UpdateChildren
- uid: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId
  name: DisplayFormClientSideComponentId
  nameWithType: ContentType.DisplayFormClientSideComponentId
  fullName: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentId
- uid: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties
  name: DisplayFormClientSideComponentProperties
  nameWithType: ContentType.DisplayFormClientSideComponentProperties
  fullName: PnP.Framework.Provisioning.Model.ContentType.DisplayFormClientSideComponentProperties
- uid: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId
  name: NewFormClientSideComponentId
  nameWithType: ContentType.NewFormClientSideComponentId
  fullName: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentId
- uid: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties
  name: NewFormClientSideComponentProperties
  nameWithType: ContentType.NewFormClientSideComponentProperties
  fullName: PnP.Framework.Provisioning.Model.ContentType.NewFormClientSideComponentProperties
- uid: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId
  name: EditFormClientSideComponentId
  nameWithType: ContentType.EditFormClientSideComponentId
  fullName: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentId
- uid: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties
  name: EditFormClientSideComponentProperties
  nameWithType: ContentType.EditFormClientSideComponentProperties
  fullName: PnP.Framework.Provisioning.Model.ContentType.EditFormClientSideComponentProperties
- uid: PnP.Framework.Provisioning.Model.ContentType.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.#ctor
  name: ContentType
  nameWithType: ContentType.ContentType
  fullName: PnP.Framework.Provisioning.Model.ContentType.ContentType
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldRef}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldRef}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FieldRef>
  nameWithType: IEnumerable<FieldRef>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.FieldRef>
  nameWithType.vb: IEnumerable(Of FieldRef)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.FieldRef)
  name.vb: IEnumerable(Of FieldRef)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.FieldRef
    name: FieldRef
    nameWithType: FieldRef
    fullName: PnP.Framework.Provisioning.Model.FieldRef
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.FieldRef
    name: FieldRef
    nameWithType: FieldRef
    fullName: PnP.Framework.Provisioning.Model.FieldRef
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ContentType.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.GetHashCode
  name: GetHashCode
  nameWithType: ContentType.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.ContentType.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ContentType.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.ContentType.Equals
  name: Equals
  nameWithType: ContentType.Equals
  fullName: PnP.Framework.Provisioning.Model.ContentType.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.ContentType}.Equals(PnP.Framework.Provisioning.Model.ContentType)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.ContentType}.Equals(PnP.Framework.Provisioning.Model.ContentType)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.ContentType}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ContentType)
  nameWithType: IEquatable<ContentType>.Equals(ContentType)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.ContentType>.Equals(PnP.Framework.Provisioning.Model.ContentType)
  nameWithType.vb: IEquatable(Of ContentType).Equals(ContentType)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.ContentType).Equals(PnP.Framework.Provisioning.Model.ContentType)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ContentType>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.ContentType>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: PnP.Framework.Provisioning.Model.ContentType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ContentType).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.ContentType).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: PnP.Framework.Provisioning.Model.ContentType
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.ContentType
  commentId: T:PnP.Framework.Provisioning.Model.ContentType
  parent: PnP.Framework.Provisioning.Model
  name: ContentType
  nameWithType: ContentType
  fullName: PnP.Framework.Provisioning.Model.ContentType
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

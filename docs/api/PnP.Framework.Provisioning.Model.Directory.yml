### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.Directory
  commentId: T:PnP.Framework.Provisioning.Model.Directory
  id: Directory
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.Directory.#ctor
  - PnP.Framework.Provisioning.Model.Directory.#ctor(System.String,System.String,System.Boolean,PnP.Framework.Provisioning.Model.FileLevel,System.Boolean,System.String,System.String,System.String,PnP.Framework.Provisioning.Model.ObjectSecurity)
  - PnP.Framework.Provisioning.Model.Directory.Equals(PnP.Framework.Provisioning.Model.Directory)
  - PnP.Framework.Provisioning.Model.Directory.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions
  - PnP.Framework.Provisioning.Model.Directory.Folder
  - PnP.Framework.Provisioning.Model.Directory.GetHashCode
  - PnP.Framework.Provisioning.Model.Directory.IncludedExtensions
  - PnP.Framework.Provisioning.Model.Directory.Level
  - PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile
  - PnP.Framework.Provisioning.Model.Directory.Overwrite
  - PnP.Framework.Provisioning.Model.Directory.Recursive
  - PnP.Framework.Provisioning.Model.Directory.Security
  - PnP.Framework.Provisioning.Model.Directory.Src
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: Directory
  fullName: PnP.Framework.Provisioning.Model.Directory
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Directory
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 8
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines a Directory element, to describe a folder in the current \nrepository that will be used to upload files into the target Site\n"
  example: []
  syntax:
    content: 'public class Directory : BaseModel, IProvisioningTemplateDescendant, IEquatable<Directory>'
    content.vb: >-
      Public Class Directory
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of Directory)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.Directory}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.Directory.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.Directory.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Directory,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - PnP.Framework.Provisioning.Model.Directory.PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
  - PnP.Framework.Provisioning.Model.Directory.PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.Directory.Src
  commentId: P:PnP.Framework.Provisioning.Model.Directory.Src
  id: Src
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Src
  nameWithType: Directory.Src
  fullName: PnP.Framework.Provisioning.Model.Directory.Src
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Src
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 21
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe Src of the Directory\n"
  example: []
  syntax:
    content: public string Src { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Src As String
  overload: PnP.Framework.Provisioning.Model.Directory.Src*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.Folder
  commentId: P:PnP.Framework.Provisioning.Model.Directory.Folder
  id: Folder
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Folder
  nameWithType: Directory.Folder
  fullName: PnP.Framework.Provisioning.Model.Directory.Folder
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Folder
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 26
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe TargetFolder of the Directory\n"
  example: []
  syntax:
    content: public string Folder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Folder As String
  overload: PnP.Framework.Provisioning.Model.Directory.Folder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.Overwrite
  commentId: P:PnP.Framework.Provisioning.Model.Directory.Overwrite
  id: Overwrite
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Overwrite
  nameWithType: Directory.Overwrite
  fullName: PnP.Framework.Provisioning.Model.Directory.Overwrite
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Overwrite
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 31
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe Overwrite flag for the files in the Directory\n"
  example: []
  syntax:
    content: public bool Overwrite { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Overwrite As Boolean
  overload: PnP.Framework.Provisioning.Model.Directory.Overwrite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.Level
  commentId: P:PnP.Framework.Provisioning.Model.Directory.Level
  id: Level
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: Directory.Level
  fullName: PnP.Framework.Provisioning.Model.Directory.Level
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Level
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 36
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe Level status for the files in the Directory\n"
  example: []
  syntax:
    content: public FileLevel Level { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.FileLevel
    content.vb: Public Property Level As FileLevel
  overload: PnP.Framework.Provisioning.Model.Directory.Level*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.Recursive
  commentId: P:PnP.Framework.Provisioning.Model.Directory.Recursive
  id: Recursive
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Recursive
  nameWithType: Directory.Recursive
  fullName: PnP.Framework.Provisioning.Model.Directory.Recursive
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Recursive
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 41
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether to recursively browse through all the child folders of the Directory\n"
  example: []
  syntax:
    content: public bool Recursive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Recursive As Boolean
  overload: PnP.Framework.Provisioning.Model.Directory.Recursive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.IncludedExtensions
  commentId: P:PnP.Framework.Provisioning.Model.Directory.IncludedExtensions
  id: IncludedExtensions
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: IncludedExtensions
  nameWithType: Directory.IncludedExtensions
  fullName: PnP.Framework.Provisioning.Model.Directory.IncludedExtensions
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IncludedExtensions
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe file Extensions to include while uploading the Directory\n"
  example: []
  syntax:
    content: public string IncludedExtensions { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IncludedExtensions As String
  overload: PnP.Framework.Provisioning.Model.Directory.IncludedExtensions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions
  commentId: P:PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions
  id: ExcludedExtensions
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: ExcludedExtensions
  nameWithType: Directory.ExcludedExtensions
  fullName: PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExcludedExtensions
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 51
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe file Extensions to exclude while uploading the Directory\n"
  example: []
  syntax:
    content: public string ExcludedExtensions { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExcludedExtensions As String
  overload: PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile
  commentId: P:PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile
  id: MetadataMappingFile
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: MetadataMappingFile
  nameWithType: Directory.MetadataMappingFile
  fullName: PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MetadataMappingFile
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 56
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe file path of JSON mapping file with metadata for files to upload in the Directory\n"
  example: []
  syntax:
    content: public string MetadataMappingFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MetadataMappingFile As String
  overload: PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.Security
  commentId: P:PnP.Framework.Provisioning.Model.Directory.Security
  id: Security
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: Directory.Security
  fullName: PnP.Framework.Provisioning.Model.Directory.Security
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Security
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 61
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Security rules for the File\n"
  example: []
  syntax:
    content: public ObjectSecurity Security { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.ObjectSecurity
    content.vb: Public Property Security As ObjectSecurity
  overload: PnP.Framework.Provisioning.Model.Directory.Security*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.Directory.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Directory()
  nameWithType: Directory.Directory()
  fullName: PnP.Framework.Provisioning.Model.Directory.Directory()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 84
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for Directory class\n"
  example: []
  syntax:
    content: public Directory()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.Directory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.#ctor(System.String,System.String,System.Boolean,PnP.Framework.Provisioning.Model.FileLevel,System.Boolean,System.String,System.String,System.String,PnP.Framework.Provisioning.Model.ObjectSecurity)
  commentId: M:PnP.Framework.Provisioning.Model.Directory.#ctor(System.String,System.String,System.Boolean,PnP.Framework.Provisioning.Model.FileLevel,System.Boolean,System.String,System.String,System.String,PnP.Framework.Provisioning.Model.ObjectSecurity)
  id: '#ctor(System.String,System.String,System.Boolean,PnP.Framework.Provisioning.Model.FileLevel,System.Boolean,System.String,System.String,System.String,PnP.Framework.Provisioning.Model.ObjectSecurity)'
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Directory(String, String, Boolean, FileLevel, Boolean, String, String, String, ObjectSecurity)
  nameWithType: Directory.Directory(String, String, Boolean, FileLevel, Boolean, String, String, String, ObjectSecurity)
  fullName: PnP.Framework.Provisioning.Model.Directory.Directory(System.String, System.String, System.Boolean, PnP.Framework.Provisioning.Model.FileLevel, System.Boolean, System.String, System.String, System.String, PnP.Framework.Provisioning.Model.ObjectSecurity)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 100
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for Directory class\n"
  example: []
  syntax:
    content: public Directory(string src, string folder, bool overwrite, FileLevel level = FileLevel.Draft, bool recursive = false, string includeExtensions = null, string excludeExtensions = null, string metadataMappingFile = null, ObjectSecurity security = null)
    parameters:
    - id: src
      type: System.String
      description: Source Name
    - id: folder
      type: System.String
      description: Folder Path
    - id: overwrite
      type: System.Boolean
      description: Overwrite property
    - id: level
      type: PnP.Framework.Provisioning.Model.FileLevel
      description: File Level
    - id: recursive
      type: System.Boolean
      description: Recursive property
    - id: includeExtensions
      type: System.String
      description: Extensions which can be included in directory files
    - id: excludeExtensions
      type: System.String
      description: Extensions which are excluded in drectory files
    - id: metadataMappingFile
      type: System.String
      description: Metadata Mapping File
    - id: security
      type: PnP.Framework.Provisioning.Model.ObjectSecurity
      description: ObjectSecurity
    content.vb: Public Sub New(src As String, folder As String, overwrite As Boolean, level As FileLevel = FileLevel.Draft, recursive As Boolean = False, includeExtensions As String = Nothing, excludeExtensions As String = Nothing, metadataMappingFile As String = Nothing, security As ObjectSecurity = Nothing)
  overload: PnP.Framework.Provisioning.Model.Directory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Directory.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.Directory.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Directory.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.Directory.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 129
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.Directory.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.Directory.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.Directory.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Directory.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.Directory.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 149
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with Directory\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents Directory
    return:
      type: System.Boolean
      description: true if the current object is equal to the Directory
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.Directory.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.Directory.Equals(PnP.Framework.Provisioning.Model.Directory)
  commentId: M:PnP.Framework.Provisioning.Model.Directory.Equals(PnP.Framework.Provisioning.Model.Directory)
  id: Equals(PnP.Framework.Provisioning.Model.Directory)
  parent: PnP.Framework.Provisioning.Model.Directory
  langs:
  - csharp
  - vb
  name: Equals(Directory)
  nameWithType: Directory.Equals(Directory)
  fullName: PnP.Framework.Provisioning.Model.Directory.Equals(PnP.Framework.Provisioning.Model.Directory)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/Directory.cs
    startLine: 163
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares Directory object based on ExcludedExtensions, Folder, IncludedExtensions, Level, MetaDataMappingFile, Overwrite, Recursive, Src and Security properties.\n"
  example: []
  syntax:
    content: public bool Equals(Directory other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.Directory
      description: Directory object
    return:
      type: System.Boolean
      description: true if the Directory object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As Directory) As Boolean
  overload: PnP.Framework.Provisioning.Model.Directory.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.Directory}.Equals(PnP.Framework.Provisioning.Model.Directory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.Directory}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.Directory}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Directory>
  nameWithType: IEquatable<Directory>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Directory>
  nameWithType.vb: IEquatable(Of Directory)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.Directory)
  name.vb: IEquatable(Of Directory)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Directory.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<Directory>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Directory>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Directory>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of Directory)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Directory)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of Directory)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<Directory>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Directory>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Directory>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of Directory)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of Directory)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Directory)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Directory.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Directory,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<Directory, T>(Expression<Func<Directory, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<Directory, T>(Expression<Func<Directory, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Directory, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.Directory, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of Directory, T)(Expression(Of Func(Of Directory, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Directory, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.Directory, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of Directory, T)(Expression(Of Func(Of Directory, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<Directory, T>
    nameWithType: ObjectExtensions.Set<Directory, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Directory, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of Directory, T)
    nameWithType: ObjectExtensions.Set(Of Directory, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Directory, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Directory.PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
  parent: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities
  definition: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
  name: GetDirectoryFiles(Dictionary<String, Dictionary<String, String>>)
  nameWithType: FileUtilities.GetDirectoryFiles(Dictionary<String, Dictionary<String, String>>)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.Dictionary<System.String, System.String>>)
  nameWithType.vb: FileUtilities.GetDirectoryFiles(Dictionary(Of String, Dictionary(Of String, String)))
  fullName.vb: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.Dictionary(Of System.String, System.String)))
  name.vb: GetDirectoryFiles(Dictionary(Of String, Dictionary(Of String, String)))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
    name: GetDirectoryFiles
    nameWithType: FileUtilities.GetDirectoryFiles
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
    name: GetDirectoryFiles
    nameWithType: FileUtilities.GetDirectoryFiles
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Directory.PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties(PnP.Framework.Provisioning.Model.Directory)
  parent: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities
  definition: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties(PnP.Framework.Provisioning.Model.Directory)
  name: GetMetadataProperties()
  nameWithType: FileUtilities.GetMetadataProperties()
  fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
    name: GetMetadataProperties
    nameWithType: FileUtilities.GetMetadataProperties
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
    name: GetMetadataProperties
    nameWithType: FileUtilities.GetMetadataProperties
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
  isExternal: true
  name: GetDirectoryFiles(Directory, Dictionary<String, Dictionary<String, String>>)
  nameWithType: FileUtilities.GetDirectoryFiles(Directory, Dictionary<String, Dictionary<String, String>>)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.Dictionary<System.String, System.String>>)
  nameWithType.vb: FileUtilities.GetDirectoryFiles(Directory, Dictionary(Of String, Dictionary(Of String, String)))
  fullName.vb: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.Dictionary(Of System.String, System.String)))
  name.vb: GetDirectoryFiles(Directory, Dictionary(Of String, Dictionary(Of String, String)))
  spec.csharp:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
    name: GetDirectoryFiles
    nameWithType: FileUtilities.GetDirectoryFiles
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles(PnP.Framework.Provisioning.Model.Directory,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})
    name: GetDirectoryFiles
    nameWithType: FileUtilities.GetDirectoryFiles
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetDirectoryFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities
  parent: PnP.Framework.Provisioning.ObjectHandlers.Utilities
  name: FileUtilities
  nameWithType: FileUtilities
  fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities
- uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties(PnP.Framework.Provisioning.Model.Directory)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties(PnP.Framework.Provisioning.Model.Directory)
  name: GetMetadataProperties(Directory)
  nameWithType: FileUtilities.GetMetadataProperties(Directory)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties(PnP.Framework.Provisioning.Model.Directory)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties(PnP.Framework.Provisioning.Model.Directory)
    name: GetMetadataProperties
    nameWithType: FileUtilities.GetMetadataProperties
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties(PnP.Framework.Provisioning.Model.Directory)
    name: GetMetadataProperties
    nameWithType: FileUtilities.GetMetadataProperties
    fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities.FileUtilities.GetMetadataProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.ObjectHandlers.Utilities
  commentId: N:PnP.Framework.Provisioning.ObjectHandlers.Utilities
  name: PnP.Framework.Provisioning.ObjectHandlers.Utilities
  nameWithType: PnP.Framework.Provisioning.ObjectHandlers.Utilities
  fullName: PnP.Framework.Provisioning.ObjectHandlers.Utilities
- uid: PnP.Framework.Provisioning.Model.Directory.Src*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.Src
  name: Src
  nameWithType: Directory.Src
  fullName: PnP.Framework.Provisioning.Model.Directory.Src
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.Directory.Folder*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.Folder
  name: Folder
  nameWithType: Directory.Folder
  fullName: PnP.Framework.Provisioning.Model.Directory.Folder
- uid: PnP.Framework.Provisioning.Model.Directory.Overwrite*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.Overwrite
  name: Overwrite
  nameWithType: Directory.Overwrite
  fullName: PnP.Framework.Provisioning.Model.Directory.Overwrite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.Directory.Level*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.Level
  name: Level
  nameWithType: Directory.Level
  fullName: PnP.Framework.Provisioning.Model.Directory.Level
- uid: PnP.Framework.Provisioning.Model.FileLevel
  commentId: T:PnP.Framework.Provisioning.Model.FileLevel
  parent: PnP.Framework.Provisioning.Model
  name: FileLevel
  nameWithType: FileLevel
  fullName: PnP.Framework.Provisioning.Model.FileLevel
- uid: PnP.Framework.Provisioning.Model.Directory.Recursive*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.Recursive
  name: Recursive
  nameWithType: Directory.Recursive
  fullName: PnP.Framework.Provisioning.Model.Directory.Recursive
- uid: PnP.Framework.Provisioning.Model.Directory.IncludedExtensions*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.IncludedExtensions
  name: IncludedExtensions
  nameWithType: Directory.IncludedExtensions
  fullName: PnP.Framework.Provisioning.Model.Directory.IncludedExtensions
- uid: PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions
  name: ExcludedExtensions
  nameWithType: Directory.ExcludedExtensions
  fullName: PnP.Framework.Provisioning.Model.Directory.ExcludedExtensions
- uid: PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile
  name: MetadataMappingFile
  nameWithType: Directory.MetadataMappingFile
  fullName: PnP.Framework.Provisioning.Model.Directory.MetadataMappingFile
- uid: PnP.Framework.Provisioning.Model.Directory.Security*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.Security
  name: Security
  nameWithType: Directory.Security
  fullName: PnP.Framework.Provisioning.Model.Directory.Security
- uid: PnP.Framework.Provisioning.Model.ObjectSecurity
  commentId: T:PnP.Framework.Provisioning.Model.ObjectSecurity
  parent: PnP.Framework.Provisioning.Model
  name: ObjectSecurity
  nameWithType: ObjectSecurity
  fullName: PnP.Framework.Provisioning.Model.ObjectSecurity
- uid: PnP.Framework.Provisioning.Model.Directory.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.#ctor
  name: Directory
  nameWithType: Directory.Directory
  fullName: PnP.Framework.Provisioning.Model.Directory.Directory
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Directory.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.GetHashCode
  name: GetHashCode
  nameWithType: Directory.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.Directory.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Directory.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.Directory.Equals
  name: Equals
  nameWithType: Directory.Equals
  fullName: PnP.Framework.Provisioning.Model.Directory.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.Directory}.Equals(PnP.Framework.Provisioning.Model.Directory)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.Directory}.Equals(PnP.Framework.Provisioning.Model.Directory)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.Directory}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Directory)
  nameWithType: IEquatable<Directory>.Equals(Directory)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Directory>.Equals(PnP.Framework.Provisioning.Model.Directory)
  nameWithType.vb: IEquatable(Of Directory).Equals(Directory)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.Directory).Equals(PnP.Framework.Provisioning.Model.Directory)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Directory>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Directory>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Directory).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.Directory).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Directory
    name: Directory
    nameWithType: Directory
    fullName: PnP.Framework.Provisioning.Model.Directory
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Directory
  commentId: T:PnP.Framework.Provisioning.Model.Directory
  parent: PnP.Framework.Provisioning.Model
  name: Directory
  nameWithType: Directory
  fullName: PnP.Framework.Provisioning.Model.Directory
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

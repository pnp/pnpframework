### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  commentId: T:PnP.Framework.Provisioning.Model.DocumentSetTemplate
  id: DocumentSetTemplate
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor(System.String,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.ContentTypeReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference})
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid})
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments
  langs:
  - csharp
  - vb
  name: DocumentSetTemplate
  nameWithType: DocumentSetTemplate
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DocumentSetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines a DocumentSet Template for creating multiple DocumentSet instances\n"
  example: []
  syntax:
    content: 'public class DocumentSetTemplate : BaseModel, IProvisioningTemplateDescendant, IEquatable<DocumentSetTemplate>'
    content.vb: >-
      Public Class DocumentSetTemplate
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of DocumentSetTemplate)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.DocumentSetTemplate}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.DocumentSetTemplate.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.DocumentSetTemplate,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: DocumentSetTemplate()
  nameWithType: DocumentSetTemplate.DocumentSetTemplate()
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DocumentSetTemplate()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 27
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for DocumentSetTemplate class\n"
  example: []
  syntax:
    content: public DocumentSetTemplate()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid})'
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: DocumentSetTemplate(String, IEnumerable<String>, IEnumerable<DefaultDocument>, IEnumerable<Guid>, IEnumerable<Guid>)
  nameWithType: DocumentSetTemplate.DocumentSetTemplate(String, IEnumerable<String>, IEnumerable<DefaultDocument>, IEnumerable<Guid>, IEnumerable<Guid>)
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DocumentSetTemplate(System.String, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.DefaultDocument>, System.Collections.Generic.IEnumerable<System.Guid>, System.Collections.Generic.IEnumerable<System.Guid>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 43
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for DocumentSetTemplate class\n"
  example: []
  syntax:
    content: public DocumentSetTemplate(string welcomePage, IEnumerable<string> allowedContentTypes = null, IEnumerable<DefaultDocument> defaultDocuments = null, IEnumerable<Guid> sharedFields = null, IEnumerable<Guid> welcomePageFields = null)
    parameters:
    - id: welcomePage
      type: System.String
      description: Welcome Page of the DocumentSet
    - id: allowedContentTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Content Types allowed for the DocumentSet
    - id: defaultDocuments
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument}
      description: Default documents for the DocumentSet
    - id: sharedFields
      type: System.Collections.Generic.IEnumerable{System.Guid}
      description: Shared Fields for the DocumentSet
    - id: welcomePageFields
      type: System.Collections.Generic.IEnumerable{System.Guid}
      description: Welcome Page Fields for the DocumentSet
    content.vb: Public Sub New(welcomePage As String, allowedContentTypes As IEnumerable(Of String) = Nothing, defaultDocuments As IEnumerable(Of DefaultDocument) = Nothing, sharedFields As IEnumerable(Of Guid) = Nothing, welcomePageFields As IEnumerable(Of Guid) = Nothing)
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor*
  nameWithType.vb: DocumentSetTemplate.DocumentSetTemplate(String, IEnumerable(Of String), IEnumerable(Of DefaultDocument), IEnumerable(Of Guid), IEnumerable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DocumentSetTemplate(System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.DefaultDocument), System.Collections.Generic.IEnumerable(Of System.Guid), System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: DocumentSetTemplate(String, IEnumerable(Of String), IEnumerable(Of DefaultDocument), IEnumerable(Of Guid), IEnumerable(Of Guid))
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor(System.String,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.ContentTypeReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference})
  commentId: M:PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor(System.String,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.ContentTypeReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.ContentTypeReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference})'
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: DocumentSetTemplate(String, IEnumerable<ContentTypeReference>, IEnumerable<DefaultDocument>, IEnumerable<FieldReference>, IEnumerable<FieldReference>)
  nameWithType: DocumentSetTemplate.DocumentSetTemplate(String, IEnumerable<ContentTypeReference>, IEnumerable<DefaultDocument>, IEnumerable<FieldReference>, IEnumerable<FieldReference>)
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DocumentSetTemplate(System.String, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.ContentTypeReference>, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.DefaultDocument>, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.FieldReference>, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.FieldReference>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 58
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for DocumentSetTemplate class\n"
  example: []
  syntax:
    content: public DocumentSetTemplate(string welcomePage, IEnumerable<ContentTypeReference> allowedContentTypes = null, IEnumerable<DefaultDocument> defaultDocuments = null, IEnumerable<FieldReference> sharedFields = null, IEnumerable<FieldReference> welcomePageFields = null)
    parameters:
    - id: welcomePage
      type: System.String
      description: Welcome Page of the DocumentSet
    - id: allowedContentTypes
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.ContentTypeReference}
      description: Content Types allowed for the DocumentSet
    - id: defaultDocuments
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument}
      description: Default documents for the DocumentSet
    - id: sharedFields
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference}
      description: Shared Fields for the DocumentSet
    - id: welcomePageFields
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference}
      description: Welcome Page Fields for the DocumentSet
    content.vb: Public Sub New(welcomePage As String, allowedContentTypes As IEnumerable(Of ContentTypeReference) = Nothing, defaultDocuments As IEnumerable(Of DefaultDocument) = Nothing, sharedFields As IEnumerable(Of FieldReference) = Nothing, welcomePageFields As IEnumerable(Of FieldReference) = Nothing)
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor*
  nameWithType.vb: DocumentSetTemplate.DocumentSetTemplate(String, IEnumerable(Of ContentTypeReference), IEnumerable(Of DefaultDocument), IEnumerable(Of FieldReference), IEnumerable(Of FieldReference))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DocumentSetTemplate(System.String, System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.ContentTypeReference), System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.DefaultDocument), System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.FieldReference), System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.FieldReference))
  name.vb: DocumentSetTemplate(String, IEnumerable(Of ContentTypeReference), IEnumerable(Of DefaultDocument), IEnumerable(Of FieldReference), IEnumerable(Of FieldReference))
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes
  id: AllowedContentTypes
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: AllowedContentTypes
  nameWithType: DocumentSetTemplate.AllowedContentTypes
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AllowedContentTypes
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 87
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe list of allowed Content Types for the Document Set\n"
  example: []
  syntax:
    content: public ContentTypeReferenceCollection AllowedContentTypes { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.ContentTypeReferenceCollection
    content.vb: Public ReadOnly Property AllowedContentTypes As ContentTypeReferenceCollection
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments
  id: DefaultDocuments
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: DefaultDocuments
  nameWithType: DocumentSetTemplate.DefaultDocuments
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DefaultDocuments
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 96
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe list of default Documents for the Document Set\n"
  example: []
  syntax:
    content: public DefaultDocumentCollection DefaultDocuments { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.DefaultDocumentCollection
    content.vb: Public ReadOnly Property DefaultDocuments As DefaultDocumentCollection
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields
  id: SharedFields
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: SharedFields
  nameWithType: DocumentSetTemplate.SharedFields
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SharedFields
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 105
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe list of Shared Fields for the Document Set\n"
  example: []
  syntax:
    content: public FieldReferenceCollection SharedFields { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.FieldReferenceCollection
    content.vb: Public ReadOnly Property SharedFields As FieldReferenceCollection
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields
  id: WelcomePageFields
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: WelcomePageFields
  nameWithType: DocumentSetTemplate.WelcomePageFields
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: WelcomePageFields
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 114
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe list of Welcome Page Fields for the Document Set\n"
  example: []
  syntax:
    content: public FieldReferenceCollection WelcomePageFields { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.FieldReferenceCollection
    content.vb: Public ReadOnly Property WelcomePageFields As FieldReferenceCollection
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage
  id: WelcomePage
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: WelcomePage
  nameWithType: DocumentSetTemplate.WelcomePage
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: WelcomePage
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 123
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the custom WelcomePage for the Document Set\n"
  example: []
  syntax:
    content: public string WelcomePage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WelcomePage As String
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes
  id: RemoveExistingContentTypes
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: RemoveExistingContentTypes
  nameWithType: DocumentSetTemplate.RemoveExistingContentTypes
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RemoveExistingContentTypes
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 128
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe RemoveExistingContentTypes flag for the Allowed Content Types of the current Document Set, optional attribute.\n"
  example: []
  syntax:
    content: public bool RemoveExistingContentTypes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RemoveExistingContentTypes As Boolean
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren
  id: UpdateChildren
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: UpdateChildren
  nameWithType: DocumentSetTemplate.UpdateChildren
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UpdateChildren
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 133
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether changes to the content type will be udpated on inherited content types, optional attribute.\n"
  example: []
  syntax:
    content: public bool UpdateChildren { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UpdateChildren As Boolean
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments
  commentId: P:PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments
  id: XmlDocuments
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: XmlDocuments
  nameWithType: DocumentSetTemplate.XmlDocuments
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: XmlDocuments
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 141
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets a value that specifies the XML Documents settings for the Document Set.\n<seealso>\n<cref>https://msdn.microsoft.com/en-us/library/office/aa543904.aspx</cref>\n</seealso>\n"
  example: []
  syntax:
    content: public XElement XmlDocuments { get; set; }
    parameters: []
    return:
      type: System.Xml.Linq.XElement
    content.vb: Public Property XmlDocuments As XElement
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DocumentSetTemplate.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 151
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DocumentSetTemplate.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 169
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with DocumentSetTemplate\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents DocumentSetTemplate
    return:
      type: System.Boolean
      description: true if the current object is equal to the DocumentSetTemplate
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  commentId: M:PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  id: Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  parent: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  langs:
  - csharp
  - vb
  name: Equals(DocumentSetTemplate)
  nameWithType: DocumentSetTemplate.Equals(DocumentSetTemplate)
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/InformationArchitecture/DocumentSetTemplate.cs
    startLine: 183
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares DocumentSetTemplate object based on AllowedContentTypes, DefaultDocuments, SharedFields, WelcomePageFields, RemoveExistingContentTypes, XmlDocuments, and UpdateChildren properties.\n"
  example: []
  syntax:
    content: public bool Equals(DocumentSetTemplate other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.DocumentSetTemplate
      description: DocumentSetTemplate object
    return:
      type: System.Boolean
      description: true if the DocumentSetTemplate object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As DocumentSetTemplate) As Boolean
  overload: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.DocumentSetTemplate}.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.DocumentSetTemplate}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.DocumentSetTemplate}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DocumentSetTemplate>
  nameWithType: IEquatable<DocumentSetTemplate>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.DocumentSetTemplate>
  nameWithType.vb: IEquatable(Of DocumentSetTemplate)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  name.vb: IEquatable(Of DocumentSetTemplate)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
    name: DocumentSetTemplate
    nameWithType: DocumentSetTemplate
    fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
    name: DocumentSetTemplate
    nameWithType: DocumentSetTemplate
    fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<DocumentSetTemplate>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<DocumentSetTemplate>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.DocumentSetTemplate>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of DocumentSetTemplate)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of DocumentSetTemplate)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<DocumentSetTemplate>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<DocumentSetTemplate>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.DocumentSetTemplate>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of DocumentSetTemplate)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of DocumentSetTemplate)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.DocumentSetTemplate,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<DocumentSetTemplate, T>(Expression<Func<DocumentSetTemplate, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<DocumentSetTemplate, T>(Expression<Func<DocumentSetTemplate, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.DocumentSetTemplate, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.DocumentSetTemplate, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of DocumentSetTemplate, T)(Expression(Of Func(Of DocumentSetTemplate, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of DocumentSetTemplate, T)(Expression(Of Func(Of DocumentSetTemplate, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<DocumentSetTemplate, T>
    nameWithType: ObjectExtensions.Set<DocumentSetTemplate, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.DocumentSetTemplate, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
    name: DocumentSetTemplate
    nameWithType: DocumentSetTemplate
    fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of DocumentSetTemplate, T)
    nameWithType: ObjectExtensions.Set(Of DocumentSetTemplate, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
    name: DocumentSetTemplate
    nameWithType: DocumentSetTemplate
    fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.#ctor
  name: DocumentSetTemplate
  nameWithType: DocumentSetTemplate.DocumentSetTemplate
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DocumentSetTemplate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.DefaultDocument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DefaultDocument>
  nameWithType: IEnumerable<DefaultDocument>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.DefaultDocument>
  nameWithType.vb: IEnumerable(Of DefaultDocument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.DefaultDocument)
  name.vb: IEnumerable(Of DefaultDocument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.DefaultDocument
    name: DefaultDocument
    nameWithType: DefaultDocument
    fullName: PnP.Framework.Provisioning.Model.DefaultDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.DefaultDocument
    name: DefaultDocument
    nameWithType: DefaultDocument
    fullName: PnP.Framework.Provisioning.Model.DefaultDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.ContentTypeReference}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.ContentTypeReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ContentTypeReference>
  nameWithType: IEnumerable<ContentTypeReference>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.ContentTypeReference>
  nameWithType.vb: IEnumerable(Of ContentTypeReference)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.ContentTypeReference)
  name.vb: IEnumerable(Of ContentTypeReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.ContentTypeReference
    name: ContentTypeReference
    nameWithType: ContentTypeReference
    fullName: PnP.Framework.Provisioning.Model.ContentTypeReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.ContentTypeReference
    name: ContentTypeReference
    nameWithType: ContentTypeReference
    fullName: PnP.Framework.Provisioning.Model.ContentTypeReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.FieldReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FieldReference>
  nameWithType: IEnumerable<FieldReference>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.FieldReference>
  nameWithType.vb: IEnumerable(Of FieldReference)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.FieldReference)
  name.vb: IEnumerable(Of FieldReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.FieldReference
    name: FieldReference
    nameWithType: FieldReference
    fullName: PnP.Framework.Provisioning.Model.FieldReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.FieldReference
    name: FieldReference
    nameWithType: FieldReference
    fullName: PnP.Framework.Provisioning.Model.FieldReference
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes
  name: AllowedContentTypes
  nameWithType: DocumentSetTemplate.AllowedContentTypes
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.AllowedContentTypes
- uid: PnP.Framework.Provisioning.Model.ContentTypeReferenceCollection
  commentId: T:PnP.Framework.Provisioning.Model.ContentTypeReferenceCollection
  parent: PnP.Framework.Provisioning.Model
  name: ContentTypeReferenceCollection
  nameWithType: ContentTypeReferenceCollection
  fullName: PnP.Framework.Provisioning.Model.ContentTypeReferenceCollection
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments
  name: DefaultDocuments
  nameWithType: DocumentSetTemplate.DefaultDocuments
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.DefaultDocuments
- uid: PnP.Framework.Provisioning.Model.DefaultDocumentCollection
  commentId: T:PnP.Framework.Provisioning.Model.DefaultDocumentCollection
  parent: PnP.Framework.Provisioning.Model
  name: DefaultDocumentCollection
  nameWithType: DefaultDocumentCollection
  fullName: PnP.Framework.Provisioning.Model.DefaultDocumentCollection
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields
  name: SharedFields
  nameWithType: DocumentSetTemplate.SharedFields
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.SharedFields
- uid: PnP.Framework.Provisioning.Model.FieldReferenceCollection
  commentId: T:PnP.Framework.Provisioning.Model.FieldReferenceCollection
  parent: PnP.Framework.Provisioning.Model
  name: FieldReferenceCollection
  nameWithType: FieldReferenceCollection
  fullName: PnP.Framework.Provisioning.Model.FieldReferenceCollection
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields
  name: WelcomePageFields
  nameWithType: DocumentSetTemplate.WelcomePageFields
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePageFields
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage
  name: WelcomePage
  nameWithType: DocumentSetTemplate.WelcomePage
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.WelcomePage
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes
  name: RemoveExistingContentTypes
  nameWithType: DocumentSetTemplate.RemoveExistingContentTypes
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.RemoveExistingContentTypes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren
  name: UpdateChildren
  nameWithType: DocumentSetTemplate.UpdateChildren
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.UpdateChildren
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments
  name: XmlDocuments
  nameWithType: DocumentSetTemplate.XmlDocuments
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.XmlDocuments
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode
  name: GetHashCode
  nameWithType: DocumentSetTemplate.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals
  name: Equals
  nameWithType: DocumentSetTemplate.Equals
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.DocumentSetTemplate}.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.DocumentSetTemplate}.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.DocumentSetTemplate}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DocumentSetTemplate)
  nameWithType: IEquatable<DocumentSetTemplate>.Equals(DocumentSetTemplate)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.DocumentSetTemplate>.Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  nameWithType.vb: IEquatable(Of DocumentSetTemplate).Equals(DocumentSetTemplate)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate).Equals(PnP.Framework.Provisioning.Model.DocumentSetTemplate)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<DocumentSetTemplate>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.DocumentSetTemplate>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
    name: DocumentSetTemplate
    nameWithType: DocumentSetTemplate
    fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of DocumentSetTemplate).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.DocumentSetTemplate).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
    name: DocumentSetTemplate
    nameWithType: DocumentSetTemplate
    fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.DocumentSetTemplate
  commentId: T:PnP.Framework.Provisioning.Model.DocumentSetTemplate
  parent: PnP.Framework.Provisioning.Model
  name: DocumentSetTemplate
  nameWithType: DocumentSetTemplate
  fullName: PnP.Framework.Provisioning.Model.DocumentSetTemplate
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

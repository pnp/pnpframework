### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.Handlers
  commentId: T:PnP.Framework.Provisioning.Model.Handlers
  id: Handlers
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.Handlers.All
  - PnP.Framework.Provisioning.Model.Handlers.ApplicationLifecycleManagement
  - PnP.Framework.Provisioning.Model.Handlers.AuditSettings
  - PnP.Framework.Provisioning.Model.Handlers.ComposedLook
  - PnP.Framework.Provisioning.Model.Handlers.ContentTypes
  - PnP.Framework.Provisioning.Model.Handlers.CustomActions
  - PnP.Framework.Provisioning.Model.Handlers.ExtensibilityProviders
  - PnP.Framework.Provisioning.Model.Handlers.Features
  - PnP.Framework.Provisioning.Model.Handlers.Fields
  - PnP.Framework.Provisioning.Model.Handlers.Files
  - PnP.Framework.Provisioning.Model.Handlers.ImageRenditions
  - PnP.Framework.Provisioning.Model.Handlers.Lists
  - PnP.Framework.Provisioning.Model.Handlers.Navigation
  - PnP.Framework.Provisioning.Model.Handlers.None
  - PnP.Framework.Provisioning.Model.Handlers.PageContents
  - PnP.Framework.Provisioning.Model.Handlers.Pages
  - PnP.Framework.Provisioning.Model.Handlers.PropertyBagEntries
  - PnP.Framework.Provisioning.Model.Handlers.Publishing
  - PnP.Framework.Provisioning.Model.Handlers.RegionalSettings
  - PnP.Framework.Provisioning.Model.Handlers.SearchSettings
  - PnP.Framework.Provisioning.Model.Handlers.SiteFooter
  - PnP.Framework.Provisioning.Model.Handlers.SiteHeader
  - PnP.Framework.Provisioning.Model.Handlers.SitePolicy
  - PnP.Framework.Provisioning.Model.Handlers.SiteSecurity
  - PnP.Framework.Provisioning.Model.Handlers.SiteSettings
  - PnP.Framework.Provisioning.Model.Handlers.SupportedUILanguages
  - PnP.Framework.Provisioning.Model.Handlers.SyntexModels
  - PnP.Framework.Provisioning.Model.Handlers.Tenant
  - PnP.Framework.Provisioning.Model.Handlers.TermGroups
  - PnP.Framework.Provisioning.Model.Handlers.Theme
  - PnP.Framework.Provisioning.Model.Handlers.WebApiPermissions
  - PnP.Framework.Provisioning.Model.Handlers.WebSettings
  - PnP.Framework.Provisioning.Model.Handlers.Workflows
  langs:
  - csharp
  - vb
  name: Handlers
  nameWithType: Handlers
  fullName: PnP.Framework.Provisioning.Model.Handlers
  type: Enum
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Handlers
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 7
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nHandlers to be processed on the template\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum Handlers
    content.vb: >-
      <Flags>

      Public Enum Handlers
  extensionMethods:
  - System.Enum.System.EnumerationExtensions.Include``1({T})
  - System.Enum.System.EnumerationExtensions.Remove``1({T})
  - System.Enum.System.EnumerationExtensions.Has``1({T})
  - System.Enum.System.EnumerationExtensions.Missing``1({T})
  - PnP.Framework.Provisioning.Model.Handlers.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.Handlers.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Handlers,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: PnP.Framework.Provisioning.Model.Handlers.None
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.None
  id: None
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: None
  nameWithType: Handlers.None
  fullName: PnP.Framework.Provisioning.Model.Handlers.None
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: None
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 10
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: None = 0
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.AuditSettings
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.AuditSettings
  id: AuditSettings
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: AuditSettings
  nameWithType: Handlers.AuditSettings
  fullName: PnP.Framework.Provisioning.Model.Handlers.AuditSettings
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AuditSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 1, represents AuditSettings\n"
  example: []
  syntax:
    content: AuditSettings = 1
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.ComposedLook
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.ComposedLook
  id: ComposedLook
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: ComposedLook
  nameWithType: Handlers.ComposedLook
  fullName: PnP.Framework.Provisioning.Model.Handlers.ComposedLook
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ComposedLook
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 18
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 2, represents ComposedLook\n"
  example: []
  syntax:
    content: ComposedLook = 2
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.CustomActions
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.CustomActions
  id: CustomActions
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: CustomActions
  nameWithType: Handlers.CustomActions
  fullName: PnP.Framework.Provisioning.Model.Handlers.CustomActions
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CustomActions
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 4, represents CustomActions\n"
  example: []
  syntax:
    content: CustomActions = 4
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.ExtensibilityProviders
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.ExtensibilityProviders
  id: ExtensibilityProviders
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: ExtensibilityProviders
  nameWithType: Handlers.ExtensibilityProviders
  fullName: PnP.Framework.Provisioning.Model.Handlers.ExtensibilityProviders
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ExtensibilityProviders
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 26
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 8, represents ExtensibilityProviders\n"
  example: []
  syntax:
    content: ExtensibilityProviders = 8
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Features
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Features
  id: Features
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: Handlers.Features
  fullName: PnP.Framework.Provisioning.Model.Handlers.Features
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Features
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 30
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 16, represents Features\n"
  example: []
  syntax:
    content: Features = 16
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Fields
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Fields
  id: Fields
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: Handlers.Fields
  fullName: PnP.Framework.Provisioning.Model.Handlers.Fields
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Fields
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 34
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 32, represents Fields\n"
  example: []
  syntax:
    content: Fields = 32
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Files
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Files
  id: Files
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: Handlers.Files
  fullName: PnP.Framework.Provisioning.Model.Handlers.Files
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Files
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 38
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 64, represents Files\n"
  example: []
  syntax:
    content: Files = 64
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Lists
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Lists
  id: Lists
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Lists
  nameWithType: Handlers.Lists
  fullName: PnP.Framework.Provisioning.Model.Handlers.Lists
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Lists
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 42
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 128, represents Lists\n"
  example: []
  syntax:
    content: Lists = 128
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Pages
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Pages
  id: Pages
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Pages
  nameWithType: Handlers.Pages
  fullName: PnP.Framework.Provisioning.Model.Handlers.Pages
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Pages
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 256, represents Pages\n"
  example: []
  syntax:
    content: Pages = 256
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Publishing
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Publishing
  id: Publishing
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Publishing
  nameWithType: Handlers.Publishing
  fullName: PnP.Framework.Provisioning.Model.Handlers.Publishing
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Publishing
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 50
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 512, represents Publishing\n"
  example: []
  syntax:
    content: Publishing = 512
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.RegionalSettings
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.RegionalSettings
  id: RegionalSettings
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: RegionalSettings
  nameWithType: Handlers.RegionalSettings
  fullName: PnP.Framework.Provisioning.Model.Handlers.RegionalSettings
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RegionalSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 54
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 1024, represents RegionalSettings\n"
  example: []
  syntax:
    content: RegionalSettings = 1024
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SearchSettings
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SearchSettings
  id: SearchSettings
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SearchSettings
  nameWithType: Handlers.SearchSettings
  fullName: PnP.Framework.Provisioning.Model.Handlers.SearchSettings
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SearchSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 58
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 2048, represents SearchSettings\n"
  example: []
  syntax:
    content: SearchSettings = 2048
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SitePolicy
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SitePolicy
  id: SitePolicy
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SitePolicy
  nameWithType: Handlers.SitePolicy
  fullName: PnP.Framework.Provisioning.Model.Handlers.SitePolicy
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SitePolicy
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 62
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 4096, represents SitePolicy\n"
  example: []
  syntax:
    content: SitePolicy = 4096
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SupportedUILanguages
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SupportedUILanguages
  id: SupportedUILanguages
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SupportedUILanguages
  nameWithType: Handlers.SupportedUILanguages
  fullName: PnP.Framework.Provisioning.Model.Handlers.SupportedUILanguages
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SupportedUILanguages
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 66
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 8192, represents SupportedUILanguages\n"
  example: []
  syntax:
    content: SupportedUILanguages = 8192
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.TermGroups
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.TermGroups
  id: TermGroups
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: TermGroups
  nameWithType: Handlers.TermGroups
  fullName: PnP.Framework.Provisioning.Model.Handlers.TermGroups
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TermGroups
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 70
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 16384, represents TermGroups\n"
  example: []
  syntax:
    content: TermGroups = 16384
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Workflows
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Workflows
  id: Workflows
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Workflows
  nameWithType: Handlers.Workflows
  fullName: PnP.Framework.Provisioning.Model.Handlers.Workflows
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Workflows
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 74
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 32768, represents Workflows\n"
  example: []
  syntax:
    content: Workflows = 32768
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SiteSecurity
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SiteSecurity
  id: SiteSecurity
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SiteSecurity
  nameWithType: Handlers.SiteSecurity
  fullName: PnP.Framework.Provisioning.Model.Handlers.SiteSecurity
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteSecurity
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 78
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 65536, represents SiteSecurity\n"
  example: []
  syntax:
    content: SiteSecurity = 65536
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.ContentTypes
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.ContentTypes
  id: ContentTypes
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: ContentTypes
  nameWithType: Handlers.ContentTypes
  fullName: PnP.Framework.Provisioning.Model.Handlers.ContentTypes
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ContentTypes
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 82
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 131072, represents ContentTypes\n"
  example: []
  syntax:
    content: ContentTypes = 131072
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.PropertyBagEntries
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.PropertyBagEntries
  id: PropertyBagEntries
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: PropertyBagEntries
  nameWithType: Handlers.PropertyBagEntries
  fullName: PnP.Framework.Provisioning.Model.Handlers.PropertyBagEntries
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PropertyBagEntries
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 86
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 262144, represents PropertyBagEntries\n"
  example: []
  syntax:
    content: PropertyBagEntries = 262144
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.PageContents
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.PageContents
  id: PageContents
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: PageContents
  nameWithType: Handlers.PageContents
  fullName: PnP.Framework.Provisioning.Model.Handlers.PageContents
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PageContents
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 90
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 524288, represents PageContents\n"
  example: []
  syntax:
    content: PageContents = 524288
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.WebSettings
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.WebSettings
  id: WebSettings
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: WebSettings
  nameWithType: Handlers.WebSettings
  fullName: PnP.Framework.Provisioning.Model.Handlers.WebSettings
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: WebSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 94
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 1048576, represents WebSettings\n"
  example: []
  syntax:
    content: WebSettings = 1048576
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Navigation
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Navigation
  id: Navigation
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Navigation
  nameWithType: Handlers.Navigation
  fullName: PnP.Framework.Provisioning.Model.Handlers.Navigation
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Navigation
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 98
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 2097152, represents Navigation\n"
  example: []
  syntax:
    content: Navigation = 2097152
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.ImageRenditions
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.ImageRenditions
  id: ImageRenditions
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: ImageRenditions
  nameWithType: Handlers.ImageRenditions
  fullName: PnP.Framework.Provisioning.Model.Handlers.ImageRenditions
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ImageRenditions
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 102
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 4194304, represents Image Renditions\n"
  example: []
  syntax:
    content: ImageRenditions = 4194304
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.ApplicationLifecycleManagement
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.ApplicationLifecycleManagement
  id: ApplicationLifecycleManagement
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: ApplicationLifecycleManagement
  nameWithType: Handlers.ApplicationLifecycleManagement
  fullName: PnP.Framework.Provisioning.Model.Handlers.ApplicationLifecycleManagement
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ApplicationLifecycleManagement
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 106
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 8388608, represents Application Lifecycle Management\n"
  example: []
  syntax:
    content: ApplicationLifecycleManagement = 8388608
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Tenant
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Tenant
  id: Tenant
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Tenant
  nameWithType: Handlers.Tenant
  fullName: PnP.Framework.Provisioning.Model.Handlers.Tenant
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Tenant
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 110
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 16777216, represents Tenant\n"
  example: []
  syntax:
    content: Tenant = 16777216
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.WebApiPermissions
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.WebApiPermissions
  id: WebApiPermissions
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: WebApiPermissions
  nameWithType: Handlers.WebApiPermissions
  fullName: PnP.Framework.Provisioning.Model.Handlers.WebApiPermissions
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: WebApiPermissions
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 114
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 33554432, represents Web API Permissions\n"
  example: []
  syntax:
    content: WebApiPermissions = 33554432
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SiteHeader
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SiteHeader
  id: SiteHeader
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SiteHeader
  nameWithType: Handlers.SiteHeader
  fullName: PnP.Framework.Provisioning.Model.Handlers.SiteHeader
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteHeader
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 118
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 67108864, represents Site Header\n"
  example: []
  syntax:
    content: SiteHeader = 67108864
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SiteFooter
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SiteFooter
  id: SiteFooter
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SiteFooter
  nameWithType: Handlers.SiteFooter
  fullName: PnP.Framework.Provisioning.Model.Handlers.SiteFooter
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteFooter
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 122
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 134217728, represents Site Footer\n"
  example: []
  syntax:
    content: SiteFooter = 134217728
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.Theme
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.Theme
  id: Theme
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: Theme
  nameWithType: Handlers.Theme
  fullName: PnP.Framework.Provisioning.Model.Handlers.Theme
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Theme
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 126
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 268435456, represents Theme\n"
  example: []
  syntax:
    content: Theme = 268435456
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SiteSettings
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SiteSettings
  id: SiteSettings
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SiteSettings
  nameWithType: Handlers.SiteSettings
  fullName: PnP.Framework.Provisioning.Model.Handlers.SiteSettings
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 130
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 536870912, represents SiteSettings\n"
  example: []
  syntax:
    content: SiteSettings = 536870912
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.SyntexModels
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.SyntexModels
  id: SyntexModels
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: SyntexModels
  nameWithType: Handlers.SyntexModels
  fullName: PnP.Framework.Provisioning.Model.Handlers.SyntexModels
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SyntexModels
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 134
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nValue 1073741824 represents Syntex models\n"
  example: []
  syntax:
    content: SyntexModels = 1073741824
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.Handlers.All
  commentId: F:PnP.Framework.Provisioning.Model.Handlers.All
  id: All
  parent: PnP.Framework.Provisioning.Model.Handlers
  langs:
  - csharp
  - vb
  name: All
  nameWithType: Handlers.All
  fullName: PnP.Framework.Provisioning.Model.Handlers.All
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: All
    path: ../src/lib/PnP.Framework/Provisioning/Model/Handlers.cs
    startLine: 138
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nTakes all handlers\n"
  example: []
  syntax:
    content: All = 2147483647
    return:
      type: PnP.Framework.Provisioning.Model.Handlers
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Enum.System.EnumerationExtensions.Include``1({T})
  commentId: M:System.EnumerationExtensions.Include``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Include``1(System.Enum,``0)
  name: Include<T>(T)
  nameWithType: EnumerationExtensions.Include<T>(T)
  fullName: System.EnumerationExtensions.Include<T>(T)
  nameWithType.vb: EnumerationExtensions.Include(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Include(Of T)(T)
  name.vb: Include(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Include``1(``0)
    name: Include<T>
    nameWithType: EnumerationExtensions.Include<T>
    fullName: System.EnumerationExtensions.Include<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Include``1(``0)
    name: Include(Of T)
    nameWithType: EnumerationExtensions.Include(Of T)
    fullName: System.EnumerationExtensions.Include(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Remove``1({T})
  commentId: M:System.EnumerationExtensions.Remove``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Remove``1(System.Enum,``0)
  name: Remove<T>(T)
  nameWithType: EnumerationExtensions.Remove<T>(T)
  fullName: System.EnumerationExtensions.Remove<T>(T)
  nameWithType.vb: EnumerationExtensions.Remove(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Remove(Of T)(T)
  name.vb: Remove(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Remove``1(``0)
    name: Remove<T>
    nameWithType: EnumerationExtensions.Remove<T>
    fullName: System.EnumerationExtensions.Remove<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Remove``1(``0)
    name: Remove(Of T)
    nameWithType: EnumerationExtensions.Remove(Of T)
    fullName: System.EnumerationExtensions.Remove(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Has``1({T})
  commentId: M:System.EnumerationExtensions.Has``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Has``1(System.Enum,``0)
  name: Has<T>(T)
  nameWithType: EnumerationExtensions.Has<T>(T)
  fullName: System.EnumerationExtensions.Has<T>(T)
  nameWithType.vb: EnumerationExtensions.Has(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Has(Of T)(T)
  name.vb: Has(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Has``1(``0)
    name: Has<T>
    nameWithType: EnumerationExtensions.Has<T>
    fullName: System.EnumerationExtensions.Has<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Has``1(``0)
    name: Has(Of T)
    nameWithType: EnumerationExtensions.Has(Of T)
    fullName: System.EnumerationExtensions.Has(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Missing``1({T})
  commentId: M:System.EnumerationExtensions.Missing``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Missing``1(System.Enum,``0)
  name: Missing<T>(T)
  nameWithType: EnumerationExtensions.Missing<T>(T)
  fullName: System.EnumerationExtensions.Missing<T>(T)
  nameWithType.vb: EnumerationExtensions.Missing(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Missing(Of T)(T)
  name.vb: Missing(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Missing``1(``0)
    name: Missing<T>
    nameWithType: EnumerationExtensions.Missing<T>
    fullName: System.EnumerationExtensions.Missing<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Missing``1(``0)
    name: Missing(Of T)
    nameWithType: EnumerationExtensions.Missing(Of T)
    fullName: System.EnumerationExtensions.Missing(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Handlers.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<Handlers>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Handlers>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Handlers>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of Handlers)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Handlers)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of Handlers)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<Handlers>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Handlers>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Handlers>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of Handlers)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of Handlers)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Handlers)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Handlers.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Handlers,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<Handlers, T>(Expression<Func<Handlers, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<Handlers, T>(Expression<Func<Handlers, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Handlers, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.Handlers, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of Handlers, T)(Expression(Of Func(Of Handlers, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Handlers, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.Handlers, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of Handlers, T)(Expression(Of Func(Of Handlers, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<Handlers, T>
    nameWithType: ObjectExtensions.Set<Handlers, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Handlers, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Handlers
    name: Handlers
    nameWithType: Handlers
    fullName: PnP.Framework.Provisioning.Model.Handlers
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of Handlers, T)
    nameWithType: ObjectExtensions.Set(Of Handlers, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Handlers, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Handlers
    name: Handlers
    nameWithType: Handlers
    fullName: PnP.Framework.Provisioning.Model.Handlers
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Include``1(System.Enum,``0)
  isExternal: true
  name: Include<T>(Enum, T)
  nameWithType: EnumerationExtensions.Include<T>(Enum, T)
  fullName: System.EnumerationExtensions.Include<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Include(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Include(Of T)(System.Enum, T)
  name.vb: Include(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
    name: Include<T>
    nameWithType: EnumerationExtensions.Include<T>
    fullName: System.EnumerationExtensions.Include<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
    name: Include(Of T)
    nameWithType: EnumerationExtensions.Include(Of T)
    fullName: System.EnumerationExtensions.Include(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions
  commentId: T:System.EnumerationExtensions
  parent: System
  name: EnumerationExtensions
  nameWithType: EnumerationExtensions
  fullName: System.EnumerationExtensions
- uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Remove``1(System.Enum,``0)
  isExternal: true
  name: Remove<T>(Enum, T)
  nameWithType: EnumerationExtensions.Remove<T>(Enum, T)
  fullName: System.EnumerationExtensions.Remove<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Remove(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Remove(Of T)(System.Enum, T)
  name.vb: Remove(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
    name: Remove<T>
    nameWithType: EnumerationExtensions.Remove<T>
    fullName: System.EnumerationExtensions.Remove<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
    name: Remove(Of T)
    nameWithType: EnumerationExtensions.Remove(Of T)
    fullName: System.EnumerationExtensions.Remove(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Has``1(System.Enum,``0)
  isExternal: true
  name: Has<T>(Enum, T)
  nameWithType: EnumerationExtensions.Has<T>(Enum, T)
  fullName: System.EnumerationExtensions.Has<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Has(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Has(Of T)(System.Enum, T)
  name.vb: Has(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
    name: Has<T>
    nameWithType: EnumerationExtensions.Has<T>
    fullName: System.EnumerationExtensions.Has<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
    name: Has(Of T)
    nameWithType: EnumerationExtensions.Has(Of T)
    fullName: System.EnumerationExtensions.Has(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Missing``1(System.Enum,``0)
  isExternal: true
  name: Missing<T>(Enum, T)
  nameWithType: EnumerationExtensions.Missing<T>(Enum, T)
  fullName: System.EnumerationExtensions.Missing<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Missing(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Missing(Of T)(System.Enum, T)
  name.vb: Missing(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
    name: Missing<T>
    nameWithType: EnumerationExtensions.Missing<T>
    fullName: System.EnumerationExtensions.Missing<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
    name: Missing(Of T)
    nameWithType: EnumerationExtensions.Missing(Of T)
    fullName: System.EnumerationExtensions.Missing(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.Handlers
  commentId: T:PnP.Framework.Provisioning.Model.Handlers
  parent: PnP.Framework.Provisioning.Model
  name: Handlers
  nameWithType: Handlers
  fullName: PnP.Framework.Provisioning.Model.Handlers

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.Publishing
  commentId: T:PnP.Framework.Provisioning.Model.Publishing
  id: Publishing
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.Publishing.#ctor
  - PnP.Framework.Provisioning.Model.Publishing.#ctor(PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions,PnP.Framework.Provisioning.Model.DesignPackage,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AvailableWebTemplate},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.PageLayout})
  - PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements
  - PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates
  - PnP.Framework.Provisioning.Model.Publishing.DesignPackage
  - PnP.Framework.Provisioning.Model.Publishing.Equals(PnP.Framework.Provisioning.Model.Publishing)
  - PnP.Framework.Provisioning.Model.Publishing.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.Publishing.GetHashCode
  - PnP.Framework.Provisioning.Model.Publishing.ImageRenditions
  - PnP.Framework.Provisioning.Model.Publishing.PageLayouts
  langs:
  - csharp
  - vb
  name: Publishing
  nameWithType: Publishing
  fullName: PnP.Framework.Provisioning.Model.Publishing
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Publishing
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 10
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Publishing configuration to provision\n"
  example: []
  syntax:
    content: 'public class Publishing : BaseModel, IProvisioningTemplateDescendant, IEquatable<Publishing>'
    content.vb: >-
      Public Class Publishing
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of Publishing)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.Publishing}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.Publishing.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.Publishing.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Publishing,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.Publishing.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.Publishing.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: Publishing()
  nameWithType: Publishing.Publishing()
  fullName: PnP.Framework.Provisioning.Model.Publishing.Publishing()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for Publishing class\n"
  example: []
  syntax:
    content: public Publishing()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.Publishing.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Publishing.#ctor(PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions,PnP.Framework.Provisioning.Model.DesignPackage,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AvailableWebTemplate},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.PageLayout})
  commentId: M:PnP.Framework.Provisioning.Model.Publishing.#ctor(PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions,PnP.Framework.Provisioning.Model.DesignPackage,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AvailableWebTemplate},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.PageLayout})
  id: '#ctor(PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions,PnP.Framework.Provisioning.Model.DesignPackage,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AvailableWebTemplate},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.PageLayout})'
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: Publishing(AutoCheckRequirementsOptions, DesignPackage, IEnumerable<AvailableWebTemplate>, IEnumerable<PageLayout>)
  nameWithType: Publishing.Publishing(AutoCheckRequirementsOptions, DesignPackage, IEnumerable<AvailableWebTemplate>, IEnumerable<PageLayout>)
  fullName: PnP.Framework.Provisioning.Model.Publishing.Publishing(PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions, PnP.Framework.Provisioning.Model.DesignPackage, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.AvailableWebTemplate>, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.PageLayout>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 39
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for Publishing class\n"
  example: []
  syntax:
    content: public Publishing(AutoCheckRequirementsOptions autoCheckRequirements, DesignPackage designPackage = null, IEnumerable<AvailableWebTemplate> availableWebTemplates = null, IEnumerable<PageLayout> pageLayouts = null)
    parameters:
    - id: autoCheckRequirements
      type: PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions
      description: AutoCheckRequirementsOption object
    - id: designPackage
      type: PnP.Framework.Provisioning.Model.DesignPackage
      description: Design Package for publishing
    - id: availableWebTemplates
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AvailableWebTemplate}
      description: Available WebTemplates for publishing
    - id: pageLayouts
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.PageLayout}
      description: PageLayouts for publishing
    content.vb: Public Sub New(autoCheckRequirements As AutoCheckRequirementsOptions, designPackage As DesignPackage = Nothing, availableWebTemplates As IEnumerable(Of AvailableWebTemplate) = Nothing, pageLayouts As IEnumerable(Of PageLayout) = Nothing)
  overload: PnP.Framework.Provisioning.Model.Publishing.#ctor*
  nameWithType.vb: Publishing.Publishing(AutoCheckRequirementsOptions, DesignPackage, IEnumerable(Of AvailableWebTemplate), IEnumerable(Of PageLayout))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.Model.Publishing.Publishing(PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions, PnP.Framework.Provisioning.Model.DesignPackage, System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.AvailableWebTemplate), System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.PageLayout))
  name.vb: Publishing(AutoCheckRequirementsOptions, DesignPackage, IEnumerable(Of AvailableWebTemplate), IEnumerable(Of PageLayout))
- uid: PnP.Framework.Provisioning.Model.Publishing.DesignPackage
  commentId: P:PnP.Framework.Provisioning.Model.Publishing.DesignPackage
  id: DesignPackage
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: DesignPackage
  nameWithType: Publishing.DesignPackage
  fullName: PnP.Framework.Provisioning.Model.Publishing.DesignPackage
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DesignPackage
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 59
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines a Design Package to import into the current Publishing site\n"
  example: []
  syntax:
    content: public DesignPackage DesignPackage { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.DesignPackage
    content.vb: Public Property DesignPackage As DesignPackage
  overload: PnP.Framework.Provisioning.Model.Publishing.DesignPackage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates
  commentId: P:PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates
  id: AvailableWebTemplates
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: AvailableWebTemplates
  nameWithType: Publishing.AvailableWebTemplates
  fullName: PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AvailableWebTemplates
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 79
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Available Web Templates for the current Publishing site\n"
  example: []
  syntax:
    content: public AvailableWebTemplateCollection AvailableWebTemplates { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.AvailableWebTemplateCollection
    content.vb: Public ReadOnly Property AvailableWebTemplates As AvailableWebTemplateCollection
  overload: PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.Publishing.PageLayouts
  commentId: P:PnP.Framework.Provisioning.Model.Publishing.PageLayouts
  id: PageLayouts
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: PageLayouts
  nameWithType: Publishing.PageLayouts
  fullName: PnP.Framework.Provisioning.Model.Publishing.PageLayouts
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PageLayouts
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 88
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the Available Page Layouts for the current Publishing site\n"
  example: []
  syntax:
    content: public PageLayoutCollection PageLayouts { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.PageLayoutCollection
    content.vb: Public ReadOnly Property PageLayouts As PageLayoutCollection
  overload: PnP.Framework.Provisioning.Model.Publishing.PageLayouts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements
  commentId: P:PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements
  id: AutoCheckRequirements
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: AutoCheckRequirements
  nameWithType: Publishing.AutoCheckRequirements
  fullName: PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AutoCheckRequirements
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 97
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines how an engine should behave if the requirements for provisioning publishing capabilities are not satisfied by the target site \n"
  example: []
  syntax:
    content: public AutoCheckRequirementsOptions AutoCheckRequirements { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions
    content.vb: Public Property AutoCheckRequirements As AutoCheckRequirementsOptions
  overload: PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Publishing.ImageRenditions
  commentId: P:PnP.Framework.Provisioning.Model.Publishing.ImageRenditions
  id: ImageRenditions
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: ImageRenditions
  nameWithType: Publishing.ImageRenditions
  fullName: PnP.Framework.Provisioning.Model.Publishing.ImageRenditions
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ImageRenditions
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 99
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: public ImageRenditionCollection ImageRenditions { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.ImageRenditionCollection
    content.vb: Public ReadOnly Property ImageRenditions As ImageRenditionCollection
  overload: PnP.Framework.Provisioning.Model.Publishing.ImageRenditions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.Publishing.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.Publishing.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Publishing.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.Publishing.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 112
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.Publishing.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.Publishing.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.Publishing.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Publishing.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.Publishing.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 128
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with Publishing\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents Publishing
    return:
      type: System.Boolean
      description: true if the current object is equal to the Publishing
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.Publishing.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.Publishing.Equals(PnP.Framework.Provisioning.Model.Publishing)
  commentId: M:PnP.Framework.Provisioning.Model.Publishing.Equals(PnP.Framework.Provisioning.Model.Publishing)
  id: Equals(PnP.Framework.Provisioning.Model.Publishing)
  parent: PnP.Framework.Provisioning.Model.Publishing
  langs:
  - csharp
  - vb
  name: Equals(Publishing)
  nameWithType: Publishing.Equals(Publishing)
  fullName: PnP.Framework.Provisioning.Model.Publishing.Equals(PnP.Framework.Provisioning.Model.Publishing)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Publishing/Publishing.cs
    startLine: 142
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares Publishing object based on AutoCheckRequirements, AvailableWebTemplates, DesignPackage and PageLayout properties.\n"
  example: []
  syntax:
    content: public bool Equals(Publishing other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.Publishing
      description: Publishing object
    return:
      type: System.Boolean
      description: true if the Publishing object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As Publishing) As Boolean
  overload: PnP.Framework.Provisioning.Model.Publishing.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.Publishing}.Equals(PnP.Framework.Provisioning.Model.Publishing)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.Publishing}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.Publishing}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Publishing>
  nameWithType: IEquatable<Publishing>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Publishing>
  nameWithType.vb: IEquatable(Of Publishing)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.Publishing)
  name.vb: IEquatable(Of Publishing)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Publishing
    name: Publishing
    nameWithType: Publishing
    fullName: PnP.Framework.Provisioning.Model.Publishing
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Publishing
    name: Publishing
    nameWithType: Publishing
    fullName: PnP.Framework.Provisioning.Model.Publishing
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Publishing.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<Publishing>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Publishing>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Publishing>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of Publishing)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Publishing)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of Publishing)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<Publishing>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Publishing>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Publishing>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of Publishing)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of Publishing)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Publishing)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Publishing.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Publishing,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<Publishing, T>(Expression<Func<Publishing, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<Publishing, T>(Expression<Func<Publishing, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Publishing, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.Publishing, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of Publishing, T)(Expression(Of Func(Of Publishing, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Publishing, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.Publishing, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of Publishing, T)(Expression(Of Func(Of Publishing, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<Publishing, T>
    nameWithType: ObjectExtensions.Set<Publishing, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Publishing, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Publishing
    name: Publishing
    nameWithType: Publishing
    fullName: PnP.Framework.Provisioning.Model.Publishing
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of Publishing, T)
    nameWithType: ObjectExtensions.Set(Of Publishing, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Publishing, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Publishing
    name: Publishing
    nameWithType: Publishing
    fullName: PnP.Framework.Provisioning.Model.Publishing
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.Publishing.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.#ctor
  name: Publishing
  nameWithType: Publishing.Publishing
  fullName: PnP.Framework.Provisioning.Model.Publishing.Publishing
- uid: PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions
  commentId: T:PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions
  parent: PnP.Framework.Provisioning.Model
  name: AutoCheckRequirementsOptions
  nameWithType: AutoCheckRequirementsOptions
  fullName: PnP.Framework.Provisioning.Model.AutoCheckRequirementsOptions
- uid: PnP.Framework.Provisioning.Model.DesignPackage
  commentId: T:PnP.Framework.Provisioning.Model.DesignPackage
  parent: PnP.Framework.Provisioning.Model
  name: DesignPackage
  nameWithType: DesignPackage
  fullName: PnP.Framework.Provisioning.Model.DesignPackage
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AvailableWebTemplate}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.AvailableWebTemplate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AvailableWebTemplate>
  nameWithType: IEnumerable<AvailableWebTemplate>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.AvailableWebTemplate>
  nameWithType.vb: IEnumerable(Of AvailableWebTemplate)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.AvailableWebTemplate)
  name.vb: IEnumerable(Of AvailableWebTemplate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.AvailableWebTemplate
    name: AvailableWebTemplate
    nameWithType: AvailableWebTemplate
    fullName: PnP.Framework.Provisioning.Model.AvailableWebTemplate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.AvailableWebTemplate
    name: AvailableWebTemplate
    nameWithType: AvailableWebTemplate
    fullName: PnP.Framework.Provisioning.Model.AvailableWebTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.PageLayout}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.PageLayout}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PageLayout>
  nameWithType: IEnumerable<PageLayout>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.PageLayout>
  nameWithType.vb: IEnumerable(Of PageLayout)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.PageLayout)
  name.vb: IEnumerable(Of PageLayout)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.PageLayout
    name: PageLayout
    nameWithType: PageLayout
    fullName: PnP.Framework.Provisioning.Model.PageLayout
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.PageLayout
    name: PageLayout
    nameWithType: PageLayout
    fullName: PnP.Framework.Provisioning.Model.PageLayout
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Provisioning.Model.Publishing.DesignPackage*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.DesignPackage
  name: DesignPackage
  nameWithType: Publishing.DesignPackage
  fullName: PnP.Framework.Provisioning.Model.Publishing.DesignPackage
- uid: PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates
  name: AvailableWebTemplates
  nameWithType: Publishing.AvailableWebTemplates
  fullName: PnP.Framework.Provisioning.Model.Publishing.AvailableWebTemplates
- uid: PnP.Framework.Provisioning.Model.AvailableWebTemplateCollection
  commentId: T:PnP.Framework.Provisioning.Model.AvailableWebTemplateCollection
  parent: PnP.Framework.Provisioning.Model
  name: AvailableWebTemplateCollection
  nameWithType: AvailableWebTemplateCollection
  fullName: PnP.Framework.Provisioning.Model.AvailableWebTemplateCollection
- uid: PnP.Framework.Provisioning.Model.Publishing.PageLayouts*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.PageLayouts
  name: PageLayouts
  nameWithType: Publishing.PageLayouts
  fullName: PnP.Framework.Provisioning.Model.Publishing.PageLayouts
- uid: PnP.Framework.Provisioning.Model.PageLayoutCollection
  commentId: T:PnP.Framework.Provisioning.Model.PageLayoutCollection
  parent: PnP.Framework.Provisioning.Model
  name: PageLayoutCollection
  nameWithType: PageLayoutCollection
  fullName: PnP.Framework.Provisioning.Model.PageLayoutCollection
- uid: PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements
  name: AutoCheckRequirements
  nameWithType: Publishing.AutoCheckRequirements
  fullName: PnP.Framework.Provisioning.Model.Publishing.AutoCheckRequirements
- uid: PnP.Framework.Provisioning.Model.Publishing.ImageRenditions*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.ImageRenditions
  name: ImageRenditions
  nameWithType: Publishing.ImageRenditions
  fullName: PnP.Framework.Provisioning.Model.Publishing.ImageRenditions
- uid: PnP.Framework.Provisioning.Model.ImageRenditionCollection
  commentId: T:PnP.Framework.Provisioning.Model.ImageRenditionCollection
  parent: PnP.Framework.Provisioning.Model
  name: ImageRenditionCollection
  nameWithType: ImageRenditionCollection
  fullName: PnP.Framework.Provisioning.Model.ImageRenditionCollection
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Publishing.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.GetHashCode
  name: GetHashCode
  nameWithType: Publishing.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.Publishing.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Publishing.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.Publishing.Equals
  name: Equals
  nameWithType: Publishing.Equals
  fullName: PnP.Framework.Provisioning.Model.Publishing.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.Publishing}.Equals(PnP.Framework.Provisioning.Model.Publishing)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.Publishing}.Equals(PnP.Framework.Provisioning.Model.Publishing)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.Publishing}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Publishing)
  nameWithType: IEquatable<Publishing>.Equals(Publishing)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Publishing>.Equals(PnP.Framework.Provisioning.Model.Publishing)
  nameWithType.vb: IEquatable(Of Publishing).Equals(Publishing)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.Publishing).Equals(PnP.Framework.Provisioning.Model.Publishing)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Publishing>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Publishing>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Publishing
    name: Publishing
    nameWithType: Publishing
    fullName: PnP.Framework.Provisioning.Model.Publishing
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Publishing).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.Publishing).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Publishing
    name: Publishing
    nameWithType: Publishing
    fullName: PnP.Framework.Provisioning.Model.Publishing
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Publishing
  commentId: T:PnP.Framework.Provisioning.Model.Publishing
  parent: PnP.Framework.Provisioning.Model
  name: Publishing
  nameWithType: Publishing
  fullName: PnP.Framework.Provisioning.Model.Publishing
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

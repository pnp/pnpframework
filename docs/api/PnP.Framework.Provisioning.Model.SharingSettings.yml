### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.SharingSettings
  commentId: T:PnP.Framework.Provisioning.Model.SharingSettings
  id: SharingSettings
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.SharingSettings.#ctor
  - PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList
  - PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList
  - PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType
  - PnP.Framework.Provisioning.Model.SharingSettings.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  - PnP.Framework.Provisioning.Model.SharingSettings.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType
  - PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType
  - PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode
  - PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing
  - PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount
  - PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays
  - PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability
  - PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode
  langs:
  - csharp
  - vb
  name: SharingSettings
  nameWithType: SharingSettings
  fullName: PnP.Framework.Provisioning.Model.SharingSettings
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SharingSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 10
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines a SharingSettings object\n"
  example: []
  syntax:
    content: 'public class SharingSettings : BaseModel, IProvisioningTemplateDescendant, IEquatable<SharingSettings>'
    content.vb: >-
      Public Class SharingSettings
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of SharingSettings)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.SharingSettings}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.SharingSettings.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.SharingSettings.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.SharingSettings,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability
  id: SharingCapability
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: SharingCapability
  nameWithType: SharingSettings.SharingCapability
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SharingCapability
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 17
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConfigures the sharing capability for the tenant\n"
  example: []
  syntax:
    content: public SharingCapability SharingCapability { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.SharingCapability
    content.vb: Public Property SharingCapability As SharingCapability
  overload: PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays
  id: RequireAnonymousLinksExpireInDays
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: RequireAnonymousLinksExpireInDays
  nameWithType: SharingSettings.RequireAnonymousLinksExpireInDays
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RequireAnonymousLinksExpireInDays
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nNumber of days before expiration of anonymous sharing links\n"
  example: []
  syntax:
    content: public int RequireAnonymousLinksExpireInDays { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RequireAnonymousLinksExpireInDays As Integer
  overload: PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType
  id: FileAnonymousLinkType
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: FileAnonymousLinkType
  nameWithType: SharingSettings.FileAnonymousLinkType
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FileAnonymousLinkType
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 27
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the permissions for anonymous links for files\n"
  example: []
  syntax:
    content: public AnonymousLinkType FileAnonymousLinkType { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.AnonymousLinkType
    content.vb: Public Property FileAnonymousLinkType As AnonymousLinkType
  overload: PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType
  id: FolderAnonymousLinkType
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: FolderAnonymousLinkType
  nameWithType: SharingSettings.FolderAnonymousLinkType
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FolderAnonymousLinkType
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 32
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the permissions for anonymous links for folders\n"
  example: []
  syntax:
    content: public AnonymousLinkType FolderAnonymousLinkType { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.AnonymousLinkType
    content.vb: Public Property FolderAnonymousLinkType As AnonymousLinkType
  overload: PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType
  id: DefaultSharingLinkType
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: DefaultSharingLinkType
  nameWithType: SharingSettings.DefaultSharingLinkType
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DefaultSharingLinkType
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 37
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines the default type of a sharing link\n"
  example: []
  syntax:
    content: public SharingLinkType DefaultSharingLinkType { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.SharingLinkType
    content.vb: Public Property DefaultSharingLinkType As SharingLinkType
  overload: PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing
  id: PreventExternalUsersFromResharing
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: PreventExternalUsersFromResharing
  nameWithType: SharingSettings.PreventExternalUsersFromResharing
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PreventExternalUsersFromResharing
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 42
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether external users are allowed to reshare the content\n"
  example: []
  syntax:
    content: public bool PreventExternalUsersFromResharing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreventExternalUsersFromResharing As Boolean
  overload: PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount
  id: RequireAcceptingAccountMatchInvitedAccount
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: RequireAcceptingAccountMatchInvitedAccount
  nameWithType: SharingSettings.RequireAcceptingAccountMatchInvitedAccount
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RequireAcceptingAccountMatchInvitedAccount
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 47
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether invited external users need to use the same account used as the target for the invite\n"
  example: []
  syntax:
    content: public bool RequireAcceptingAccountMatchInvitedAccount { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireAcceptingAccountMatchInvitedAccount As Boolean
  overload: PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode
  id: SharingDomainRestrictionMode
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: SharingDomainRestrictionMode
  nameWithType: SharingSettings.SharingDomainRestrictionMode
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SharingDomainRestrictionMode
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 52
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines domains restrictions for sharing\n"
  example: []
  syntax:
    content: public SharingDomainRestrictionMode SharingDomainRestrictionMode { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.SharingDomainRestrictionMode
    content.vb: Public Property SharingDomainRestrictionMode As SharingDomainRestrictionMode
  overload: PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList
  id: AllowedDomainList
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: AllowedDomainList
  nameWithType: SharingSettings.AllowedDomainList
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AllowedDomainList
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 57
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines a comma separated list of allowed domains for sharing. It is considered if and only if SharingDomainRestrictionMode=AllowList.\n"
  example: []
  syntax:
    content: public List<string> AllowedDomainList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property AllowedDomainList As List(Of String)
  overload: PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList
  commentId: P:PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList
  id: BlockedDomainList
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: BlockedDomainList
  nameWithType: SharingSettings.BlockedDomainList
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BlockedDomainList
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 62
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines a comma separated list of blocked domains for sharing. It is considered if and only if SharingDomainRestrictionMode=BlockList.\n"
  example: []
  syntax:
    content: public List<string> BlockedDomainList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property BlockedDomainList As List(Of String)
  overload: PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SharingSettings.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.SharingSettings.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: SharingSettings()
  nameWithType: SharingSettings.SharingSettings()
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.SharingSettings()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 68
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: public SharingSettings()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.SharingSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SharingSettings.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 80
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.SharingSettings.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.SharingSettings.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SharingSettings.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 101
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with SharingSettings class\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents SharingSettings
    return:
      type: System.Boolean
      description: Checks whether object is SharingSettings class
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.SharingSettings.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.SharingSettings.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  commentId: M:PnP.Framework.Provisioning.Model.SharingSettings.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  id: Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  parent: PnP.Framework.Provisioning.Model.SharingSettings
  langs:
  - csharp
  - vb
  name: Equals(SharingSettings)
  nameWithType: SharingSettings.Equals(SharingSettings)
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/TenantSettings/SharingSettings.cs
    startLine: 118
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares SharingSettings object based on SharingCapability, RequireAnonymousLinksExpireInDays,\nFileAnonymousLinkType, FolderAnonymousLinkType, DefaultSharingLinkType, PreventExternalUsersFromResharing\nRequireAcceptingAccountMatchInvitedAccount, SharingDomainRestrictionMode, AllowedDomainList,\nand BlockedDomainList\n"
  example: []
  syntax:
    content: public bool Equals(SharingSettings other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.SharingSettings
      description: SharingSettings Class object
    return:
      type: System.Boolean
      description: true if the SharingSettings object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As SharingSettings) As Boolean
  overload: PnP.Framework.Provisioning.Model.SharingSettings.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.SharingSettings}.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.SharingSettings}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.SharingSettings}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SharingSettings>
  nameWithType: IEquatable<SharingSettings>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.SharingSettings>
  nameWithType.vb: IEquatable(Of SharingSettings)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.SharingSettings)
  name.vb: IEquatable(Of SharingSettings)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.SharingSettings
    name: SharingSettings
    nameWithType: SharingSettings
    fullName: PnP.Framework.Provisioning.Model.SharingSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.SharingSettings
    name: SharingSettings
    nameWithType: SharingSettings
    fullName: PnP.Framework.Provisioning.Model.SharingSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SharingSettings.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<SharingSettings>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SharingSettings>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.SharingSettings>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of SharingSettings)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.SharingSettings)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of SharingSettings)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<SharingSettings>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SharingSettings>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.SharingSettings>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of SharingSettings)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of SharingSettings)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.SharingSettings)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SharingSettings.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.SharingSettings,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<SharingSettings, T>(Expression<Func<SharingSettings, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<SharingSettings, T>(Expression<Func<SharingSettings, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.SharingSettings, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.SharingSettings, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of SharingSettings, T)(Expression(Of Func(Of SharingSettings, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.SharingSettings, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.SharingSettings, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of SharingSettings, T)(Expression(Of Func(Of SharingSettings, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<SharingSettings, T>
    nameWithType: ObjectExtensions.Set<SharingSettings, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.SharingSettings, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.SharingSettings
    name: SharingSettings
    nameWithType: SharingSettings
    fullName: PnP.Framework.Provisioning.Model.SharingSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of SharingSettings, T)
    nameWithType: ObjectExtensions.Set(Of SharingSettings, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.SharingSettings, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.SharingSettings
    name: SharingSettings
    nameWithType: SharingSettings
    fullName: PnP.Framework.Provisioning.Model.SharingSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability
  name: SharingCapability
  nameWithType: SharingSettings.SharingCapability
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.SharingCapability
- uid: PnP.Framework.Provisioning.Model.SharingCapability
  commentId: T:PnP.Framework.Provisioning.Model.SharingCapability
  parent: PnP.Framework.Provisioning.Model
  name: SharingCapability
  nameWithType: SharingCapability
  fullName: PnP.Framework.Provisioning.Model.SharingCapability
- uid: PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays
  name: RequireAnonymousLinksExpireInDays
  nameWithType: SharingSettings.RequireAnonymousLinksExpireInDays
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.RequireAnonymousLinksExpireInDays
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType
  name: FileAnonymousLinkType
  nameWithType: SharingSettings.FileAnonymousLinkType
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.FileAnonymousLinkType
- uid: PnP.Framework.Provisioning.Model.AnonymousLinkType
  commentId: T:PnP.Framework.Provisioning.Model.AnonymousLinkType
  parent: PnP.Framework.Provisioning.Model
  name: AnonymousLinkType
  nameWithType: AnonymousLinkType
  fullName: PnP.Framework.Provisioning.Model.AnonymousLinkType
- uid: PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType
  name: FolderAnonymousLinkType
  nameWithType: SharingSettings.FolderAnonymousLinkType
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.FolderAnonymousLinkType
- uid: PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType
  name: DefaultSharingLinkType
  nameWithType: SharingSettings.DefaultSharingLinkType
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.DefaultSharingLinkType
- uid: PnP.Framework.Provisioning.Model.SharingLinkType
  commentId: T:PnP.Framework.Provisioning.Model.SharingLinkType
  parent: PnP.Framework.Provisioning.Model
  name: SharingLinkType
  nameWithType: SharingLinkType
  fullName: PnP.Framework.Provisioning.Model.SharingLinkType
- uid: PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing
  name: PreventExternalUsersFromResharing
  nameWithType: SharingSettings.PreventExternalUsersFromResharing
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.PreventExternalUsersFromResharing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount
  name: RequireAcceptingAccountMatchInvitedAccount
  nameWithType: SharingSettings.RequireAcceptingAccountMatchInvitedAccount
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.RequireAcceptingAccountMatchInvitedAccount
- uid: PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode
  name: SharingDomainRestrictionMode
  nameWithType: SharingSettings.SharingDomainRestrictionMode
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.SharingDomainRestrictionMode
- uid: PnP.Framework.Provisioning.Model.SharingDomainRestrictionMode
  commentId: T:PnP.Framework.Provisioning.Model.SharingDomainRestrictionMode
  parent: PnP.Framework.Provisioning.Model
  name: SharingDomainRestrictionMode
  nameWithType: SharingDomainRestrictionMode
  fullName: PnP.Framework.Provisioning.Model.SharingDomainRestrictionMode
- uid: PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList
  name: AllowedDomainList
  nameWithType: SharingSettings.AllowedDomainList
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.AllowedDomainList
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList
  name: BlockedDomainList
  nameWithType: SharingSettings.BlockedDomainList
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.BlockedDomainList
- uid: PnP.Framework.Provisioning.Model.SharingSettings.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.#ctor
  name: SharingSettings
  nameWithType: SharingSettings.SharingSettings
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.SharingSettings
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode
  name: GetHashCode
  nameWithType: SharingSettings.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.GetHashCode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SharingSettings.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.SharingSettings.Equals
  name: Equals
  nameWithType: SharingSettings.Equals
  fullName: PnP.Framework.Provisioning.Model.SharingSettings.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.SharingSettings}.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.SharingSettings}.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.SharingSettings}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SharingSettings)
  nameWithType: IEquatable<SharingSettings>.Equals(SharingSettings)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.SharingSettings>.Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  nameWithType.vb: IEquatable(Of SharingSettings).Equals(SharingSettings)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.SharingSettings).Equals(PnP.Framework.Provisioning.Model.SharingSettings)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SharingSettings>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.SharingSettings>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.SharingSettings
    name: SharingSettings
    nameWithType: SharingSettings
    fullName: PnP.Framework.Provisioning.Model.SharingSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SharingSettings).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.SharingSettings).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.SharingSettings
    name: SharingSettings
    nameWithType: SharingSettings
    fullName: PnP.Framework.Provisioning.Model.SharingSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SharingSettings
  commentId: T:PnP.Framework.Provisioning.Model.SharingSettings
  parent: PnP.Framework.Provisioning.Model
  name: SharingSettings
  nameWithType: SharingSettings
  fullName: PnP.Framework.Provisioning.Model.SharingSettings
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.SiteSecurity
  commentId: T:PnP.Framework.Provisioning.Model.SiteSecurity
  id: SiteSecurity
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.SiteSecurity.#ctor
  - PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators
  - PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers
  - PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners
  - PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors
  - PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups
  - PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup
  - PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup
  - PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup
  - PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance
  - PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators
  - PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers
  - PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners
  - PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors
  - PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes
  - PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments
  - PnP.Framework.Provisioning.Model.SiteSecurity.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  - PnP.Framework.Provisioning.Model.SiteSecurity.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode
  - PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments
  - PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance
  - PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups
  - PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions
  langs:
  - csharp
  - vb
  name: SiteSecurity
  nameWithType: SiteSecurity
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteSecurity
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDomain Object that is used in the site template\n"
  example: []
  syntax:
    content: 'public class SiteSecurity : BaseModel, IProvisioningTemplateDescendant, IEquatable<SiteSecurity>'
    content.vb: >-
      Public Class SiteSecurity
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of SiteSecurity)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.SiteSecurity}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.SiteSecurity.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.SiteSecurity.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.SiteSecurity,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.SiteSecurity.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: SiteSecurity()
  nameWithType: SiteSecurity.SiteSecurity()
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurity()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 26
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for SiteSecurity class\n"
  example: []
  syntax:
    content: public SiteSecurity()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators
  id: AdditionalAdministrators
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AdditionalAdministrators
  nameWithType: SiteSecurity.AdditionalAdministrators
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AdditionalAdministrators
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 42
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nA Collection of users that are associated as site collection adminsitrators\n"
  example: []
  syntax:
    content: public UserCollection AdditionalAdministrators { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.UserCollection
    content.vb: Public ReadOnly Property AdditionalAdministrators As UserCollection
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators
  id: ClearExistingAdministrators
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: ClearExistingAdministrators
  nameWithType: SiteSecurity.ClearExistingAdministrators
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearExistingAdministrators
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 51
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether to clear existing administrators before adding new ones\n"
  example: []
  syntax:
    content: public bool ClearExistingAdministrators { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClearExistingAdministrators As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners
  id: AdditionalOwners
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AdditionalOwners
  nameWithType: SiteSecurity.AdditionalOwners
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AdditionalOwners
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 56
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nA Collection of users that are associated to the sites owners group\n"
  example: []
  syntax:
    content: public UserCollection AdditionalOwners { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.UserCollection
    content.vb: Public ReadOnly Property AdditionalOwners As UserCollection
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners
  id: ClearExistingOwners
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: ClearExistingOwners
  nameWithType: SiteSecurity.ClearExistingOwners
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearExistingOwners
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 65
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether to clear existing owners before adding new ones\n"
  example: []
  syntax:
    content: public bool ClearExistingOwners { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClearExistingOwners As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers
  id: AdditionalMembers
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AdditionalMembers
  nameWithType: SiteSecurity.AdditionalMembers
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AdditionalMembers
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 70
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nA Collection of users that are associated to the sites members group\n"
  example: []
  syntax:
    content: public UserCollection AdditionalMembers { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.UserCollection
    content.vb: Public ReadOnly Property AdditionalMembers As UserCollection
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers
  id: ClearExistingMembers
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: ClearExistingMembers
  nameWithType: SiteSecurity.ClearExistingMembers
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearExistingMembers
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 79
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether to clear existing members before adding new ones\n"
  example: []
  syntax:
    content: public bool ClearExistingMembers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClearExistingMembers As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors
  id: AdditionalVisitors
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AdditionalVisitors
  nameWithType: SiteSecurity.AdditionalVisitors
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AdditionalVisitors
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 84
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nA Collection of users taht are associated to the sites visitors group\n"
  example: []
  syntax:
    content: public UserCollection AdditionalVisitors { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.UserCollection
    content.vb: Public ReadOnly Property AdditionalVisitors As UserCollection
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors
  id: ClearExistingVisitors
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: ClearExistingVisitors
  nameWithType: SiteSecurity.ClearExistingVisitors
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearExistingVisitors
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 93
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether to clear existing visitors before adding new ones\n"
  example: []
  syntax:
    content: public bool ClearExistingVisitors { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClearExistingVisitors As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups
  id: SiteGroups
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: SiteGroups
  nameWithType: SiteSecurity.SiteGroups
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteGroups
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 98
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nList of additional Groups for the Site\n"
  example: []
  syntax:
    content: public SiteGroupCollection SiteGroups { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.SiteGroupCollection
    content.vb: Public ReadOnly Property SiteGroups As SiteGroupCollection
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions
  id: SiteSecurityPermissions
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: SiteSecurityPermissions
  nameWithType: SiteSecurity.SiteSecurityPermissions
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteSecurityPermissions
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 107
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nList of Site Security Permissions for the Site\n"
  example: []
  syntax:
    content: public SiteSecurityPermissions SiteSecurityPermissions { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.SiteSecurityPermissions
    content.vb: Public ReadOnly Property SiteSecurityPermissions As SiteSecurityPermissions
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance
  id: BreakRoleInheritance
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: BreakRoleInheritance
  nameWithType: SiteSecurity.BreakRoleInheritance
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BreakRoleInheritance
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 127
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether the to break role inheritance for the site, if it is a sub-site\n"
  example: []
  syntax:
    content: public bool BreakRoleInheritance { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property BreakRoleInheritance As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance
  id: ResetRoleInheritance
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: ResetRoleInheritance
  nameWithType: SiteSecurity.ResetRoleInheritance
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResetRoleInheritance
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 132
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDeclares whether to reset the role inheritance or not for the site, if it is a sub-site\n"
  example: []
  syntax:
    content: public bool ResetRoleInheritance { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResetRoleInheritance As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments
  id: CopyRoleAssignments
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: CopyRoleAssignments
  nameWithType: SiteSecurity.CopyRoleAssignments
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CopyRoleAssignments
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 137
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether to copy role assignments or not while breaking role inheritance\n"
  example: []
  syntax:
    content: public bool CopyRoleAssignments { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CopyRoleAssignments As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments
  id: RemoveExistingUniqueRoleAssignments
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: RemoveExistingUniqueRoleAssignments
  nameWithType: SiteSecurity.RemoveExistingUniqueRoleAssignments
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RemoveExistingUniqueRoleAssignments
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 142
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether to remove unique role assignments or not if the site already breaks role inheritance. If true all existing unique role assignments on the site will be removed if BreakRoleInheritance also is true.\n"
  example: []
  syntax:
    content: public bool RemoveExistingUniqueRoleAssignments { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RemoveExistingUniqueRoleAssignments As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes
  id: ClearSubscopes
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: ClearSubscopes
  nameWithType: SiteSecurity.ClearSubscopes
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearSubscopes
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 147
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nDefines whether to clear subscopes or not while breaking role inheritance for the site\n"
  example: []
  syntax:
    content: public bool ClearSubscopes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClearSubscopes As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups
  id: AssociatedGroups
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AssociatedGroups
  nameWithType: SiteSecurity.AssociatedGroups
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AssociatedGroups
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 152
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the list of groups that are associated with the Web site. Groups in this list will appear under the Groups section in the People and Groups page.\n"
  example: []
  syntax:
    content: public string AssociatedGroups { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssociatedGroups As String
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup
  id: AssociatedOwnerGroup
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AssociatedOwnerGroup
  nameWithType: SiteSecurity.AssociatedOwnerGroup
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AssociatedOwnerGroup
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 157
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the default owners group for this site. The group will automatically be added to the end of the Associated Groups list.\n"
  example: []
  syntax:
    content: public string AssociatedOwnerGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssociatedOwnerGroup As String
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup
  id: AssociatedMemberGroup
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AssociatedMemberGroup
  nameWithType: SiteSecurity.AssociatedMemberGroup
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AssociatedMemberGroup
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 162
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the default members group for this site. The group will automatically be added to the top of the Associated Groups list.\n"
  example: []
  syntax:
    content: public string AssociatedMemberGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssociatedMemberGroup As String
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup
  commentId: P:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup
  id: AssociatedVisitorGroup
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: AssociatedVisitorGroup
  nameWithType: SiteSecurity.AssociatedVisitorGroup
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AssociatedVisitorGroup
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 167
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nSpecifies the default visitors group for this site. The group will automatically be added to the end of the Associated Groups list.\n"
  example: []
  syntax:
    content: public string AssociatedVisitorGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssociatedVisitorGroup As String
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SiteSecurity.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 176
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.SiteSecurity.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SiteSecurity.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 203
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with SiteSecurity\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents SiteSecurity
    return:
      type: System.Boolean
      description: true if the current object is equal to the SiteSecurity
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  commentId: M:PnP.Framework.Provisioning.Model.SiteSecurity.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  id: Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  parent: PnP.Framework.Provisioning.Model.SiteSecurity
  langs:
  - csharp
  - vb
  name: Equals(SiteSecurity)
  nameWithType: SiteSecurity.Equals(SiteSecurity)
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Security/SiteSecurity.cs
    startLine: 218
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares SiteSecurity object based on AdditionalAdministrators, AdditionalOwners, AdditionalMembers, AdditionalVisitors, SiteGroups, \nSiteSecurityPermissions, BreakRoleInheritance, CopyRoleAssignments and ClearSubscopes properties.\n"
  example: []
  syntax:
    content: public bool Equals(SiteSecurity other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.SiteSecurity
      description: SiteSecurity object
    return:
      type: System.Boolean
      description: true if the SiteSecurity object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As SiteSecurity) As Boolean
  overload: PnP.Framework.Provisioning.Model.SiteSecurity.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.SiteSecurity}.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.SiteSecurity}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.SiteSecurity}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SiteSecurity>
  nameWithType: IEquatable<SiteSecurity>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.SiteSecurity>
  nameWithType.vb: IEquatable(Of SiteSecurity)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.SiteSecurity)
  name.vb: IEquatable(Of SiteSecurity)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.SiteSecurity
    name: SiteSecurity
    nameWithType: SiteSecurity
    fullName: PnP.Framework.Provisioning.Model.SiteSecurity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.SiteSecurity
    name: SiteSecurity
    nameWithType: SiteSecurity
    fullName: PnP.Framework.Provisioning.Model.SiteSecurity
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<SiteSecurity>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SiteSecurity>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.SiteSecurity>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of SiteSecurity)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.SiteSecurity)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of SiteSecurity)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<SiteSecurity>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SiteSecurity>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.SiteSecurity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of SiteSecurity)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of SiteSecurity)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.SiteSecurity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.SiteSecurity,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<SiteSecurity, T>(Expression<Func<SiteSecurity, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<SiteSecurity, T>(Expression<Func<SiteSecurity, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.SiteSecurity, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.SiteSecurity, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of SiteSecurity, T)(Expression(Of Func(Of SiteSecurity, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.SiteSecurity, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.SiteSecurity, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of SiteSecurity, T)(Expression(Of Func(Of SiteSecurity, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<SiteSecurity, T>
    nameWithType: ObjectExtensions.Set<SiteSecurity, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.SiteSecurity, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.SiteSecurity
    name: SiteSecurity
    nameWithType: SiteSecurity
    fullName: PnP.Framework.Provisioning.Model.SiteSecurity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of SiteSecurity, T)
    nameWithType: ObjectExtensions.Set(Of SiteSecurity, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.SiteSecurity, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.SiteSecurity
    name: SiteSecurity
    nameWithType: SiteSecurity
    fullName: PnP.Framework.Provisioning.Model.SiteSecurity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.#ctor
  name: SiteSecurity
  nameWithType: SiteSecurity.SiteSecurity
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurity
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators
  name: AdditionalAdministrators
  nameWithType: SiteSecurity.AdditionalAdministrators
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators
- uid: PnP.Framework.Provisioning.Model.UserCollection
  commentId: T:PnP.Framework.Provisioning.Model.UserCollection
  parent: PnP.Framework.Provisioning.Model
  name: UserCollection
  nameWithType: UserCollection
  fullName: PnP.Framework.Provisioning.Model.UserCollection
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators
  name: ClearExistingAdministrators
  nameWithType: SiteSecurity.ClearExistingAdministrators
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingAdministrators
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners
  name: AdditionalOwners
  nameWithType: SiteSecurity.AdditionalOwners
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners
  name: ClearExistingOwners
  nameWithType: SiteSecurity.ClearExistingOwners
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingOwners
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers
  name: AdditionalMembers
  nameWithType: SiteSecurity.AdditionalMembers
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers
  name: ClearExistingMembers
  nameWithType: SiteSecurity.ClearExistingMembers
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingMembers
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors
  name: AdditionalVisitors
  nameWithType: SiteSecurity.AdditionalVisitors
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors
  name: ClearExistingVisitors
  nameWithType: SiteSecurity.ClearExistingVisitors
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearExistingVisitors
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups
  name: SiteGroups
  nameWithType: SiteSecurity.SiteGroups
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.SiteGroups
- uid: PnP.Framework.Provisioning.Model.SiteGroupCollection
  commentId: T:PnP.Framework.Provisioning.Model.SiteGroupCollection
  parent: PnP.Framework.Provisioning.Model
  name: SiteGroupCollection
  nameWithType: SiteGroupCollection
  fullName: PnP.Framework.Provisioning.Model.SiteGroupCollection
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions
  name: SiteSecurityPermissions
  nameWithType: SiteSecurity.SiteSecurityPermissions
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.SiteSecurityPermissions
- uid: PnP.Framework.Provisioning.Model.SiteSecurityPermissions
  commentId: T:PnP.Framework.Provisioning.Model.SiteSecurityPermissions
  parent: PnP.Framework.Provisioning.Model
  name: SiteSecurityPermissions
  nameWithType: SiteSecurityPermissions
  fullName: PnP.Framework.Provisioning.Model.SiteSecurityPermissions
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance
  name: BreakRoleInheritance
  nameWithType: SiteSecurity.BreakRoleInheritance
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.BreakRoleInheritance
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance
  name: ResetRoleInheritance
  nameWithType: SiteSecurity.ResetRoleInheritance
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ResetRoleInheritance
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments
  name: CopyRoleAssignments
  nameWithType: SiteSecurity.CopyRoleAssignments
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.CopyRoleAssignments
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments
  name: RemoveExistingUniqueRoleAssignments
  nameWithType: SiteSecurity.RemoveExistingUniqueRoleAssignments
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.RemoveExistingUniqueRoleAssignments
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes
  name: ClearSubscopes
  nameWithType: SiteSecurity.ClearSubscopes
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.ClearSubscopes
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups
  name: AssociatedGroups
  nameWithType: SiteSecurity.AssociatedGroups
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedGroups
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup
  name: AssociatedOwnerGroup
  nameWithType: SiteSecurity.AssociatedOwnerGroup
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedOwnerGroup
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup
  name: AssociatedMemberGroup
  nameWithType: SiteSecurity.AssociatedMemberGroup
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedMemberGroup
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup
  name: AssociatedVisitorGroup
  nameWithType: SiteSecurity.AssociatedVisitorGroup
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.AssociatedVisitorGroup
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode
  name: GetHashCode
  nameWithType: SiteSecurity.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SiteSecurity.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.SiteSecurity.Equals
  name: Equals
  nameWithType: SiteSecurity.Equals
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.SiteSecurity}.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.SiteSecurity}.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.SiteSecurity}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SiteSecurity)
  nameWithType: IEquatable<SiteSecurity>.Equals(SiteSecurity)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.SiteSecurity>.Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  nameWithType.vb: IEquatable(Of SiteSecurity).Equals(SiteSecurity)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.SiteSecurity).Equals(PnP.Framework.Provisioning.Model.SiteSecurity)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SiteSecurity>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.SiteSecurity>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.SiteSecurity
    name: SiteSecurity
    nameWithType: SiteSecurity
    fullName: PnP.Framework.Provisioning.Model.SiteSecurity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SiteSecurity).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.SiteSecurity).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.SiteSecurity
    name: SiteSecurity
    nameWithType: SiteSecurity
    fullName: PnP.Framework.Provisioning.Model.SiteSecurity
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.SiteSecurity
  commentId: T:PnP.Framework.Provisioning.Model.SiteSecurity
  parent: PnP.Framework.Provisioning.Model
  name: SiteSecurity
  nameWithType: SiteSecurity
  fullName: PnP.Framework.Provisioning.Model.SiteSecurity
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

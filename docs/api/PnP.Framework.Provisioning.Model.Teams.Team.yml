### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.Teams.Team
  commentId: T:PnP.Framework.Provisioning.Model.Teams.Team
  id: Team
  parent: PnP.Framework.Provisioning.Model.Teams
  children:
  - PnP.Framework.Provisioning.Model.Teams.Team.#ctor
  - PnP.Framework.Provisioning.Model.Teams.Team.Apps
  - PnP.Framework.Provisioning.Model.Teams.Team.Archived
  - PnP.Framework.Provisioning.Model.Teams.Team.Channels
  - PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom
  - PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings
  - PnP.Framework.Provisioning.Model.Teams.Team.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  - PnP.Framework.Provisioning.Model.Teams.Team.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.Teams.Team.FunSettings
  - PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode
  - PnP.Framework.Provisioning.Model.Teams.Team.GroupId
  - PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings
  - PnP.Framework.Provisioning.Model.Teams.Team.MailNickname
  - PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings
  - PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings
  - PnP.Framework.Provisioning.Model.Teams.Team.Security
  - PnP.Framework.Provisioning.Model.Teams.Team.Specialization
  langs:
  - csharp
  - vb
  name: Team
  nameWithType: Team
  fullName: PnP.Framework.Provisioning.Model.Teams.Team
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Team
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 8
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDefines Team for automated provisiong/update of Microsoft Teams\n"
  example: []
  syntax:
    content: 'public class Team : BaseTeam, IProvisioningTemplateDescendant, IEquatable<BaseTeam>, IEquatable<Team>'
    content.vb: >-
      Public Class Team
          Inherits BaseTeam
          Implements IProvisioningTemplateDescendant, IEquatable(Of BaseTeam), IEquatable(Of Team)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.Teams.BaseTeam}
  - System.IEquatable{PnP.Framework.Provisioning.Model.Teams.Team}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam.DisplayName
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam.Description
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam.Classification
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam.Visibility
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam.Photo
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam.HiddenGroupMembershipEnabled
  - PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(PnP.Framework.Provisioning.Model.Teams.BaseTeam)
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.Teams.Team.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.Teams.Team.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Teams.Team,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.Teams.Team.FunSettings
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.FunSettings
  id: FunSettings
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: FunSettings
  nameWithType: Team.FunSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.FunSettings
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FunSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nThe Fun Settings for the Team\n"
  example: []
  syntax:
    content: public TeamFunSettings FunSettings { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamFunSettings
    content.vb: Public Property FunSettings As TeamFunSettings
  overload: PnP.Framework.Provisioning.Model.Teams.Team.FunSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings
  id: GuestSettings
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: GuestSettings
  nameWithType: Team.GuestSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GuestSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 20
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nThe Guest Settings for the Team\n"
  example: []
  syntax:
    content: public TeamGuestSettings GuestSettings { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamGuestSettings
    content.vb: Public Property GuestSettings As TeamGuestSettings
  overload: PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings
  id: MemberSettings
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: MemberSettings
  nameWithType: Team.MemberSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MemberSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nThe Members Settings for the Team\n"
  example: []
  syntax:
    content: public TeamMemberSettings MemberSettings { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamMemberSettings
    content.vb: Public Property MemberSettings As TeamMemberSettings
  overload: PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings
  id: MessagingSettings
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: MessagingSettings
  nameWithType: Team.MessagingSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MessagingSettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 30
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nThe Messaging Settings for the Team\n"
  example: []
  syntax:
    content: public TeamMessagingSettings MessagingSettings { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamMessagingSettings
    content.vb: Public Property MessagingSettings As TeamMessagingSettings
  overload: PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings
  id: DiscoverySettings
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: DiscoverySettings
  nameWithType: Team.DiscoverySettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DiscoverySettings
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 35
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nThe Discovery Settings for the Team\n"
  example: []
  syntax:
    content: public TeamDiscoverySettings DiscoverySettings { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamDiscoverySettings
    content.vb: Public Property DiscoverySettings As TeamDiscoverySettings
  overload: PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Security
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.Security
  id: Security
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: Team.Security
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Security
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Security
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 40
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDefines the Security settings for the Team\n"
  example: []
  syntax:
    content: public TeamSecurity Security { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamSecurity
    content.vb: Public Property Security As TeamSecurity
  overload: PnP.Framework.Provisioning.Model.Teams.Team.Security*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Channels
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.Channels
  id: Channels
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: Team.Channels
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Channels
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Channels
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 45
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDefines the Channels for the Team\n"
  example: []
  syntax:
    content: public TeamChannelCollection Channels { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamChannelCollection
    content.vb: Public ReadOnly Property Channels As TeamChannelCollection
  overload: PnP.Framework.Provisioning.Model.Teams.Team.Channels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Apps
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.Apps
  id: Apps
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Apps
  nameWithType: Team.Apps
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Apps
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Apps
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 50
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDefines the Apps to install or update on the Team\n"
  example: []
  syntax:
    content: public TeamAppInstanceCollection Apps { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.Teams.TeamAppInstanceCollection
    content.vb: Public ReadOnly Property Apps As TeamAppInstanceCollection
  overload: PnP.Framework.Provisioning.Model.Teams.Team.Apps*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Specialization
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.Specialization
  id: Specialization
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Specialization
  nameWithType: Team.Specialization
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Specialization
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Specialization
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 52
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  syntax:
    content: public TeamSpecialization? Specialization { get; set; }
    parameters: []
    return:
      type: System.Nullable{PnP.Framework.Provisioning.Model.Teams.TeamSpecialization}
    content.vb: Public Property Specialization As TeamSpecialization?
  overload: PnP.Framework.Provisioning.Model.Teams.Team.Specialization*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.GroupId
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.GroupId
  id: GroupId
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: GroupId
  nameWithType: Team.GroupId
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.GroupId
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GroupId
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 57
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDeclares the ID of the targt Group/Team to update, optional attribute. Cannot be used together with CloneFrom.\n"
  example: []
  syntax:
    content: public string GroupId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupId As String
  overload: PnP.Framework.Provisioning.Model.Teams.Team.GroupId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom
  id: CloneFrom
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: CloneFrom
  nameWithType: Team.CloneFrom
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CloneFrom
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 62
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDeclares the ID of another Team to Clone the current Team from\n"
  example: []
  syntax:
    content: public string CloneFrom { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CloneFrom As String
  overload: PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Archived
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.Archived
  id: Archived
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Archived
  nameWithType: Team.Archived
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Archived
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Archived
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 67
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDeclares whether the Team is archived or not\n"
  example: []
  syntax:
    content: public bool Archived { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Archived As Boolean
  overload: PnP.Framework.Provisioning.Model.Teams.Team.Archived*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.MailNickname
  commentId: P:PnP.Framework.Provisioning.Model.Teams.Team.MailNickname
  id: MailNickname
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: MailNickname
  nameWithType: Team.MailNickname
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.MailNickname
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MailNickname
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 72
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nDeclares the nickname for the Team, optional attribute\n"
  example: []
  syntax:
    content: public string MailNickname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MailNickname As String
  overload: PnP.Framework.Provisioning.Model.Teams.Team.MailNickname*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.Teams.Team.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Team()
  nameWithType: Team.Team()
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Team()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 81
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nConstructor for Team\n"
  example: []
  syntax:
    content: public Team()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.Teams.Team.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Team.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 95
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode
  overload: PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.Teams.Team.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Team.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 117
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nCompares object with Team class\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents Team
    return:
      type: System.Boolean
      description: Checks whether object is Team class
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.Teams.Team.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  commentId: M:PnP.Framework.Provisioning.Model.Teams.Team.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  id: Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  parent: PnP.Framework.Provisioning.Model.Teams.Team
  langs:
  - csharp
  - vb
  name: Equals(Team)
  nameWithType: Team.Equals(Team)
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/Teams/Team.cs
    startLine: 131
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model.Teams
  summary: "\nCompares Team object based on FunSettings, GuestSettings, MembersSettings, MessagingSettings, Security, Channels, Apps, Specialization, CloneFrom, Archived, and GroupId\n"
  example: []
  syntax:
    content: public bool Equals(Team other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.Teams.Team
      description: Team Class object
    return:
      type: System.Boolean
      description: true if the Team object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As Team) As Boolean
  overload: PnP.Framework.Provisioning.Model.Teams.Team.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.Teams.Team}.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model.Teams
  commentId: N:PnP.Framework.Provisioning.Model.Teams
  name: PnP.Framework.Provisioning.Model.Teams
  nameWithType: PnP.Framework.Provisioning.Model.Teams
  fullName: PnP.Framework.Provisioning.Model.Teams
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  commentId: T:PnP.Framework.Provisioning.Model.Teams.BaseTeam
  parent: PnP.Framework.Provisioning.Model.Teams
  name: BaseTeam
  nameWithType: BaseTeam
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.Teams.BaseTeam}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.Teams.BaseTeam}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BaseTeam>
  nameWithType: IEquatable<BaseTeam>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Teams.BaseTeam>
  nameWithType.vb: IEquatable(Of BaseTeam)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.Teams.BaseTeam)
  name.vb: IEquatable(Of BaseTeam)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam
    name: BaseTeam
    nameWithType: BaseTeam
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam
    name: BaseTeam
    nameWithType: BaseTeam
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.Teams.Team}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.Teams.Team}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Team>
  nameWithType: IEquatable<Team>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Teams.Team>
  nameWithType.vb: IEquatable(Of Team)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.Teams.Team)
  name.vb: IEquatable(Of Team)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Teams.Team
    name: Team
    nameWithType: Team
    fullName: PnP.Framework.Provisioning.Model.Teams.Team
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Teams.Team
    name: Team
    nameWithType: Team
    fullName: PnP.Framework.Provisioning.Model.Teams.Team
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.DisplayName
  commentId: P:PnP.Framework.Provisioning.Model.Teams.BaseTeam.DisplayName
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: DisplayName
  nameWithType: BaseTeam.DisplayName
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.DisplayName
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Description
  commentId: P:PnP.Framework.Provisioning.Model.Teams.BaseTeam.Description
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: Description
  nameWithType: BaseTeam.Description
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Description
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Classification
  commentId: P:PnP.Framework.Provisioning.Model.Teams.BaseTeam.Classification
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: Classification
  nameWithType: BaseTeam.Classification
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Classification
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Visibility
  commentId: P:PnP.Framework.Provisioning.Model.Teams.BaseTeam.Visibility
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: Visibility
  nameWithType: BaseTeam.Visibility
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Visibility
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Photo
  commentId: P:PnP.Framework.Provisioning.Model.Teams.BaseTeam.Photo
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: Photo
  nameWithType: BaseTeam.Photo
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Photo
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.HiddenGroupMembershipEnabled
  commentId: P:PnP.Framework.Provisioning.Model.Teams.BaseTeam.HiddenGroupMembershipEnabled
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: HiddenGroupMembershipEnabled
  nameWithType: BaseTeam.HiddenGroupMembershipEnabled
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.HiddenGroupMembershipEnabled
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(PnP.Framework.Provisioning.Model.Teams.BaseTeam)
  commentId: M:PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(PnP.Framework.Provisioning.Model.Teams.BaseTeam)
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: Equals(BaseTeam)
  nameWithType: BaseTeam.Equals(BaseTeam)
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(PnP.Framework.Provisioning.Model.Teams.BaseTeam)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(PnP.Framework.Provisioning.Model.Teams.BaseTeam)
    name: Equals
    nameWithType: BaseTeam.Equals
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam
    name: BaseTeam
    nameWithType: BaseTeam
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(PnP.Framework.Provisioning.Model.Teams.BaseTeam)
    name: Equals
    nameWithType: BaseTeam.Equals
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam
    name: BaseTeam
    nameWithType: BaseTeam
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Teams.Team.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<Team>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Team>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Teams.Team>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of Team)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Teams.Team)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of Team)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<Team>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Team>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.Teams.Team>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of Team)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of Team)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.Teams.Team)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Teams.Team.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.Teams.Team,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<Team, T>(Expression<Func<Team, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<Team, T>(Expression<Func<Team, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Teams.Team, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.Teams.Team, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of Team, T)(Expression(Of Func(Of Team, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Teams.Team, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.Teams.Team, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of Team, T)(Expression(Of Func(Of Team, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<Team, T>
    nameWithType: ObjectExtensions.Set<Team, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.Teams.Team, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Teams.Team
    name: Team
    nameWithType: Team
    fullName: PnP.Framework.Provisioning.Model.Teams.Team
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of Team, T)
    nameWithType: ObjectExtensions.Set(Of Team, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.Teams.Team, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Teams.Team
    name: Team
    nameWithType: Team
    fullName: PnP.Framework.Provisioning.Model.Teams.Team
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.Teams.Team.FunSettings*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.FunSettings
  name: FunSettings
  nameWithType: Team.FunSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.FunSettings
- uid: PnP.Framework.Provisioning.Model.Teams.TeamFunSettings
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamFunSettings
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamFunSettings
  nameWithType: TeamFunSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamFunSettings
- uid: PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings
  name: GuestSettings
  nameWithType: Team.GuestSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.GuestSettings
- uid: PnP.Framework.Provisioning.Model.Teams.TeamGuestSettings
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamGuestSettings
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamGuestSettings
  nameWithType: TeamGuestSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamGuestSettings
- uid: PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings
  name: MemberSettings
  nameWithType: Team.MemberSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.MemberSettings
- uid: PnP.Framework.Provisioning.Model.Teams.TeamMemberSettings
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamMemberSettings
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamMemberSettings
  nameWithType: TeamMemberSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamMemberSettings
- uid: PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings
  name: MessagingSettings
  nameWithType: Team.MessagingSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.MessagingSettings
- uid: PnP.Framework.Provisioning.Model.Teams.TeamMessagingSettings
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamMessagingSettings
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamMessagingSettings
  nameWithType: TeamMessagingSettings
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamMessagingSettings
- uid: PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings
  name: DiscoverySettings
  nameWithType: Team.DiscoverySettings
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.DiscoverySettings
- uid: PnP.Framework.Provisioning.Model.Teams.TeamDiscoverySettings
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamDiscoverySettings
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamDiscoverySettings
  nameWithType: TeamDiscoverySettings
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamDiscoverySettings
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Security*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.Security
  name: Security
  nameWithType: Team.Security
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Security
- uid: PnP.Framework.Provisioning.Model.Teams.TeamSecurity
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamSecurity
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamSecurity
  nameWithType: TeamSecurity
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamSecurity
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Channels*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.Channels
  name: Channels
  nameWithType: Team.Channels
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Channels
- uid: PnP.Framework.Provisioning.Model.Teams.TeamChannelCollection
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamChannelCollection
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamChannelCollection
  nameWithType: TeamChannelCollection
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamChannelCollection
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Apps*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.Apps
  name: Apps
  nameWithType: Team.Apps
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Apps
- uid: PnP.Framework.Provisioning.Model.Teams.TeamAppInstanceCollection
  commentId: T:PnP.Framework.Provisioning.Model.Teams.TeamAppInstanceCollection
  parent: PnP.Framework.Provisioning.Model.Teams
  name: TeamAppInstanceCollection
  nameWithType: TeamAppInstanceCollection
  fullName: PnP.Framework.Provisioning.Model.Teams.TeamAppInstanceCollection
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Specialization*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.Specialization
  name: Specialization
  nameWithType: Team.Specialization
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Specialization
- uid: System.Nullable{PnP.Framework.Provisioning.Model.Teams.TeamSpecialization}
  commentId: T:System.Nullable{PnP.Framework.Provisioning.Model.Teams.TeamSpecialization}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TeamSpecialization>
  nameWithType: Nullable<TeamSpecialization>
  fullName: System.Nullable<PnP.Framework.Provisioning.Model.Teams.TeamSpecialization>
  nameWithType.vb: Nullable(Of TeamSpecialization)
  fullName.vb: System.Nullable(Of PnP.Framework.Provisioning.Model.Teams.TeamSpecialization)
  name.vb: Nullable(Of TeamSpecialization)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.Teams.TeamSpecialization
    name: TeamSpecialization
    nameWithType: TeamSpecialization
    fullName: PnP.Framework.Provisioning.Model.Teams.TeamSpecialization
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.Teams.TeamSpecialization
    name: TeamSpecialization
    nameWithType: TeamSpecialization
    fullName: PnP.Framework.Provisioning.Model.Teams.TeamSpecialization
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Teams.Team.GroupId*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.GroupId
  name: GroupId
  nameWithType: Team.GroupId
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.GroupId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom
  name: CloneFrom
  nameWithType: Team.CloneFrom
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.CloneFrom
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Archived*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.Archived
  name: Archived
  nameWithType: Team.Archived
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Archived
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.Teams.Team.MailNickname*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.MailNickname
  name: MailNickname
  nameWithType: Team.MailNickname
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.MailNickname
- uid: PnP.Framework.Provisioning.Model.Teams.Team.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.#ctor
  name: Team
  nameWithType: Team.Team
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Team
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  name: GetHashCode()
  nameWithType: BaseTeam.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode
    name: GetHashCode
    nameWithType: BaseTeam.GetHashCode
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode
    name: GetHashCode
    nameWithType: BaseTeam.GetHashCode
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode
  name: GetHashCode
  nameWithType: Team.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.Teams.BaseTeam
  isExternal: true
  name: Equals(Object)
  nameWithType: BaseTeam.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(System.Object)
    name: Equals
    nameWithType: BaseTeam.Equals
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals(System.Object)
    name: Equals
    nameWithType: BaseTeam.Equals
    fullName: PnP.Framework.Provisioning.Model.Teams.BaseTeam.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Teams.Team.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.Teams.Team.Equals
  name: Equals
  nameWithType: Team.Equals
  fullName: PnP.Framework.Provisioning.Model.Teams.Team.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.Teams.Team}.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.Teams.Team}.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.Teams.Team}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Team)
  nameWithType: IEquatable<Team>.Equals(Team)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Teams.Team>.Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  nameWithType.vb: IEquatable(Of Team).Equals(Team)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.Teams.Team).Equals(PnP.Framework.Provisioning.Model.Teams.Team)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Team>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.Teams.Team>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Teams.Team
    name: Team
    nameWithType: Team
    fullName: PnP.Framework.Provisioning.Model.Teams.Team
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Team).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.Teams.Team).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.Teams.Team
    name: Team
    nameWithType: Team
    fullName: PnP.Framework.Provisioning.Model.Teams.Team
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.Teams.Team
  commentId: T:PnP.Framework.Provisioning.Model.Teams.Team
  parent: PnP.Framework.Provisioning.Model.Teams
  name: Team
  nameWithType: Team
  fullName: PnP.Framework.Provisioning.Model.Teams.Team
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

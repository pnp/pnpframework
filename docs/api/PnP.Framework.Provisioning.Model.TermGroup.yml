### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.TermGroup
  commentId: T:PnP.Framework.Provisioning.Model.TermGroup
  id: TermGroup
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.TermGroup.#ctor
  - PnP.Framework.Provisioning.Model.TermGroup.#ctor(System.Guid,System.String,System.Collections.Generic.List{PnP.Framework.Provisioning.Model.TermSet},System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User})
  - PnP.Framework.Provisioning.Model.TermGroup.Contributors
  - PnP.Framework.Provisioning.Model.TermGroup.Description
  - PnP.Framework.Provisioning.Model.TermGroup.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  - PnP.Framework.Provisioning.Model.TermGroup.Equals(System.Object)
  - PnP.Framework.Provisioning.Model.TermGroup.GetHashCode
  - PnP.Framework.Provisioning.Model.TermGroup.Id
  - PnP.Framework.Provisioning.Model.TermGroup.Managers
  - PnP.Framework.Provisioning.Model.TermGroup.Name
  - PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup
  - PnP.Framework.Provisioning.Model.TermGroup.TermSets
  - PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior
  langs:
  - csharp
  - vb
  name: TermGroup
  nameWithType: TermGroup
  fullName: PnP.Framework.Provisioning.Model.TermGroup
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TermGroup
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 7
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  syntax:
    content: 'public class TermGroup : BaseModel, IProvisioningTemplateDescendant, IEquatable<TermGroup>'
    content.vb: >-
      Public Class TermGroup
          Inherits BaseModel
          Implements IProvisioningTemplateDescendant, IEquatable(Of TermGroup)
  inheritance:
  - System.Object
  - PnP.Framework.Provisioning.Model.BaseModel
  implements:
  - PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  - System.IEquatable{PnP.Framework.Provisioning.Model.TermGroup}
  inheritedMembers:
  - PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Model.TermGroup.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.TermGroup.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.TermGroup,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Model.TermGroup.Id
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.Id
  id: Id
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TermGroup.Id
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Id
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Id
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 23
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe ID of the TermGroup\n"
  example: []
  syntax:
    content: public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property Id As Guid
  overload: PnP.Framework.Provisioning.Model.TermGroup.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.TermGroup.Name
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.Name
  id: Name
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TermGroup.Name
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Name
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Name
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 28
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe Name of the TermGroup\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: PnP.Framework.Provisioning.Model.TermGroup.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.TermGroup.Description
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.Description
  id: Description
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TermGroup.Description
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Description
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Description
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 33
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe Description of the TermGroup\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: PnP.Framework.Provisioning.Model.TermGroup.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup
  id: SiteCollectionTermGroup
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: SiteCollectionTermGroup
  nameWithType: TermGroup.SiteCollectionTermGroup
  fullName: PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SiteCollectionTermGroup
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 38
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nIs this a site collection term group\n"
  example: []
  syntax:
    content: public bool SiteCollectionTermGroup { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SiteCollectionTermGroup As Boolean
  overload: PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.TermGroup.Contributors
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.Contributors
  id: Contributors
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: Contributors
  nameWithType: TermGroup.Contributors
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Contributors
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Contributors
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 43
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nList of TermGroup Contributors\n"
  example: []
  syntax:
    content: public UserCollection Contributors { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.UserCollection
    content.vb: Public ReadOnly Property Contributors As UserCollection
  overload: PnP.Framework.Provisioning.Model.TermGroup.Contributors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.TermGroup.Managers
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.Managers
  id: Managers
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: Managers
  nameWithType: TermGroup.Managers
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Managers
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Managers
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 52
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nList of TermGroup Managers\n"
  example: []
  syntax:
    content: public UserCollection Managers { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.UserCollection
    content.vb: Public ReadOnly Property Managers As UserCollection
  overload: PnP.Framework.Provisioning.Model.TermGroup.Managers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.TermGroup.TermSets
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.TermSets
  id: TermSets
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: TermSets
  nameWithType: TermGroup.TermSets
  fullName: PnP.Framework.Provisioning.Model.TermGroup.TermSets
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TermSets
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 61
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe collection of TermSet items in the TermGroup\n"
  example: []
  syntax:
    content: public TermSetCollection TermSets { get; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.TermSetCollection
    content.vb: Public ReadOnly Property TermSets As TermSetCollection
  overload: PnP.Framework.Provisioning.Model.TermGroup.TermSets*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior
  commentId: P:PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior
  id: UpdateBehavior
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: UpdateBehavior
  nameWithType: TermGroup.UpdateBehavior
  fullName: PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UpdateBehavior
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 71
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nIf the TermGroup already exists on target, this attribute defines whether \nthe TermGroup will be overwritten or skipped.\n"
  example: []
  syntax:
    content: public TermGroupUpdateBehavior UpdateBehavior { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Model.TermGroupUpdateBehavior
    content.vb: Public Property UpdateBehavior As TermGroupUpdateBehavior
  overload: PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.TermGroup.#ctor
  commentId: M:PnP.Framework.Provisioning.Model.TermGroup.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: TermGroup()
  nameWithType: TermGroup.TermGroup()
  fullName: PnP.Framework.Provisioning.Model.TermGroup.TermGroup()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 79
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for TermGroup class\n"
  example: []
  syntax:
    content: public TermGroup()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Model.TermGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Model.TermGroup.#ctor(System.Guid,System.String,System.Collections.Generic.List{PnP.Framework.Provisioning.Model.TermSet},System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User})
  commentId: M:PnP.Framework.Provisioning.Model.TermGroup.#ctor(System.Guid,System.String,System.Collections.Generic.List{PnP.Framework.Provisioning.Model.TermSet},System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User})
  id: '#ctor(System.Guid,System.String,System.Collections.Generic.List{PnP.Framework.Provisioning.Model.TermSet},System.Boolean,System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User},System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User})'
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: TermGroup(Guid, String, List<TermSet>, Boolean, IEnumerable<User>, IEnumerable<User>)
  nameWithType: TermGroup.TermGroup(Guid, String, List<TermSet>, Boolean, IEnumerable<User>, IEnumerable<User>)
  fullName: PnP.Framework.Provisioning.Model.TermGroup.TermGroup(System.Guid, System.String, System.Collections.Generic.List<PnP.Framework.Provisioning.Model.TermSet>, System.Boolean, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.User>, System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.User>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 95
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nConstructor for TermGroup class\n"
  example: []
  syntax:
    content: public TermGroup(Guid id, string name, List<TermSet> termSets, bool siteCollectionTermGroup = false, IEnumerable<User> contributors = null, IEnumerable<User> managers = null)
    parameters:
    - id: id
      type: System.Guid
      description: Id of the term group
    - id: name
      type: System.String
      description: Name of the term group
    - id: termSets
      type: System.Collections.Generic.List{PnP.Framework.Provisioning.Model.TermSet}
      description: Termsets related to term group
    - id: siteCollectionTermGroup
      type: System.Boolean
      description: Specify whether it is site collection term group or not
    - id: contributors
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User}
      description: TermGroup Contributors
    - id: managers
      type: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User}
      description: TermGroup Managers
    content.vb: Public Sub New(id As Guid, name As String, termSets As List(Of TermSet), siteCollectionTermGroup As Boolean = False, contributors As IEnumerable(Of User) = Nothing, managers As IEnumerable(Of User) = Nothing)
  overload: PnP.Framework.Provisioning.Model.TermGroup.#ctor*
  nameWithType.vb: TermGroup.TermGroup(Guid, String, List(Of TermSet), Boolean, IEnumerable(Of User), IEnumerable(Of User))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.Model.TermGroup.TermGroup(System.Guid, System.String, System.Collections.Generic.List(Of PnP.Framework.Provisioning.Model.TermSet), System.Boolean, System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.User), System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.User))
  name.vb: TermGroup(Guid, String, List(Of TermSet), Boolean, IEnumerable(Of User), IEnumerable(Of User))
- uid: PnP.Framework.Provisioning.Model.TermGroup.GetHashCode
  commentId: M:PnP.Framework.Provisioning.Model.TermGroup.GetHashCode
  id: GetHashCode
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TermGroup.GetHashCode()
  fullName: PnP.Framework.Provisioning.Model.TermGroup.GetHashCode()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHashCode
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 115
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Returns HashCode
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: PnP.Framework.Provisioning.Model.TermGroup.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.TermGroup.Equals(System.Object)
  commentId: M:PnP.Framework.Provisioning.Model.TermGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TermGroup.Equals(Object)
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 130
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares object with TermGroup\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object that represents TermGroup
    return:
      type: System.Boolean
      description: true if the current object is equal to the TermGroup
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: PnP.Framework.Provisioning.Model.TermGroup.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Provisioning.Model.TermGroup.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  commentId: M:PnP.Framework.Provisioning.Model.TermGroup.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  id: Equals(PnP.Framework.Provisioning.Model.TermGroup)
  parent: PnP.Framework.Provisioning.Model.TermGroup
  langs:
  - csharp
  - vb
  name: Equals(TermGroup)
  nameWithType: TermGroup.Equals(TermGroup)
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Equals
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Taxonomy/TermGroup.cs
    startLine: 144
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nCompares TermGroup object based on Id, Name, Description and TermSets. \n"
  example: []
  syntax:
    content: public bool Equals(TermGroup other)
    parameters:
    - id: other
      type: PnP.Framework.Provisioning.Model.TermGroup
      description: TermGroup object
    return:
      type: System.Boolean
      description: true if the TermGroup object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As TermGroup) As Boolean
  overload: PnP.Framework.Provisioning.Model.TermGroup.Equals*
  implements:
  - System.IEquatable{PnP.Framework.Provisioning.Model.TermGroup}.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Model.BaseModel
  commentId: T:PnP.Framework.Provisioning.Model.BaseModel
  parent: PnP.Framework.Provisioning.Model
  name: BaseModel
  nameWithType: BaseModel
  fullName: PnP.Framework.Provisioning.Model.BaseModel
- uid: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  commentId: T:PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
  parent: PnP.Framework.Provisioning.Model
  name: IProvisioningTemplateDescendant
  nameWithType: IProvisioningTemplateDescendant
  fullName: PnP.Framework.Provisioning.Model.IProvisioningTemplateDescendant
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.TermGroup}
  commentId: T:System.IEquatable{PnP.Framework.Provisioning.Model.TermGroup}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TermGroup>
  nameWithType: IEquatable<TermGroup>
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.TermGroup>
  nameWithType.vb: IEquatable(Of TermGroup)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.TermGroup)
  name.vb: IEquatable(Of TermGroup)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.TermGroup
    name: TermGroup
    nameWithType: TermGroup
    fullName: PnP.Framework.Provisioning.Model.TermGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.TermGroup
    name: TermGroup
    nameWithType: TermGroup
    fullName: PnP.Framework.Provisioning.Model.TermGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  commentId: P:PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
  parent: PnP.Framework.Provisioning.Model.BaseModel
  name: ParentTemplate
  nameWithType: BaseModel.ParentTemplate
  fullName: PnP.Framework.Provisioning.Model.BaseModel.ParentTemplate
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.TermGroup.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<TermGroup>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TermGroup>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.TermGroup>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of TermGroup)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.TermGroup)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of TermGroup)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<TermGroup>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TermGroup>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.TermGroup>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of TermGroup)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of TermGroup)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.TermGroup)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.TermGroup.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.TermGroup,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<TermGroup, T>(Expression<Func<TermGroup, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TermGroup, T>(Expression<Func<TermGroup, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.TermGroup, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.TermGroup, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TermGroup, T)(Expression(Of Func(Of TermGroup, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.TermGroup, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.TermGroup, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TermGroup, T)(Expression(Of Func(Of TermGroup, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TermGroup, T>
    nameWithType: ObjectExtensions.Set<TermGroup, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.TermGroup, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.TermGroup
    name: TermGroup
    nameWithType: TermGroup
    fullName: PnP.Framework.Provisioning.Model.TermGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TermGroup, T)
    nameWithType: ObjectExtensions.Set(Of TermGroup, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.TermGroup, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.TermGroup
    name: TermGroup
    nameWithType: TermGroup
    fullName: PnP.Framework.Provisioning.Model.TermGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.TermGroup.Id*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.Id
  name: Id
  nameWithType: TermGroup.Id
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: PnP.Framework.Provisioning.Model.TermGroup.Name*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.Name
  name: Name
  nameWithType: TermGroup.Name
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Model.TermGroup.Description*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.Description
  name: Description
  nameWithType: TermGroup.Description
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Description
- uid: PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup
  name: SiteCollectionTermGroup
  nameWithType: TermGroup.SiteCollectionTermGroup
  fullName: PnP.Framework.Provisioning.Model.TermGroup.SiteCollectionTermGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Model.TermGroup.Contributors*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.Contributors
  name: Contributors
  nameWithType: TermGroup.Contributors
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Contributors
- uid: PnP.Framework.Provisioning.Model.UserCollection
  commentId: T:PnP.Framework.Provisioning.Model.UserCollection
  parent: PnP.Framework.Provisioning.Model
  name: UserCollection
  nameWithType: UserCollection
  fullName: PnP.Framework.Provisioning.Model.UserCollection
- uid: PnP.Framework.Provisioning.Model.TermGroup.Managers*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.Managers
  name: Managers
  nameWithType: TermGroup.Managers
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Managers
- uid: PnP.Framework.Provisioning.Model.TermGroup.TermSets*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.TermSets
  name: TermSets
  nameWithType: TermGroup.TermSets
  fullName: PnP.Framework.Provisioning.Model.TermGroup.TermSets
- uid: PnP.Framework.Provisioning.Model.TermSetCollection
  commentId: T:PnP.Framework.Provisioning.Model.TermSetCollection
  parent: PnP.Framework.Provisioning.Model
  name: TermSetCollection
  nameWithType: TermSetCollection
  fullName: PnP.Framework.Provisioning.Model.TermSetCollection
- uid: PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior
  name: UpdateBehavior
  nameWithType: TermGroup.UpdateBehavior
  fullName: PnP.Framework.Provisioning.Model.TermGroup.UpdateBehavior
- uid: PnP.Framework.Provisioning.Model.TermGroupUpdateBehavior
  commentId: T:PnP.Framework.Provisioning.Model.TermGroupUpdateBehavior
  parent: PnP.Framework.Provisioning.Model
  name: TermGroupUpdateBehavior
  nameWithType: TermGroupUpdateBehavior
  fullName: PnP.Framework.Provisioning.Model.TermGroupUpdateBehavior
- uid: PnP.Framework.Provisioning.Model.TermGroup.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.#ctor
  name: TermGroup
  nameWithType: TermGroup.TermGroup
  fullName: PnP.Framework.Provisioning.Model.TermGroup.TermGroup
- uid: System.Collections.Generic.List{PnP.Framework.Provisioning.Model.TermSet}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Provisioning.Model.TermSet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TermSet>
  nameWithType: List<TermSet>
  fullName: System.Collections.Generic.List<PnP.Framework.Provisioning.Model.TermSet>
  nameWithType.vb: List(Of TermSet)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Provisioning.Model.TermSet)
  name.vb: List(Of TermSet)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.TermSet
    name: TermSet
    nameWithType: TermSet
    fullName: PnP.Framework.Provisioning.Model.TermSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.TermSet
    name: TermSet
    nameWithType: TermSet
    fullName: PnP.Framework.Provisioning.Model.TermSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User}
  commentId: T:System.Collections.Generic.IEnumerable{PnP.Framework.Provisioning.Model.User}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<User>
  nameWithType: IEnumerable<User>
  fullName: System.Collections.Generic.IEnumerable<PnP.Framework.Provisioning.Model.User>
  nameWithType.vb: IEnumerable(Of User)
  fullName.vb: System.Collections.Generic.IEnumerable(Of PnP.Framework.Provisioning.Model.User)
  name.vb: IEnumerable(Of User)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.User
    name: User
    nameWithType: User
    fullName: PnP.Framework.Provisioning.Model.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.User
    name: User
    nameWithType: User
    fullName: PnP.Framework.Provisioning.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.TermGroup.GetHashCode*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.GetHashCode
  name: GetHashCode
  nameWithType: TermGroup.GetHashCode
  fullName: PnP.Framework.Provisioning.Model.TermGroup.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.TermGroup.Equals*
  commentId: Overload:PnP.Framework.Provisioning.Model.TermGroup.Equals
  name: Equals
  nameWithType: TermGroup.Equals
  fullName: PnP.Framework.Provisioning.Model.TermGroup.Equals
- uid: System.IEquatable{PnP.Framework.Provisioning.Model.TermGroup}.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  commentId: M:System.IEquatable{PnP.Framework.Provisioning.Model.TermGroup}.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  parent: System.IEquatable{PnP.Framework.Provisioning.Model.TermGroup}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(TermGroup)
  nameWithType: IEquatable<TermGroup>.Equals(TermGroup)
  fullName: System.IEquatable<PnP.Framework.Provisioning.Model.TermGroup>.Equals(PnP.Framework.Provisioning.Model.TermGroup)
  nameWithType.vb: IEquatable(Of TermGroup).Equals(TermGroup)
  fullName.vb: System.IEquatable(Of PnP.Framework.Provisioning.Model.TermGroup).Equals(PnP.Framework.Provisioning.Model.TermGroup)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<TermGroup>.Equals
    fullName: System.IEquatable<PnP.Framework.Provisioning.Model.TermGroup>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.TermGroup
    name: TermGroup
    nameWithType: TermGroup
    fullName: PnP.Framework.Provisioning.Model.TermGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of TermGroup).Equals
    fullName: System.IEquatable(Of PnP.Framework.Provisioning.Model.TermGroup).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Provisioning.Model.TermGroup
    name: TermGroup
    nameWithType: TermGroup
    fullName: PnP.Framework.Provisioning.Model.TermGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.TermGroup
  commentId: T:PnP.Framework.Provisioning.Model.TermGroup
  parent: PnP.Framework.Provisioning.Model
  name: TermGroup
  nameWithType: TermGroup
  fullName: PnP.Framework.Provisioning.Model.TermGroup
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

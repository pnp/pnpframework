### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Model.WorkHour
  commentId: T:PnP.Framework.Provisioning.Model.WorkHour
  id: WorkHour
  parent: PnP.Framework.Provisioning.Model
  children:
  - PnP.Framework.Provisioning.Model.WorkHour.AM0100
  - PnP.Framework.Provisioning.Model.WorkHour.AM0200
  - PnP.Framework.Provisioning.Model.WorkHour.AM0300
  - PnP.Framework.Provisioning.Model.WorkHour.AM0400
  - PnP.Framework.Provisioning.Model.WorkHour.AM0500
  - PnP.Framework.Provisioning.Model.WorkHour.AM0600
  - PnP.Framework.Provisioning.Model.WorkHour.AM0700
  - PnP.Framework.Provisioning.Model.WorkHour.AM0800
  - PnP.Framework.Provisioning.Model.WorkHour.AM0900
  - PnP.Framework.Provisioning.Model.WorkHour.AM1000
  - PnP.Framework.Provisioning.Model.WorkHour.AM1100
  - PnP.Framework.Provisioning.Model.WorkHour.AM1200
  - PnP.Framework.Provisioning.Model.WorkHour.PM0100
  - PnP.Framework.Provisioning.Model.WorkHour.PM0200
  - PnP.Framework.Provisioning.Model.WorkHour.PM0300
  - PnP.Framework.Provisioning.Model.WorkHour.PM0400
  - PnP.Framework.Provisioning.Model.WorkHour.PM0500
  - PnP.Framework.Provisioning.Model.WorkHour.PM0600
  - PnP.Framework.Provisioning.Model.WorkHour.PM0700
  - PnP.Framework.Provisioning.Model.WorkHour.PM0800
  - PnP.Framework.Provisioning.Model.WorkHour.PM0900
  - PnP.Framework.Provisioning.Model.WorkHour.PM1000
  - PnP.Framework.Provisioning.Model.WorkHour.PM1100
  - PnP.Framework.Provisioning.Model.WorkHour.PM1200
  langs:
  - csharp
  - vb
  name: WorkHour
  nameWithType: WorkHour
  fullName: PnP.Framework.Provisioning.Model.WorkHour
  type: Enum
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: WorkHour
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 169
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\nThe Work Hours of a Day\n"
  example: []
  syntax:
    content: public enum WorkHour
    content.vb: Public Enum WorkHour
  extensionMethods:
  - System.Enum.System.EnumerationExtensions.Include``1({T})
  - System.Enum.System.EnumerationExtensions.Remove``1({T})
  - System.Enum.System.EnumerationExtensions.Has``1({T})
  - System.Enum.System.EnumerationExtensions.Missing``1({T})
  - PnP.Framework.Provisioning.Model.WorkHour.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Model.WorkHour.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.WorkHour,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM1200
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM1200
  id: AM1200
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM1200
  nameWithType: WorkHour.AM1200
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM1200
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM1200
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 174
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n00:00 am\n"
  example: []
  syntax:
    content: AM1200 = 0
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0100
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0100
  id: AM0100
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0100
  nameWithType: WorkHour.AM0100
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0100
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0100
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 178
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n01:00 am\n"
  example: []
  syntax:
    content: AM0100 = 60
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0200
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0200
  id: AM0200
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0200
  nameWithType: WorkHour.AM0200
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0200
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0200
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 182
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n02:00 am\n"
  example: []
  syntax:
    content: AM0200 = 120
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0300
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0300
  id: AM0300
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0300
  nameWithType: WorkHour.AM0300
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0300
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0300
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 186
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n03:00 am\n"
  example: []
  syntax:
    content: AM0300 = 180
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0400
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0400
  id: AM0400
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0400
  nameWithType: WorkHour.AM0400
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0400
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0400
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 190
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n04:00 am\n"
  example: []
  syntax:
    content: AM0400 = 240
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0500
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0500
  id: AM0500
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0500
  nameWithType: WorkHour.AM0500
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0500
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0500
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 194
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n05:00 am\n"
  example: []
  syntax:
    content: AM0500 = 300
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0600
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0600
  id: AM0600
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0600
  nameWithType: WorkHour.AM0600
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0600
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0600
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 198
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n06:00 am\n"
  example: []
  syntax:
    content: AM0600 = 360
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0700
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0700
  id: AM0700
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0700
  nameWithType: WorkHour.AM0700
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0700
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0700
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 202
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n07:00 am\n"
  example: []
  syntax:
    content: AM0700 = 420
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0800
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0800
  id: AM0800
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0800
  nameWithType: WorkHour.AM0800
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0800
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0800
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 206
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n08:00 am\n"
  example: []
  syntax:
    content: AM0800 = 480
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM0900
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM0900
  id: AM0900
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM0900
  nameWithType: WorkHour.AM0900
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM0900
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM0900
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 210
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n09:00 am\n"
  example: []
  syntax:
    content: AM0900 = 540
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM1000
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM1000
  id: AM1000
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM1000
  nameWithType: WorkHour.AM1000
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM1000
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM1000
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 214
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n10:00 am\n"
  example: []
  syntax:
    content: AM1000 = 600
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.AM1100
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.AM1100
  id: AM1100
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: AM1100
  nameWithType: WorkHour.AM1100
  fullName: PnP.Framework.Provisioning.Model.WorkHour.AM1100
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AM1100
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 218
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n11:00 am\n"
  example: []
  syntax:
    content: AM1100 = 660
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM1200
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM1200
  id: PM1200
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM1200
  nameWithType: WorkHour.PM1200
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM1200
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM1200
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 222
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n12:00 pm\n"
  example: []
  syntax:
    content: PM1200 = 720
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0100
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0100
  id: PM0100
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0100
  nameWithType: WorkHour.PM0100
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0100
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0100
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 226
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n01:00 pm\n"
  example: []
  syntax:
    content: PM0100 = 780
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0200
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0200
  id: PM0200
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0200
  nameWithType: WorkHour.PM0200
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0200
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0200
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 230
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n02:00 pm\n"
  example: []
  syntax:
    content: PM0200 = 840
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0300
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0300
  id: PM0300
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0300
  nameWithType: WorkHour.PM0300
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0300
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0300
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 234
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n03:00 pm\n"
  example: []
  syntax:
    content: PM0300 = 900
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0400
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0400
  id: PM0400
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0400
  nameWithType: WorkHour.PM0400
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0400
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0400
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 238
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n04:00 pm\n"
  example: []
  syntax:
    content: PM0400 = 960
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0500
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0500
  id: PM0500
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0500
  nameWithType: WorkHour.PM0500
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0500
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0500
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 242
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n05:00 pm\n"
  example: []
  syntax:
    content: PM0500 = 1020
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0600
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0600
  id: PM0600
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0600
  nameWithType: WorkHour.PM0600
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0600
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0600
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 246
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n06:00 pm\n"
  example: []
  syntax:
    content: PM0600 = 1080
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0700
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0700
  id: PM0700
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0700
  nameWithType: WorkHour.PM0700
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0700
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0700
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 250
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n07:00 pm\n"
  example: []
  syntax:
    content: PM0700 = 1140
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0800
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0800
  id: PM0800
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0800
  nameWithType: WorkHour.PM0800
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0800
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0800
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 254
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n08:00 pm\n"
  example: []
  syntax:
    content: PM0800 = 1200
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM0900
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM0900
  id: PM0900
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM0900
  nameWithType: WorkHour.PM0900
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM0900
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM0900
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 258
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n09:00 pm\n"
  example: []
  syntax:
    content: PM0900 = 1260
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM1000
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM1000
  id: PM1000
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM1000
  nameWithType: WorkHour.PM1000
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM1000
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM1000
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 262
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n10:00 pm\n"
  example: []
  syntax:
    content: PM1000 = 1320
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Model.WorkHour.PM1100
  commentId: F:PnP.Framework.Provisioning.Model.WorkHour.PM1100
  id: PM1100
  parent: PnP.Framework.Provisioning.Model.WorkHour
  langs:
  - csharp
  - vb
  name: PM1100
  nameWithType: WorkHour.PM1100
  fullName: PnP.Framework.Provisioning.Model.WorkHour.PM1100
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PM1100
    path: ../src/lib/PnP.Framework/Provisioning/Model/SharePoint/Settings/RegionalSettings.cs
    startLine: 266
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Model
  summary: "\n11:00 pm\n"
  example: []
  syntax:
    content: PM1100 = 1380
    return:
      type: PnP.Framework.Provisioning.Model.WorkHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: System.Enum.System.EnumerationExtensions.Include``1({T})
  commentId: M:System.EnumerationExtensions.Include``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Include``1(System.Enum,``0)
  name: Include<T>(T)
  nameWithType: EnumerationExtensions.Include<T>(T)
  fullName: System.EnumerationExtensions.Include<T>(T)
  nameWithType.vb: EnumerationExtensions.Include(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Include(Of T)(T)
  name.vb: Include(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Include``1(``0)
    name: Include<T>
    nameWithType: EnumerationExtensions.Include<T>
    fullName: System.EnumerationExtensions.Include<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Include``1(``0)
    name: Include(Of T)
    nameWithType: EnumerationExtensions.Include(Of T)
    fullName: System.EnumerationExtensions.Include(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Remove``1({T})
  commentId: M:System.EnumerationExtensions.Remove``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Remove``1(System.Enum,``0)
  name: Remove<T>(T)
  nameWithType: EnumerationExtensions.Remove<T>(T)
  fullName: System.EnumerationExtensions.Remove<T>(T)
  nameWithType.vb: EnumerationExtensions.Remove(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Remove(Of T)(T)
  name.vb: Remove(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Remove``1(``0)
    name: Remove<T>
    nameWithType: EnumerationExtensions.Remove<T>
    fullName: System.EnumerationExtensions.Remove<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Remove``1(``0)
    name: Remove(Of T)
    nameWithType: EnumerationExtensions.Remove(Of T)
    fullName: System.EnumerationExtensions.Remove(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Has``1({T})
  commentId: M:System.EnumerationExtensions.Has``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Has``1(System.Enum,``0)
  name: Has<T>(T)
  nameWithType: EnumerationExtensions.Has<T>(T)
  fullName: System.EnumerationExtensions.Has<T>(T)
  nameWithType.vb: EnumerationExtensions.Has(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Has(Of T)(T)
  name.vb: Has(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Has``1(``0)
    name: Has<T>
    nameWithType: EnumerationExtensions.Has<T>
    fullName: System.EnumerationExtensions.Has<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Has``1(``0)
    name: Has(Of T)
    nameWithType: EnumerationExtensions.Has(Of T)
    fullName: System.EnumerationExtensions.Has(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Missing``1({T})
  commentId: M:System.EnumerationExtensions.Missing``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Missing``1(System.Enum,``0)
  name: Missing<T>(T)
  nameWithType: EnumerationExtensions.Missing<T>(T)
  fullName: System.EnumerationExtensions.Missing<T>(T)
  nameWithType.vb: EnumerationExtensions.Missing(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Missing(Of T)(T)
  name.vb: Missing(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Missing``1(``0)
    name: Missing<T>
    nameWithType: EnumerationExtensions.Missing<T>
    fullName: System.EnumerationExtensions.Missing<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Missing``1(``0)
    name: Missing(Of T)
    nameWithType: EnumerationExtensions.Missing(Of T)
    fullName: System.EnumerationExtensions.Missing(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.WorkHour.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<WorkHour>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<WorkHour>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.WorkHour>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of WorkHour)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.WorkHour)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of WorkHour)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<WorkHour>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<WorkHour>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Model.WorkHour>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of WorkHour)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of WorkHour)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Model.WorkHour)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Model.WorkHour.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Model.WorkHour,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<WorkHour, T>(Expression<Func<WorkHour, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<WorkHour, T>(Expression<Func<WorkHour, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.WorkHour, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Model.WorkHour, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of WorkHour, T)(Expression(Of Func(Of WorkHour, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.WorkHour, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Model.WorkHour, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of WorkHour, T)(Expression(Of Func(Of WorkHour, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<WorkHour, T>
    nameWithType: ObjectExtensions.Set<WorkHour, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Model.WorkHour, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.WorkHour
    name: WorkHour
    nameWithType: WorkHour
    fullName: PnP.Framework.Provisioning.Model.WorkHour
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of WorkHour, T)
    nameWithType: ObjectExtensions.Set(Of WorkHour, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Model.WorkHour, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.WorkHour
    name: WorkHour
    nameWithType: WorkHour
    fullName: PnP.Framework.Provisioning.Model.WorkHour
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Include``1(System.Enum,``0)
  isExternal: true
  name: Include<T>(Enum, T)
  nameWithType: EnumerationExtensions.Include<T>(Enum, T)
  fullName: System.EnumerationExtensions.Include<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Include(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Include(Of T)(System.Enum, T)
  name.vb: Include(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
    name: Include<T>
    nameWithType: EnumerationExtensions.Include<T>
    fullName: System.EnumerationExtensions.Include<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
    name: Include(Of T)
    nameWithType: EnumerationExtensions.Include(Of T)
    fullName: System.EnumerationExtensions.Include(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions
  commentId: T:System.EnumerationExtensions
  parent: System
  name: EnumerationExtensions
  nameWithType: EnumerationExtensions
  fullName: System.EnumerationExtensions
- uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Remove``1(System.Enum,``0)
  isExternal: true
  name: Remove<T>(Enum, T)
  nameWithType: EnumerationExtensions.Remove<T>(Enum, T)
  fullName: System.EnumerationExtensions.Remove<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Remove(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Remove(Of T)(System.Enum, T)
  name.vb: Remove(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
    name: Remove<T>
    nameWithType: EnumerationExtensions.Remove<T>
    fullName: System.EnumerationExtensions.Remove<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
    name: Remove(Of T)
    nameWithType: EnumerationExtensions.Remove(Of T)
    fullName: System.EnumerationExtensions.Remove(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Has``1(System.Enum,``0)
  isExternal: true
  name: Has<T>(Enum, T)
  nameWithType: EnumerationExtensions.Has<T>(Enum, T)
  fullName: System.EnumerationExtensions.Has<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Has(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Has(Of T)(System.Enum, T)
  name.vb: Has(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
    name: Has<T>
    nameWithType: EnumerationExtensions.Has<T>
    fullName: System.EnumerationExtensions.Has<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
    name: Has(Of T)
    nameWithType: EnumerationExtensions.Has(Of T)
    fullName: System.EnumerationExtensions.Has(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Missing``1(System.Enum,``0)
  isExternal: true
  name: Missing<T>(Enum, T)
  nameWithType: EnumerationExtensions.Missing<T>(Enum, T)
  fullName: System.EnumerationExtensions.Missing<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Missing(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Missing(Of T)(System.Enum, T)
  name.vb: Missing(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
    name: Missing<T>
    nameWithType: EnumerationExtensions.Missing<T>
    fullName: System.EnumerationExtensions.Missing<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
    name: Missing(Of T)
    nameWithType: EnumerationExtensions.Missing(Of T)
    fullName: System.EnumerationExtensions.Missing(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Model.WorkHour
  commentId: T:PnP.Framework.Provisioning.Model.WorkHour
  parent: PnP.Framework.Provisioning.Model
  name: WorkHour
  nameWithType: WorkHour
  fullName: PnP.Framework.Provisioning.Model.WorkHour

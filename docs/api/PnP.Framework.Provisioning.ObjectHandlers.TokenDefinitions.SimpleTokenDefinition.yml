### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  id: SimpleTokenDefinition
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  children:
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.#ctor(System.String[])
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.CacheValue
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens
  langs:
  - csharp
  - vb
  name: SimpleTokenDefinition
  nameWithType: SimpleTokenDefinition
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SimpleTokenDefinition
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
    startLine: 7
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  summary: "\nDefines a provisioning engine Token. Make sure to only use the TokenContext property to execute queries in token methods.\n"
  example: []
  syntax:
    content: public abstract class SimpleTokenDefinition
    content.vb: Public MustInherit Class SimpleTokenDefinition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.CacheValue
  commentId: F:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.CacheValue
  id: CacheValue
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  langs:
  - csharp
  - vb
  name: CacheValue
  nameWithType: SimpleTokenDefinition.CacheValue
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.CacheValue
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CacheValue
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  syntax:
    content: protected string CacheValue
    return:
      type: System.String
    content.vb: Protected CacheValue As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.#ctor(System.String[])
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  langs:
  - csharp
  - vb
  name: SimpleTokenDefinition(String[])
  nameWithType: SimpleTokenDefinition.SimpleTokenDefinition(String[])
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.SimpleTokenDefinition(System.String[])
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public SimpleTokenDefinition(params string[] token)
    parameters:
    - id: token
      type: System.String[]
      description: token
    content.vb: Public Sub New(ParamArray token As String())
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.#ctor*
  nameWithType.vb: SimpleTokenDefinition.SimpleTokenDefinition(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.SimpleTokenDefinition(System.String())
  name.vb: SimpleTokenDefinition(String())
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens
  id: GetTokens
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  langs:
  - csharp
  - vb
  name: GetTokens()
  nameWithType: SimpleTokenDefinition.GetTokens()
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTokens
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  summary: "\nGets tokens\n"
  example: []
  syntax:
    content: public string[] GetTokens()
    return:
      type: System.String[]
      description: Returns array string of tokens
    content.vb: Public Function GetTokens As String()
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength
  id: GetTokenLength
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  langs:
  - csharp
  - vb
  name: GetTokenLength()
  nameWithType: SimpleTokenDefinition.GetTokenLength()
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTokenLength
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
    startLine: 34
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  summary: "\nGets token length in integer\n"
  example: []
  syntax:
    content: public int GetTokenLength()
    return:
      type: System.Int32
      description: token length in integer
    content.vb: Public Function GetTokenLength As Integer
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue
  id: GetReplaceValue
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  langs:
  - csharp
  - vb
  name: GetReplaceValue()
  nameWithType: SimpleTokenDefinition.GetReplaceValue()
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetReplaceValue
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
    startLine: 43
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  summary: "\nabstract method\n"
  example: []
  syntax:
    content: public abstract string GetReplaceValue()
    return:
      type: System.String
      description: Returns string
    content.vb: Public MustOverride Function GetReplaceValue As String
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache
  id: ClearCache
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  langs:
  - csharp
  - vb
  name: ClearCache()
  nameWithType: SimpleTokenDefinition.ClearCache()
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ClearCache
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenDefinitions/SimpleTokenDefinition.cs
    startLine: 48
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  summary: "\nClears cache\n"
  example: []
  syntax:
    content: public void ClearCache()
    content.vb: Public Sub ClearCache
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  commentId: N:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  name: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  nameWithType: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<SimpleTokenDefinition>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SimpleTokenDefinition>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of SimpleTokenDefinition)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of SimpleTokenDefinition)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<SimpleTokenDefinition>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<SimpleTokenDefinition>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of SimpleTokenDefinition)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of SimpleTokenDefinition)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<SimpleTokenDefinition, T>(Expression<Func<SimpleTokenDefinition, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<SimpleTokenDefinition, T>(Expression<Func<SimpleTokenDefinition, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of SimpleTokenDefinition, T)(Expression(Of Func(Of SimpleTokenDefinition, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of SimpleTokenDefinition, T)(Expression(Of Func(Of SimpleTokenDefinition, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<SimpleTokenDefinition, T>
    nameWithType: ObjectExtensions.Set<SimpleTokenDefinition, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
    name: SimpleTokenDefinition
    nameWithType: SimpleTokenDefinition
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of SimpleTokenDefinition, T)
    nameWithType: ObjectExtensions.Set(Of SimpleTokenDefinition, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
    name: SimpleTokenDefinition
    nameWithType: SimpleTokenDefinition
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.#ctor
  name: SimpleTokenDefinition
  nameWithType: SimpleTokenDefinition.SimpleTokenDefinition
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.SimpleTokenDefinition
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens
  name: GetTokens
  nameWithType: SimpleTokenDefinition.GetTokens
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokens
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength
  name: GetTokenLength
  nameWithType: SimpleTokenDefinition.GetTokenLength
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetTokenLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue
  name: GetReplaceValue
  nameWithType: SimpleTokenDefinition.GetReplaceValue
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.GetReplaceValue
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache
  name: ClearCache
  nameWithType: SimpleTokenDefinition.ClearCache
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.SimpleTokenDefinition.ClearCache

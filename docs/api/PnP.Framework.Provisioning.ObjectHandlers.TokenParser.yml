### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  id: TokenParser
  parent: PnP.Framework.Provisioning.ObjectHandlers
  children:
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser._web
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken(PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens(System.String)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues(System.String)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String,System.String[])
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString(System.String,System.String[])
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens
  langs:
  - csharp
  - vb
  name: TokenParser
  nameWithType: TokenParser
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TokenParser
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 25
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nHandles methods for token parser\n"
  example: []
  syntax:
    content: 'public class TokenParser : ICloneable'
    content.vb: >-
      Public Class TokenParser
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.ObjectHandlers.TokenParser.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.ObjectHandlers.TokenParser,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser._web
  commentId: F:PnP.Framework.Provisioning.ObjectHandlers.TokenParser._web
  id: _web
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: _web
  nameWithType: TokenParser._web
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser._web
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: _web
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 27
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  syntax:
    content: public Web _web
    return:
      type: Microsoft.SharePoint.Client.Web
    content.vb: Public _web As Web
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens
  commentId: P:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens
  id: Tokens
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: TokenParser.Tokens
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Tokens
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 36
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nList of token definitions\n"
  example: []
  syntax:
    content: public List<TokenDefinition> Tokens { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition}
    content.vb: Public ReadOnly Property Tokens As List(Of TokenDefinition)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken(PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken(PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition)
  id: AddToken(PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition)
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: AddToken(TokenDefinition)
  nameWithType: TokenParser.AddToken(TokenDefinition)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken(PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddToken
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 49
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nadds token definition\n"
  example: []
  syntax:
    content: public void AddToken(TokenDefinition tokenDefinition)
    parameters:
    - id: tokenDefinition
      type: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
      description: A TokenDefinition object
    content.vb: Public Sub AddToken(tokenDefinition As TokenDefinition)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web)
  id: Rebase(Microsoft.SharePoint.Client.Web)
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: Rebase(Web)
  nameWithType: TokenParser.Rebase(Web)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Rebase
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 62
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  syntax:
    content: public void Rebase(Web web)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
    content.vb: Public Sub Rebase(web As Web)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  id: Rebase(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: Rebase(Web, ProvisioningTemplate, ProvisioningTemplateApplyingInformation)
  nameWithType: TokenParser.Rebase(Web, ProvisioningTemplate, ProvisioningTemplateApplyingInformation)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase(Microsoft.SharePoint.Client.Web, PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Rebase
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 70
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  syntax:
    content: public void Rebase(Web web, ProvisioningTemplate template, ProvisioningTemplateApplyingInformation applyingInformation = null)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    - id: applyingInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
    content.vb: Public Sub Rebase(web As Web, template As ProvisioningTemplate, applyingInformation As ProvisioningTemplateApplyingInformation = Nothing)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  id: '#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy)'
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: TokenParser(Tenant, ProvisioningHierarchy)
  nameWithType: TokenParser.TokenParser(Tenant, ProvisioningHierarchy)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.TokenParser(Microsoft.Online.SharePoint.TenantAdministration.Tenant, PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 122
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  syntax:
    content: public TokenParser(Tenant tenant, ProvisioningHierarchy hierarchy)
    parameters:
    - id: tenant
      type: Microsoft.Online.SharePoint.TenantAdministration.Tenant
    - id: hierarchy
      type: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
    content.vb: Public Sub New(tenant As Tenant, hierarchy As ProvisioningHierarchy)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  id: '#ctor(Microsoft.Online.SharePoint.TenantAdministration.Tenant,PnP.Framework.Provisioning.Model.ProvisioningHierarchy,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)'
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: TokenParser(Tenant, ProvisioningHierarchy, ProvisioningTemplateApplyingInformation)
  nameWithType: TokenParser.TokenParser(Tenant, ProvisioningHierarchy, ProvisioningTemplateApplyingInformation)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.TokenParser(Microsoft.Online.SharePoint.TenantAdministration.Tenant, PnP.Framework.Provisioning.Model.ProvisioningHierarchy, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 127
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  syntax:
    content: public TokenParser(Tenant tenant, ProvisioningHierarchy hierarchy, ProvisioningTemplateApplyingInformation applyingInformation)
    parameters:
    - id: tenant
      type: Microsoft.Online.SharePoint.TenantAdministration.Tenant
    - id: hierarchy
      type: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
    - id: applyingInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
    content.vb: Public Sub New(tenant As Tenant, hierarchy As ProvisioningHierarchy, applyingInformation As ProvisioningTemplateApplyingInformation)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: '#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate)'
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: TokenParser(Web, ProvisioningTemplate)
  nameWithType: TokenParser.TokenParser(Web, ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.TokenParser(Microsoft.SharePoint.Client.Web, PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 166
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public TokenParser(Web web, ProvisioningTemplate template)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: A SharePoint site or subsite
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: a provisioning template
    content.vb: Public Sub New(web As Web, template As ProvisioningTemplate)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  id: '#ctor(Microsoft.SharePoint.Client.Web,PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)'
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: TokenParser(Web, ProvisioningTemplate, ProvisioningTemplateApplyingInformation)
  nameWithType: TokenParser.TokenParser(Web, ProvisioningTemplate, ProvisioningTemplateApplyingInformation)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.TokenParser(Microsoft.SharePoint.Client.Web, PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 177
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public TokenParser(Web web, ProvisioningTemplate template, ProvisioningTemplateApplyingInformation applyingInformation)
    parameters:
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: A SharePoint site or subsite
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: a provisioning template
    - id: applyingInformation
      type: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
      description: The provisioning template applying information
    content.vb: Public Sub New(web As Web, template As ProvisioningTemplate, applyingInformation As ProvisioningTemplateApplyingInformation)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues(System.String)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues(System.String)
  id: GetResourceTokenResourceValues(System.String)
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: GetResourceTokenResourceValues(String)
  nameWithType: TokenParser.GetResourceTokenResourceValues(String)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetResourceTokenResourceValues
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 816
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nGets list of token resource values\n"
  example: []
  syntax:
    content: public List<Tuple<string, string>> GetResourceTokenResourceValues(string tokenValue)
    parameters:
    - id: tokenValue
      type: System.String
      description: Token value
    return:
      type: System.Collections.Generic.List{System.Tuple{System.String,System.String}}
      description: Returns list of token resource values
    content.vb: Public Function GetResourceTokenResourceValues(tokenValue As String) As List(Of Tuple(Of String, String))
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String)
  id: ParseString(System.String)
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: ParseString(String)
  nameWithType: TokenParser.ParseString(String)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParseString
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 838
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nParses the string\n"
  example: []
  syntax:
    content: public string ParseString(string input)
    parameters:
    - id: input
      type: System.String
      description: input string to parse
    return:
      type: System.String
      description: Returns parsed string
    content.vb: Public Function ParseString(input As String) As String
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens(System.String)
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens(System.String)
  id: GetLeftOverTokens(System.String)
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: GetLeftOverTokens(String)
  nameWithType: TokenParser.GetLeftOverTokens(String)
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetLeftOverTokens
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 849
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nGets left over tokens\n"
  example: []
  syntax:
    content: public IEnumerable<string> GetLeftOverTokens(string input)
    parameters:
    - id: input
      type: System.String
      description: input string
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Returns collections of left over tokens
    content.vb: Public Function GetLeftOverTokens(input As String) As IEnumerable(Of String)
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  id: ParseStringWebPart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: ParseStringWebPart(String, Web, String[])
  nameWithType: TokenParser.ParseStringWebPart(String, Web, String[])
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart(System.String, Microsoft.SharePoint.Client.Web, System.String[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParseStringWebPart
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 871
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nParses given string for a webpart making sure we only parse the token for a given web\n"
  example: []
  syntax:
    content: public string ParseStringWebPart(string input, Web web, params string[] tokensToSkip)
    parameters:
    - id: input
      type: System.String
      description: input string
    - id: web
      type: Microsoft.SharePoint.Client.Web
      description: filters the tokens on web id
    - id: tokensToSkip
      type: System.String[]
      description: array of tokens to skip
    return:
      type: System.String
      description: Returns parsed string for a webpart
    content.vb: Public Function ParseStringWebPart(input As String, web As Web, ParamArray tokensToSkip As String()) As String
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart*
  nameWithType.vb: TokenParser.ParseStringWebPart(String, Web, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart(System.String, Microsoft.SharePoint.Client.Web, System.String())
  name.vb: ParseStringWebPart(String, Web, String())
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String,System.String[])
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String,System.String[])
  id: ParseString(System.String,System.String[])
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: ParseString(String, String[])
  nameWithType: TokenParser.ParseString(String, String[])
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParseString
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 989
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nParses given string\n"
  example: []
  syntax:
    content: public string ParseString(string input, params string[] tokensToSkip)
    parameters:
    - id: input
      type: System.String
      description: input string
    - id: tokensToSkip
      type: System.String[]
      description: array of tokens to skip
    return:
      type: System.String
      description: Returns parsed string
    content.vb: Public Function ParseString(input As String, ParamArray tokensToSkip As String()) As String
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString*
  nameWithType.vb: TokenParser.ParseString(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString(System.String, System.String())
  name.vb: ParseString(String, String())
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  id: ParseXmlStringWebpart(System.String,Microsoft.SharePoint.Client.Web,System.String[])
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: ParseXmlStringWebpart(String, Web, String[])
  nameWithType: TokenParser.ParseXmlStringWebpart(String, Web, String[])
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart(System.String, Microsoft.SharePoint.Client.Web, System.String[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParseXmlStringWebpart
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 1054
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  syntax:
    content: public string ParseXmlStringWebpart(string inputXml, Web web, params string[] tokensToSkip)
    parameters:
    - id: inputXml
      type: System.String
    - id: web
      type: Microsoft.SharePoint.Client.Web
    - id: tokensToSkip
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Function ParseXmlStringWebpart(inputXml As String, web As Web, ParamArray tokensToSkip As String()) As String
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart*
  nameWithType.vb: TokenParser.ParseXmlStringWebpart(String, Web, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart(System.String, Microsoft.SharePoint.Client.Web, System.String())
  name.vb: ParseXmlStringWebpart(String, Web, String())
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString(System.String,System.String[])
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString(System.String,System.String[])
  id: ParseXmlString(System.String,System.String[])
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: ParseXmlString(String, String[])
  nameWithType: TokenParser.ParseXmlString(String, String[])
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParseXmlString
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 1088
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  syntax:
    content: public string ParseXmlString(string inputXml, params string[] tokensToSkip)
    parameters:
    - id: inputXml
      type: System.String
    - id: tokensToSkip
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Function ParseXmlString(inputXml As String, ParamArray tokensToSkip As String()) As String
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString*
  nameWithType.vb: TokenParser.ParseXmlString(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString(System.String, System.String())
  name.vb: ParseXmlString(String, String())
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone
  commentId: M:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone
  id: Clone
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TokenParser.Clone()
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Clone
    path: ../src/lib/PnP.Framework/Provisioning/ObjectHandlers/TokenParser.cs
    startLine: 1254
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.ObjectHandlers
  summary: "\nClones the current TokenParser instance into a new instance\n"
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: New cloned instance of the TokenParser
    content.vb: Public Function Clone As Object
  overload: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.ObjectHandlers
  commentId: N:PnP.Framework.Provisioning.ObjectHandlers
  name: PnP.Framework.Provisioning.ObjectHandlers
  nameWithType: PnP.Framework.Provisioning.ObjectHandlers
  fullName: PnP.Framework.Provisioning.ObjectHandlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<TokenParser>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TokenParser>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.ObjectHandlers.TokenParser>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of TokenParser)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.ObjectHandlers.TokenParser)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of TokenParser)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<TokenParser>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TokenParser>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.ObjectHandlers.TokenParser>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of TokenParser)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of TokenParser)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.ObjectHandlers.TokenParser)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.ObjectHandlers.TokenParser,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<TokenParser, T>(Expression<Func<TokenParser, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TokenParser, T>(Expression<Func<TokenParser, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.ObjectHandlers.TokenParser, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.ObjectHandlers.TokenParser, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TokenParser, T)(Expression(Of Func(Of TokenParser, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.ObjectHandlers.TokenParser, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.ObjectHandlers.TokenParser, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TokenParser, T)(Expression(Of Func(Of TokenParser, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TokenParser, T>
    nameWithType: ObjectExtensions.Set<TokenParser, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.ObjectHandlers.TokenParser, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
    name: TokenParser
    nameWithType: TokenParser
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TokenParser, T)
    nameWithType: ObjectExtensions.Set(Of TokenParser, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.ObjectHandlers.TokenParser, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
    name: TokenParser
    nameWithType: TokenParser
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: Microsoft.SharePoint.Client.Web
  commentId: T:Microsoft.SharePoint.Client.Web
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: Web
  nameWithType: Web
  fullName: Microsoft.SharePoint.Client.Web
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens
  name: Tokens
  nameWithType: TokenParser.Tokens
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Tokens
- uid: System.Collections.Generic.List{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TokenDefinition>
  nameWithType: List<TokenDefinition>
  fullName: System.Collections.Generic.List<PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition>
  nameWithType.vb: List(Of TokenDefinition)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition)
  name.vb: List(Of TokenDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
    name: TokenDefinition
    nameWithType: TokenDefinition
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
    name: TokenDefinition
    nameWithType: TokenDefinition
    fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken
  name: AddToken
  nameWithType: TokenParser.AddToken
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.AddToken
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
  parent: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  name: TokenDefinition
  nameWithType: TokenDefinition
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions.TokenDefinition
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  commentId: N:PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  name: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  nameWithType: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenDefinitions
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase
  name: Rebase
  nameWithType: TokenParser.Rebase
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Rebase
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
  commentId: T:PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
  parent: PnP.Framework.Provisioning.ObjectHandlers
  name: ProvisioningTemplateApplyingInformation
  nameWithType: ProvisioningTemplateApplyingInformation
  fullName: PnP.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.#ctor
  name: TokenParser
  nameWithType: TokenParser.TokenParser
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.TokenParser
- uid: Microsoft.Online.SharePoint.TenantAdministration.Tenant
  commentId: T:Microsoft.Online.SharePoint.TenantAdministration.Tenant
  parent: Microsoft.Online.SharePoint.TenantAdministration
  isExternal: true
  name: Tenant
  nameWithType: Tenant
  fullName: Microsoft.Online.SharePoint.TenantAdministration.Tenant
- uid: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningHierarchy
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningHierarchy
  nameWithType: ProvisioningHierarchy
  fullName: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
- uid: Microsoft.Online.SharePoint.TenantAdministration
  commentId: N:Microsoft.Online.SharePoint.TenantAdministration
  isExternal: true
  name: Microsoft.Online.SharePoint.TenantAdministration
  nameWithType: Microsoft.Online.SharePoint.TenantAdministration
  fullName: Microsoft.Online.SharePoint.TenantAdministration
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues
  name: GetResourceTokenResourceValues
  nameWithType: TokenParser.GetResourceTokenResourceValues
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetResourceTokenResourceValues
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Tuple{System.String,System.String}}
  commentId: T:System.Collections.Generic.List{System.Tuple{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Tuple<String, String>>
  nameWithType: List<Tuple<String, String>>
  fullName: System.Collections.Generic.List<System.Tuple<System.String, System.String>>
  nameWithType.vb: List(Of Tuple(Of String, String))
  fullName.vb: System.Collections.Generic.List(Of System.Tuple(Of System.String, System.String))
  name.vb: List(Of Tuple(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString
  name: ParseString
  nameWithType: TokenParser.ParseString
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseString
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens
  name: GetLeftOverTokens
  nameWithType: TokenParser.GetLeftOverTokens
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.GetLeftOverTokens
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart
  name: ParseStringWebPart
  nameWithType: TokenParser.ParseStringWebPart
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseStringWebPart
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart
  name: ParseXmlStringWebpart
  nameWithType: TokenParser.ParseXmlStringWebpart
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlStringWebpart
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString
  name: ParseXmlString
  nameWithType: TokenParser.ParseXmlString
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.ParseXmlString
- uid: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone*
  commentId: Overload:PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone
  name: Clone
  nameWithType: TokenParser.Clone
  fullName: PnP.Framework.Provisioning.ObjectHandlers.TokenParser.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

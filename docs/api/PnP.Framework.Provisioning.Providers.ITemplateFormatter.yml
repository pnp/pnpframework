### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  commentId: T:PnP.Framework.Provisioning.Providers.ITemplateFormatter
  id: ITemplateFormatter
  parent: PnP.Framework.Provisioning.Providers
  children:
  - PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize(PnP.Framework.Provisioning.Providers.TemplateProviderBase)
  - PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid(System.IO.Stream)
  - PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream)
  - PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream,System.String)
  langs:
  - csharp
  - vb
  name: ITemplateFormatter
  nameWithType: ITemplateFormatter
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  type: Interface
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ITemplateFormatter
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nInterface for basic capabilites that any Template Formatter should provide/support\n"
  example: []
  syntax:
    content: public interface ITemplateFormatter
    content.vb: Public Interface ITemplateFormatter
  extensionMethods:
  - PnP.Framework.Provisioning.Providers.ITemplateFormatter.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Providers.ITemplateFormatter.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.ITemplateFormatter,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize(PnP.Framework.Provisioning.Providers.TemplateProviderBase)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize(PnP.Framework.Provisioning.Providers.TemplateProviderBase)
  id: Initialize(PnP.Framework.Provisioning.Providers.TemplateProviderBase)
  parent: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  langs:
  - csharp
  - vb
  name: Initialize(TemplateProviderBase)
  nameWithType: ITemplateFormatter.Initialize(TemplateProviderBase)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize(PnP.Framework.Provisioning.Providers.TemplateProviderBase)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Initialize
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod to initialize the formatter with the proper TemplateProvider instance\n"
  example: []
  syntax:
    content: void Initialize(TemplateProviderBase provider)
    parameters:
    - id: provider
      type: PnP.Framework.Provisioning.Providers.TemplateProviderBase
      description: The provider that is calling the current template formatter
    content.vb: Sub Initialize(provider As TemplateProviderBase)
  overload: PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize*
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid(System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid(System.IO.Stream)
  id: IsValid(System.IO.Stream)
  parent: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  langs:
  - csharp
  - vb
  name: IsValid(Stream)
  nameWithType: ITemplateFormatter.IsValid(Stream)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IsValid
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod to validate the content of a formatted template instance\n"
  example: []
  syntax:
    content: bool IsValid(Stream template)
    parameters:
    - id: template
      type: System.IO.Stream
      description: The formatted template instance as a Stream
    return:
      type: System.Boolean
      description: Boolean result of the validation
    content.vb: Function IsValid(template As Stream) As Boolean
  overload: PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid*
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: ToFormattedTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  langs:
  - csharp
  - vb
  name: ToFormattedTemplate(ProvisioningTemplate)
  nameWithType: ITemplateFormatter.ToFormattedTemplate(ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToFormattedTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
    startLine: 29
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod to format a ProvisioningTemplate into a formatted template\n"
  example: []
  syntax:
    content: Stream ToFormattedTemplate(ProvisioningTemplate template)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The input ProvisioningTemplate
    return:
      type: System.IO.Stream
      description: The output formatted template as a Stream
    content.vb: Function ToFormattedTemplate(template As ProvisioningTemplate) As Stream
  overload: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate*
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream)
  id: ToProvisioningTemplate(System.IO.Stream)
  parent: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  langs:
  - csharp
  - vb
  name: ToProvisioningTemplate(Stream)
  nameWithType: ITemplateFormatter.ToProvisioningTemplate(Stream)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToProvisioningTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
    startLine: 36
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod to convert a formatted template into a ProvisioningTemplate\n"
  example: []
  syntax:
    content: ProvisioningTemplate ToProvisioningTemplate(Stream template)
    parameters:
    - id: template
      type: System.IO.Stream
      description: The input formatted template as a Stream
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The output ProvisioningTemplate
    content.vb: Function ToProvisioningTemplate(template As Stream) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate*
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream,System.String)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream,System.String)
  id: ToProvisioningTemplate(System.IO.Stream,System.String)
  parent: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  langs:
  - csharp
  - vb
  name: ToProvisioningTemplate(Stream, String)
  nameWithType: ITemplateFormatter.ToProvisioningTemplate(Stream, String)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToProvisioningTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateFormatter.cs
    startLine: 44
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod to convert a formatted template into a ProvisioningTemplate, based on a specific ID\n"
  example: []
  syntax:
    content: ProvisioningTemplate ToProvisioningTemplate(Stream template, string identifier)
    parameters:
    - id: template
      type: System.IO.Stream
      description: The input formatted template as a Stream
    - id: identifier
      type: System.String
      description: The identifier of the template to convert
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The output ProvisioningTemplate
    content.vb: Function ToProvisioningTemplate(template As Stream, identifier As String) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate*
references:
- uid: PnP.Framework.Provisioning.Providers
  commentId: N:PnP.Framework.Provisioning.Providers
  name: PnP.Framework.Provisioning.Providers
  nameWithType: PnP.Framework.Provisioning.Providers
  fullName: PnP.Framework.Provisioning.Providers
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ITemplateFormatter>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ITemplateFormatter>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.ITemplateFormatter>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ITemplateFormatter)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.ITemplateFormatter)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ITemplateFormatter)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ITemplateFormatter>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ITemplateFormatter>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.ITemplateFormatter>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ITemplateFormatter)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ITemplateFormatter)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.ITemplateFormatter,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ITemplateFormatter, T>(Expression<Func<ITemplateFormatter, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ITemplateFormatter, T>(Expression<Func<ITemplateFormatter, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.ITemplateFormatter, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Providers.ITemplateFormatter, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ITemplateFormatter, T)(Expression(Of Func(Of ITemplateFormatter, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.ITemplateFormatter, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Providers.ITemplateFormatter, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ITemplateFormatter, T)(Expression(Of Func(Of ITemplateFormatter, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ITemplateFormatter, T>
    nameWithType: ObjectExtensions.Set<ITemplateFormatter, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.ITemplateFormatter, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter
    name: ITemplateFormatter
    nameWithType: ITemplateFormatter
    fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ITemplateFormatter, T)
    nameWithType: ObjectExtensions.Set(Of ITemplateFormatter, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.ITemplateFormatter, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter
    name: ITemplateFormatter
    nameWithType: ITemplateFormatter
    fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize
  name: Initialize
  nameWithType: ITemplateFormatter.Initialize
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.Initialize
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  commentId: T:PnP.Framework.Provisioning.Providers.TemplateProviderBase
  parent: PnP.Framework.Provisioning.Providers
  name: TemplateProviderBase
  nameWithType: TemplateProviderBase
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid
  name: IsValid
  nameWithType: ITemplateFormatter.IsValid
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.IsValid
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate
  name: ToFormattedTemplate
  nameWithType: ITemplateFormatter.ToFormattedTemplate
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate
  name: ToProvisioningTemplate
  nameWithType: ITemplateFormatter.ToProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

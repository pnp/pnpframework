### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  commentId: T:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  id: ITemplateProviderExtension
  parent: PnP.Framework.Provisioning.Providers
  children:
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize(System.Object)
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate(System.IO.Stream)
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate(System.IO.Stream)
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
  langs:
  - csharp
  - vb
  name: ITemplateProviderExtension
  nameWithType: ITemplateProviderExtension
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  type: Interface
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ITemplateProviderExtension
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nInterface for extending the XMLTemplateProvider while retrieving a template\n"
  example: []
  syntax:
    content: public interface ITemplateProviderExtension
    content.vb: Public Interface ITemplateProviderExtension
  extensionMethods:
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.ITemplateProviderExtension,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize(System.Object)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: Initialize(Object)
  nameWithType: ITemplateProviderExtension.Initialize(Object)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize(System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Initialize
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nInitialization method to setup the extension object\n"
  example: []
  syntax:
    content: void Initialize(object settings)
    parameters:
    - id: settings
      type: System.Object
      description: ''
    content.vb: Sub Initialize(settings As Object)
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize*
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate(System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate(System.IO.Stream)
  id: PreProcessGetTemplate(System.IO.Stream)
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: PreProcessGetTemplate(Stream)
  nameWithType: ITemplateProviderExtension.PreProcessGetTemplate(Stream)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PreProcessGetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod invoked before deserializing the template from the source repository\n"
  example: []
  syntax:
    content: Stream PreProcessGetTemplate(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    return:
      type: System.IO.Stream
      description: The resulting stream, after pre-processing
    content.vb: Function PreProcessGetTemplate(stream As Stream) As Stream
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate*
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: PostProcessGetTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: PostProcessGetTemplate(ProvisioningTemplate)
  nameWithType: ITemplateProviderExtension.PostProcessGetTemplate(ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PostProcessGetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 29
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod invoked after deserializing the template from the source repository\n"
  example: []
  syntax:
    content: ProvisioningTemplate PostProcessGetTemplate(ProvisioningTemplate template)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The just deserialized template
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The resulting template, after post-processing
    content.vb: Function PostProcessGetTemplate(template As ProvisioningTemplate) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate*
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: PreProcessSaveTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: PreProcessSaveTemplate(ProvisioningTemplate)
  nameWithType: ITemplateProviderExtension.PreProcessSaveTemplate(ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PreProcessSaveTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 36
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod invoked before serializing the template and before it is saved onto the target repository\n"
  example: []
  syntax:
    content: ProvisioningTemplate PreProcessSaveTemplate(ProvisioningTemplate template)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The template that is going to be serialized
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The resulting template, after pre-processing
    content.vb: Function PreProcessSaveTemplate(template As ProvisioningTemplate) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate*
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate(System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate(System.IO.Stream)
  id: PostProcessSaveTemplate(System.IO.Stream)
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: PostProcessSaveTemplate(Stream)
  nameWithType: ITemplateProviderExtension.PostProcessSaveTemplate(Stream)
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PostProcessSaveTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 43
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nMethod invoked after serializing the template and before it is saved onto the target repository\n"
  example: []
  syntax:
    content: Stream PostProcessSaveTemplate(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    return:
      type: System.IO.Stream
      description: The resulting stream, after pre-processing
    content.vb: Function PostProcessSaveTemplate(stream As Stream) As Stream
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate*
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing
  commentId: P:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing
  id: SupportsGetTemplatePreProcessing
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: SupportsGetTemplatePreProcessing
  nameWithType: ITemplateProviderExtension.SupportsGetTemplatePreProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SupportsGetTemplatePreProcessing
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 48
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nDeclares whether the object supports pre-processing during GetTemplate\n"
  example: []
  syntax:
    content: bool SupportsGetTemplatePreProcessing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsGetTemplatePreProcessing As Boolean
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing
  commentId: P:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing
  id: SupportsGetTemplatePostProcessing
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: SupportsGetTemplatePostProcessing
  nameWithType: ITemplateProviderExtension.SupportsGetTemplatePostProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SupportsGetTemplatePostProcessing
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 53
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nDeclares whether the object supports post-processing during GetTemplate\n"
  example: []
  syntax:
    content: bool SupportsGetTemplatePostProcessing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsGetTemplatePostProcessing As Boolean
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
  commentId: P:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
  id: SupportsSaveTemplatePreProcessing
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: SupportsSaveTemplatePreProcessing
  nameWithType: ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SupportsSaveTemplatePreProcessing
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 58
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nDeclares whether the object supports pre-processing during SaveTemplate\n"
  example: []
  syntax:
    content: bool SupportsSaveTemplatePreProcessing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsSaveTemplatePreProcessing As Boolean
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing
  commentId: P:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing
  id: SupportsSaveTemplatePostProcessing
  parent: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  langs:
  - csharp
  - vb
  name: SupportsSaveTemplatePostProcessing
  nameWithType: ITemplateProviderExtension.SupportsSaveTemplatePostProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SupportsSaveTemplatePostProcessing
    path: ../src/lib/PnP.Framework/Provisioning/Providers/ITemplateProviderExtension.cs
    startLine: 63
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nDeclares whether the object supports post-processing during SaveTemplate\n"
  example: []
  syntax:
    content: bool SupportsSaveTemplatePostProcessing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsSaveTemplatePostProcessing As Boolean
  overload: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: PnP.Framework.Provisioning.Providers
  commentId: N:PnP.Framework.Provisioning.Providers
  name: PnP.Framework.Provisioning.Providers
  nameWithType: PnP.Framework.Provisioning.Providers
  fullName: PnP.Framework.Provisioning.Providers
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ITemplateProviderExtension>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ITemplateProviderExtension>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.ITemplateProviderExtension>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ITemplateProviderExtension)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.ITemplateProviderExtension)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ITemplateProviderExtension)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ITemplateProviderExtension>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ITemplateProviderExtension>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.ITemplateProviderExtension>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ITemplateProviderExtension)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ITemplateProviderExtension)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.ITemplateProviderExtension)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.ITemplateProviderExtension,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ITemplateProviderExtension, T>(Expression<Func<ITemplateProviderExtension, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ITemplateProviderExtension, T>(Expression<Func<ITemplateProviderExtension, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.ITemplateProviderExtension, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Providers.ITemplateProviderExtension, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ITemplateProviderExtension, T)(Expression(Of Func(Of ITemplateProviderExtension, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.ITemplateProviderExtension, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Providers.ITemplateProviderExtension, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ITemplateProviderExtension, T)(Expression(Of Func(Of ITemplateProviderExtension, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ITemplateProviderExtension, T>
    nameWithType: ObjectExtensions.Set<ITemplateProviderExtension, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.ITemplateProviderExtension, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
    name: ITemplateProviderExtension
    nameWithType: ITemplateProviderExtension
    fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ITemplateProviderExtension, T)
    nameWithType: ObjectExtensions.Set(Of ITemplateProviderExtension, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.ITemplateProviderExtension, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
    name: ITemplateProviderExtension
    nameWithType: ITemplateProviderExtension
    fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize
  name: Initialize
  nameWithType: ITemplateProviderExtension.Initialize
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.Initialize
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate
  name: PreProcessGetTemplate
  nameWithType: ITemplateProviderExtension.PreProcessGetTemplate
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessGetTemplate
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate
  name: PostProcessGetTemplate
  nameWithType: ITemplateProviderExtension.PostProcessGetTemplate
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessGetTemplate
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate
  name: PreProcessSaveTemplate
  nameWithType: ITemplateProviderExtension.PreProcessSaveTemplate
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PreProcessSaveTemplate
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate
  name: PostProcessSaveTemplate
  nameWithType: ITemplateProviderExtension.PostProcessSaveTemplate
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.PostProcessSaveTemplate
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing
  name: SupportsGetTemplatePreProcessing
  nameWithType: ITemplateProviderExtension.SupportsGetTemplatePreProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePreProcessing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing
  name: SupportsGetTemplatePostProcessing
  nameWithType: ITemplateProviderExtension.SupportsGetTemplatePostProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsGetTemplatePostProcessing
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
  name: SupportsSaveTemplatePreProcessing
  nameWithType: ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePreProcessing
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing*
  commentId: Overload:PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing
  name: SupportsSaveTemplatePostProcessing
  nameWithType: ITemplateProviderExtension.SupportsSaveTemplatePostProcessing
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension.SupportsSaveTemplatePostProcessing

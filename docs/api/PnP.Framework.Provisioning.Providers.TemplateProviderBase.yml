### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  commentId: T:PnP.Framework.Provisioning.Providers.TemplateProviderBase
  id: TemplateProviderBase
  parent: PnP.Framework.Provisioning.Providers
  children:
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor(PnP.Framework.Provisioning.Connectors.FileConnectorBase)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete(System.String)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy(System.String)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates(PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri
  langs:
  - csharp
  - vb
  name: TemplateProviderBase
  nameWithType: TemplateProviderBase
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: TemplateProviderBase
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nHandles methods for Template Provider\n"
  example: []
  syntax:
    content: public abstract class TemplateProviderBase
    content.vb: Public MustInherit Class TemplateProviderBase
  inheritance:
  - System.Object
  derivedClasses:
  - PnP.Framework.Provisioning.Providers.Json.JsonTemplateProvider
  - PnP.Framework.Provisioning.Providers.Markdown.MarkdownTemplateProvider
  - PnP.Framework.Provisioning.Providers.Xml.XMLTemplateProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Providers.TemplateProviderBase.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.TemplateProviderBase,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor
  id: '#ctor'
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: TemplateProviderBase()
  nameWithType: TemplateProviderBase.TemplateProviderBase()
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.TemplateProviderBase()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nDefault Constructor\n"
  example: []
  syntax:
    content: public TemplateProviderBase()
    content.vb: Public Sub New
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor(PnP.Framework.Provisioning.Connectors.FileConnectorBase)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor(PnP.Framework.Provisioning.Connectors.FileConnectorBase)
  id: '#ctor(PnP.Framework.Provisioning.Connectors.FileConnectorBase)'
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: TemplateProviderBase(FileConnectorBase)
  nameWithType: TemplateProviderBase.TemplateProviderBase(FileConnectorBase)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.TemplateProviderBase(PnP.Framework.Provisioning.Connectors.FileConnectorBase)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 33
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public TemplateProviderBase(FileConnectorBase connector)
    parameters:
    - id: connector
      type: PnP.Framework.Provisioning.Connectors.FileConnectorBase
      description: ''
    content.vb: Public Sub New(connector As FileConnectorBase)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters
  commentId: P:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters
  id: Parameters
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: TemplateProviderBase.Parameters
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Parameters
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 44
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nTemplate parameters\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Parameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public ReadOnly Property Parameters As Dictionary(Of String, String)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave
  commentId: P:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave
  id: SupportsSave
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SupportsSave
  nameWithType: TemplateProviderBase.SupportsSave
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SupportsSave
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 55
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSupports template save\n"
  example: []
  syntax:
    content: public virtual bool SupportsSave { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property SupportsSave As Boolean
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete
  commentId: P:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete
  id: SupportsDelete
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SupportsDelete
  nameWithType: TemplateProviderBase.SupportsDelete
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SupportsDelete
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 66
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSupports template delete\n"
  example: []
  syntax:
    content: public virtual bool SupportsDelete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property SupportsDelete As Boolean
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector
  commentId: P:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector
  id: Connector
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Connector
  nameWithType: TemplateProviderBase.Connector
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Connector
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 77
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nFile Connector\n"
  example: []
  syntax:
    content: public virtual FileConnectorBase Connector { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Connectors.FileConnectorBase
    content.vb: Public Overridable Property Connector As FileConnectorBase
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri
  commentId: P:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri
  id: Uri
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: TemplateProviderBase.Uri
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Uri
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 92
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nUri of site\n"
  example: []
  syntax:
    content: public string Uri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Uri As String
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates
  id: GetTemplates
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplates()
  nameWithType: TemplateProviderBase.GetTemplates()
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplates
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 111
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets list of ProvisioningTemplates\n"
  example: []
  syntax:
    content: public abstract List<ProvisioningTemplate> GetTemplates()
    return:
      type: System.Collections.Generic.List{PnP.Framework.Provisioning.Model.ProvisioningTemplate}
      description: Returns collection of ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplates As List(Of ProvisioningTemplate)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates(PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates(PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: GetTemplates(PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplates(ITemplateFormatter)
  nameWithType: TemplateProviderBase.GetTemplates(ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates(PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplates
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 118
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets list of ProvisioningTemplates\n"
  example: []
  syntax:
    content: public abstract List<ProvisioningTemplate> GetTemplates(ITemplateFormatter formatter)
    parameters:
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template formatter
    return:
      type: System.Collections.Generic.List{PnP.Framework.Provisioning.Model.ProvisioningTemplate}
      description: Returns collection of ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplates(formatter As ITemplateFormatter) As List(Of ProvisioningTemplate)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy(System.String)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy(System.String)
  id: GetHierarchy(System.String)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetHierarchy(String)
  nameWithType: TemplateProviderBase.GetHierarchy(String)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetHierarchy
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 125
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningHierarchy\n"
  example: []
  syntax:
    content: public abstract ProvisioningHierarchy GetHierarchy(string uri)
    parameters:
    - id: uri
      type: System.String
      description: The source uri
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
      description: Returns a ProvisioningHierarchy
    content.vb: Public MustOverride Function GetHierarchy(uri As String) As ProvisioningHierarchy
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String)
  id: GetTemplate(System.String)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(String)
  nameWithType: TemplateProviderBase.GetTemplate(String)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 132
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(string uri)
    parameters:
    - id: uri
      type: System.String
      description: The source uri
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(uri As String) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(String, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.GetTemplate(String, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 140
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(string uri, ITemplateProviderExtension[] extensions)
    parameters:
    - id: uri
      type: System.String
      description: The source uri
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(uri As String, extensions As ITemplateProviderExtension()) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  nameWithType.vb: TemplateProviderBase.GetTemplate(String, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: GetTemplate(String, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String)
  id: GetTemplate(System.String,System.String)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(String, String)
  nameWithType: TemplateProviderBase.GetTemplate(String, String)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 148
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(string uri, string identifier)
    parameters:
    - id: uri
      type: System.String
      description: The source uri
    - id: identifier
      type: System.String
      description: ProvisioningTemplate identifier
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(uri As String, identifier As String) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: GetTemplate(System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(String, ITemplateFormatter)
  nameWithType: TemplateProviderBase.GetTemplate(String, ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 156
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(string uri, ITemplateFormatter formatter)
    parameters:
    - id: uri
      type: System.String
      description: The source uri
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template formatter
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(uri As String, formatter As ITemplateFormatter) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(String, String, ITemplateFormatter)
  nameWithType: TemplateProviderBase.GetTemplate(String, String, ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 165
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(string uri, string identifier, ITemplateFormatter formatter)
    parameters:
    - id: uri
      type: System.String
      description: The source uri
    - id: identifier
      type: System.String
      description: ProvisioningTemplate identifier
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template formatter
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(uri As String, identifier As String, formatter As ITemplateFormatter) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: GetTemplate(System.String,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(String, String, ITemplateFormatter, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.GetTemplate(String, String, ITemplateFormatter, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 175
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(string uri, string identifier, ITemplateFormatter formatter, ITemplateProviderExtension[] extensions)
    parameters:
    - id: uri
      type: System.String
      description: The source uri
    - id: identifier
      type: System.String
      description: ProvisioningTemplate identifier
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template formatter
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(uri As String, identifier As String, formatter As ITemplateFormatter, extensions As ITemplateProviderExtension()) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  nameWithType.vb: TemplateProviderBase.GetTemplate(String, String, ITemplateFormatter, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.String, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: GetTemplate(String, String, ITemplateFormatter, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream)
  id: GetTemplate(System.IO.Stream)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(Stream)
  nameWithType: TemplateProviderBase.GetTemplate(Stream)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 182
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(stream As Stream) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(Stream, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.GetTemplate(Stream, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 190
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(Stream stream, ITemplateProviderExtension[] extensions)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(stream As Stream, extensions As ITemplateProviderExtension()) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  nameWithType.vb: TemplateProviderBase.GetTemplate(Stream, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: GetTemplate(Stream, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String)
  id: GetTemplate(System.IO.Stream,System.String)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(Stream, String)
  nameWithType: TemplateProviderBase.GetTemplate(Stream, String)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 198
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(Stream stream, string identifier)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    - id: identifier
      type: System.String
      description: ProvisioningTemplate identifier
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(stream As Stream, identifier As String) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: GetTemplate(System.IO.Stream,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(Stream, ITemplateFormatter)
  nameWithType: TemplateProviderBase.GetTemplate(Stream, ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream, PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 206
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(Stream stream, ITemplateFormatter formatter)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template formatter
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(stream As Stream, formatter As ITemplateFormatter) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(Stream, String, ITemplateFormatter)
  nameWithType: TemplateProviderBase.GetTemplate(Stream, String, ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 215
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(Stream stream, string identifier, ITemplateFormatter formatter)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    - id: identifier
      type: System.String
      description: ProvisioningTemplate identifier
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template formatter
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(stream As Stream, identifier As String, formatter As ITemplateFormatter) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: GetTemplate(System.IO.Stream,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: GetTemplate(Stream, String, ITemplateFormatter, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.GetTemplate(Stream, String, ITemplateFormatter, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetTemplate
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 226
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nGets ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract ProvisioningTemplate GetTemplate(Stream stream, string identifier, ITemplateFormatter formatter, ITemplateProviderExtension[] extensions)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The source stream
    - id: identifier
      type: System.String
      description: ProvisioningTemplate identifier
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template formatter
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Returns a ProvisioningTemplate
    content.vb: Public MustOverride Function GetTemplate(stream As Stream, identifier As String, formatter As ITemplateFormatter, extensions As ITemplateProviderExtension()) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  nameWithType.vb: TemplateProviderBase.GetTemplate(Stream, String, ITemplateFormatter, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate(System.IO.Stream, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: GetTemplate(Stream, String, ITemplateFormatter, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  id: Save(PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Save(ProvisioningHierarchy)
  nameWithType: TemplateProviderBase.Save(ProvisioningHierarchy)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningHierarchy)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Save
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 232
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningHierarchy\n"
  example: []
  syntax:
    content: public abstract void Save(ProvisioningHierarchy hierarchy)
    parameters:
    - id: hierarchy
      type: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
      description: Provisioning Hierarchy
    content.vb: Public MustOverride Sub Save(hierarchy As ProvisioningHierarchy)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Save(ProvisioningTemplate)
  nameWithType: TemplateProviderBase.Save(ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Save
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 238
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void Save(ProvisioningTemplate template)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    content.vb: Public MustOverride Sub Save(template As ProvisioningTemplate)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Save(ProvisioningTemplate, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.Save(ProvisioningTemplate, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Save
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 245
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void Save(ProvisioningTemplate template, ITemplateProviderExtension[] extensions)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    content.vb: Public MustOverride Sub Save(template As ProvisioningTemplate, extensions As ITemplateProviderExtension())
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save*
  nameWithType.vb: TemplateProviderBase.Save(ProvisioningTemplate, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: Save(ProvisioningTemplate, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Save(ProvisioningTemplate, ITemplateFormatter)
  nameWithType: TemplateProviderBase.Save(ProvisioningTemplate, ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Save
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 252
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void Save(ProvisioningTemplate template, ITemplateFormatter formatter)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template Formatter
    content.vb: Public MustOverride Sub Save(template As ProvisioningTemplate, formatter As ITemplateFormatter)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Save(ProvisioningTemplate, ITemplateFormatter, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.Save(ProvisioningTemplate, ITemplateFormatter, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Save
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 260
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void Save(ProvisioningTemplate template, ITemplateFormatter formatter, ITemplateProviderExtension[] extensions)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template Formatter
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    content.vb: Public MustOverride Sub Save(template As ProvisioningTemplate, formatter As ITemplateFormatter, extensions As ITemplateProviderExtension())
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save*
  nameWithType.vb: TemplateProviderBase.Save(ProvisioningTemplate, ITemplateFormatter, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save(PnP.Framework.Provisioning.Model.ProvisioningTemplate, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: Save(ProvisioningTemplate, ITemplateFormatter, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: SaveAs(PnP.Framework.Provisioning.Model.ProvisioningHierarchy,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SaveAs(ProvisioningHierarchy, String, ITemplateFormatter)
  nameWithType: TemplateProviderBase.SaveAs(ProvisioningHierarchy, String, ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningHierarchy, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveAs
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 268
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningHierarchy\n"
  example: []
  syntax:
    content: public abstract void SaveAs(ProvisioningHierarchy hierarchy, string uri, ITemplateFormatter formatter = null)
    parameters:
    - id: hierarchy
      type: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
      description: Provisioning Hierarchy
    - id: uri
      type: System.String
      description: The target uri
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template Formatter
    content.vb: Public MustOverride Sub SaveAs(hierarchy As ProvisioningHierarchy, uri As String, formatter As ITemplateFormatter = Nothing)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String)
  id: SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SaveAs(ProvisioningTemplate, String)
  nameWithType: TemplateProviderBase.SaveAs(ProvisioningTemplate, String)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveAs
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 275
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void SaveAs(ProvisioningTemplate template, string uri)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    - id: uri
      type: System.String
      description: The target uri
    content.vb: Public MustOverride Sub SaveAs(template As ProvisioningTemplate, uri As String)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SaveAs(ProvisioningTemplate, String, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.SaveAs(ProvisioningTemplate, String, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveAs
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 283
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void SaveAs(ProvisioningTemplate template, string uri, ITemplateProviderExtension[] extensions)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    - id: uri
      type: System.String
      description: The target uri
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    content.vb: Public MustOverride Sub SaveAs(template As ProvisioningTemplate, uri As String, extensions As ITemplateProviderExtension())
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs*
  nameWithType.vb: TemplateProviderBase.SaveAs(ProvisioningTemplate, String, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: SaveAs(ProvisioningTemplate, String, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  id: SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SaveAs(ProvisioningTemplate, String, ITemplateFormatter)
  nameWithType: TemplateProviderBase.SaveAs(ProvisioningTemplate, String, ITemplateFormatter)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveAs
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 291
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void SaveAs(ProvisioningTemplate template, string uri, ITemplateFormatter formatter)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    - id: uri
      type: System.String
      description: The target uri
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template Formatter
    content.vb: Public MustOverride Sub SaveAs(template As ProvisioningTemplate, uri As String, formatter As ITemplateFormatter)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SaveAs(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.SaveAs(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveAs
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 300
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nSaves ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void SaveAs(ProvisioningTemplate template, string uri, ITemplateFormatter formatter, ITemplateProviderExtension[] extensions)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: Provisioning Template
    - id: uri
      type: System.String
      description: The target uri
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
      description: Provisioning Template Formatter
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: Collection of provisioning template extensions
    content.vb: Public MustOverride Sub SaveAs(template As ProvisioningTemplate, uri As String, formatter As ITemplateFormatter, extensions As ITemplateProviderExtension())
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs*
  nameWithType.vb: TemplateProviderBase.SaveAs(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: SaveAs(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete(System.String)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete(System.String)
  id: Delete(System.String)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: Delete(String)
  nameWithType: TemplateProviderBase.Delete(String)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Delete
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 306
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nDeletes ProvisioningTemplate\n"
  example: []
  syntax:
    content: public abstract void Delete(string uri)
    parameters:
    - id: uri
      type: System.String
      description: The target uri
    content.vb: Public MustOverride Sub Delete(uri As String)
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  id: SaveToConnector(PnP.Framework.Provisioning.Model.ProvisioningTemplate,System.String,PnP.Framework.Provisioning.Providers.ITemplateFormatter,PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: SaveToConnector(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension[])
  nameWithType: TemplateProviderBase.SaveToConnector(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension[])
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveToConnector
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 312
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  syntax:
    content: protected virtual void SaveToConnector(ProvisioningTemplate template, string uri, ITemplateFormatter formatter, ITemplateProviderExtension[] extensions)
    parameters:
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    - id: uri
      type: System.String
    - id: formatter
      type: PnP.Framework.Provisioning.Providers.ITemplateFormatter
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
    content.vb: Protected Overridable Sub SaveToConnector(template As ProvisioningTemplate, uri As String, formatter As ITemplateFormatter, extensions As ITemplateProviderExtension())
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector*
  nameWithType.vb: TemplateProviderBase.SaveToConnector(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector(PnP.Framework.Provisioning.Model.ProvisioningTemplate, System.String, PnP.Framework.Provisioning.Providers.ITemplateFormatter, PnP.Framework.Provisioning.Providers.ITemplateProviderExtension())
  name.vb: SaveToConnector(ProvisioningTemplate, String, ITemplateFormatter, ITemplateProviderExtension())
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: PreProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: PreProcessSaveTemplateExtensions(ITemplateProviderExtension[], ProvisioningTemplate)
  nameWithType: TemplateProviderBase.PreProcessSaveTemplateExtensions(ITemplateProviderExtension[], ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[], PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PreProcessSaveTemplateExtensions
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 341
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  summary: "\nThis method is invoked before calling the formatter to serialize the template\n"
  example: []
  syntax:
    content: protected virtual ProvisioningTemplate PreProcessSaveTemplateExtensions(ITemplateProviderExtension[] extensions, ProvisioningTemplate template)
    parameters:
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
      description: The list of custom extensions
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The template to serialize
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
      description: The template eventually updated by the custom extensions
    content.vb: Protected Overridable Function PreProcessSaveTemplateExtensions(extensions As ITemplateProviderExtension(), template As ProvisioningTemplate) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions*
  nameWithType.vb: TemplateProviderBase.PreProcessSaveTemplateExtensions(ITemplateProviderExtension(), ProvisioningTemplate)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension(), PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  name.vb: PreProcessSaveTemplateExtensions(ITemplateProviderExtension(), ProvisioningTemplate)
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  id: PostProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: PostProcessSaveTemplateExtensions(ITemplateProviderExtension[], Stream)
  nameWithType: TemplateProviderBase.PostProcessSaveTemplateExtensions(ITemplateProviderExtension[], Stream)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[], System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PostProcessSaveTemplateExtensions
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 357
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  syntax:
    content: protected Stream PostProcessSaveTemplateExtensions(ITemplateProviderExtension[] extensions, Stream stream)
    parameters:
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
    - id: stream
      type: System.IO.Stream
    return:
      type: System.IO.Stream
    content.vb: Protected Function PostProcessSaveTemplateExtensions(extensions As ITemplateProviderExtension(), stream As Stream) As Stream
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions*
  nameWithType.vb: TemplateProviderBase.PostProcessSaveTemplateExtensions(ITemplateProviderExtension(), Stream)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension(), System.IO.Stream)
  name.vb: PostProcessSaveTemplateExtensions(ITemplateProviderExtension(), Stream)
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  id: PreProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],System.IO.Stream)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: PreProcessGetTemplateExtensions(ITemplateProviderExtension[], Stream)
  nameWithType: TemplateProviderBase.PreProcessGetTemplateExtensions(ITemplateProviderExtension[], Stream)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[], System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PreProcessGetTemplateExtensions
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 377
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  syntax:
    content: protected Stream PreProcessGetTemplateExtensions(ITemplateProviderExtension[] extensions, Stream stream)
    parameters:
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
    - id: stream
      type: System.IO.Stream
    return:
      type: System.IO.Stream
    content.vb: Protected Function PreProcessGetTemplateExtensions(extensions As ITemplateProviderExtension(), stream As Stream) As Stream
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions*
  nameWithType.vb: TemplateProviderBase.PreProcessGetTemplateExtensions(ITemplateProviderExtension(), Stream)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension(), System.IO.Stream)
  name.vb: PreProcessGetTemplateExtensions(ITemplateProviderExtension(), Stream)
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  commentId: M:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  id: PostProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[],PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  parent: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  langs:
  - csharp
  - vb
  name: PostProcessGetTemplateExtensions(ITemplateProviderExtension[], ProvisioningTemplate)
  nameWithType: TemplateProviderBase.PostProcessGetTemplateExtensions(ITemplateProviderExtension[], ProvisioningTemplate)
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[], PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PostProcessGetTemplateExtensions
    path: ../src/lib/PnP.Framework/Provisioning/Providers/TemplateProviderBase.cs
    startLine: 397
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers
  syntax:
    content: protected ProvisioningTemplate PostProcessGetTemplateExtensions(ITemplateProviderExtension[] extensions, ProvisioningTemplate template)
    parameters:
    - id: extensions
      type: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
    - id: template
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    return:
      type: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    content.vb: Protected Function PostProcessGetTemplateExtensions(extensions As ITemplateProviderExtension(), template As ProvisioningTemplate) As ProvisioningTemplate
  overload: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions*
  nameWithType.vb: TemplateProviderBase.PostProcessGetTemplateExtensions(ITemplateProviderExtension(), ProvisioningTemplate)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions(PnP.Framework.Provisioning.Providers.ITemplateProviderExtension(), PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  name.vb: PostProcessGetTemplateExtensions(ITemplateProviderExtension(), ProvisioningTemplate)
references:
- uid: PnP.Framework.Provisioning.Providers
  commentId: N:PnP.Framework.Provisioning.Providers
  name: PnP.Framework.Provisioning.Providers
  nameWithType: PnP.Framework.Provisioning.Providers
  fullName: PnP.Framework.Provisioning.Providers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<TemplateProviderBase>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TemplateProviderBase>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.TemplateProviderBase>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of TemplateProviderBase)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.TemplateProviderBase)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of TemplateProviderBase)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<TemplateProviderBase>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<TemplateProviderBase>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.TemplateProviderBase>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of TemplateProviderBase)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of TemplateProviderBase)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.TemplateProviderBase)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.TemplateProviderBase,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<TemplateProviderBase, T>(Expression<Func<TemplateProviderBase, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TemplateProviderBase, T>(Expression<Func<TemplateProviderBase, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.TemplateProviderBase, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Providers.TemplateProviderBase, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TemplateProviderBase, T)(Expression(Of Func(Of TemplateProviderBase, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.TemplateProviderBase, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Providers.TemplateProviderBase, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TemplateProviderBase, T)(Expression(Of Func(Of TemplateProviderBase, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TemplateProviderBase, T>
    nameWithType: ObjectExtensions.Set<TemplateProviderBase, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.TemplateProviderBase, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase
    name: TemplateProviderBase
    nameWithType: TemplateProviderBase
    fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TemplateProviderBase, T)
    nameWithType: ObjectExtensions.Set(Of TemplateProviderBase, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.TemplateProviderBase, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase
    name: TemplateProviderBase
    nameWithType: TemplateProviderBase
    fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.#ctor
  name: TemplateProviderBase
  nameWithType: TemplateProviderBase.TemplateProviderBase
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.TemplateProviderBase
- uid: PnP.Framework.Provisioning.Connectors.FileConnectorBase
  commentId: T:PnP.Framework.Provisioning.Connectors.FileConnectorBase
  parent: PnP.Framework.Provisioning.Connectors
  name: FileConnectorBase
  nameWithType: FileConnectorBase
  fullName: PnP.Framework.Provisioning.Connectors.FileConnectorBase
- uid: PnP.Framework.Provisioning.Connectors
  commentId: N:PnP.Framework.Provisioning.Connectors
  name: PnP.Framework.Provisioning.Connectors
  nameWithType: PnP.Framework.Provisioning.Connectors
  fullName: PnP.Framework.Provisioning.Connectors
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters
  name: Parameters
  nameWithType: TemplateProviderBase.Parameters
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Parameters
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave
  name: SupportsSave
  nameWithType: TemplateProviderBase.SupportsSave
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsSave
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete
  name: SupportsDelete
  nameWithType: TemplateProviderBase.SupportsDelete
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SupportsDelete
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector
  name: Connector
  nameWithType: TemplateProviderBase.Connector
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Connector
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri
  name: Uri
  nameWithType: TemplateProviderBase.Uri
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates
  name: GetTemplates
  nameWithType: TemplateProviderBase.GetTemplates
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplates
- uid: System.Collections.Generic.List{PnP.Framework.Provisioning.Model.ProvisioningTemplate}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Provisioning.Model.ProvisioningTemplate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProvisioningTemplate>
  nameWithType: List<ProvisioningTemplate>
  fullName: System.Collections.Generic.List<PnP.Framework.Provisioning.Model.ProvisioningTemplate>
  nameWithType.vb: List(Of ProvisioningTemplate)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Provisioning.Model.ProvisioningTemplate)
  name.vb: List(Of ProvisioningTemplate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    name: ProvisioningTemplate
    nameWithType: ProvisioningTemplate
    fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
    name: ProvisioningTemplate
    nameWithType: ProvisioningTemplate
    fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.ITemplateFormatter
  commentId: T:PnP.Framework.Provisioning.Providers.ITemplateFormatter
  parent: PnP.Framework.Provisioning.Providers
  name: ITemplateFormatter
  nameWithType: ITemplateFormatter
  fullName: PnP.Framework.Provisioning.Providers.ITemplateFormatter
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy
  name: GetHierarchy
  nameWithType: TemplateProviderBase.GetHierarchy
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetHierarchy
- uid: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningHierarchy
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningHierarchy
  nameWithType: ProvisioningHierarchy
  fullName: PnP.Framework.Provisioning.Model.ProvisioningHierarchy
- uid: PnP.Framework.Provisioning.Model
  commentId: N:PnP.Framework.Provisioning.Model
  name: PnP.Framework.Provisioning.Model
  nameWithType: PnP.Framework.Provisioning.Model
  fullName: PnP.Framework.Provisioning.Model
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate
  name: GetTemplate
  nameWithType: TemplateProviderBase.GetTemplate
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.GetTemplate
- uid: PnP.Framework.Provisioning.Model.ProvisioningTemplate
  commentId: T:PnP.Framework.Provisioning.Model.ProvisioningTemplate
  parent: PnP.Framework.Provisioning.Model
  name: ProvisioningTemplate
  nameWithType: ProvisioningTemplate
  fullName: PnP.Framework.Provisioning.Model.ProvisioningTemplate
- uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
  isExternal: true
  name: ITemplateProviderExtension[]
  nameWithType: ITemplateProviderExtension[]
  fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension[]
  nameWithType.vb: ITemplateProviderExtension()
  fullName.vb: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension()
  name.vb: ITemplateProviderExtension()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
    name: ITemplateProviderExtension
    nameWithType: ITemplateProviderExtension
    fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
    name: ITemplateProviderExtension
    nameWithType: ITemplateProviderExtension
    fullName: PnP.Framework.Provisioning.Providers.ITemplateProviderExtension
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save
  name: Save
  nameWithType: TemplateProviderBase.Save
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Save
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs
  name: SaveAs
  nameWithType: TemplateProviderBase.SaveAs
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveAs
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete
  name: Delete
  nameWithType: TemplateProviderBase.Delete
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.Delete
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector
  name: SaveToConnector
  nameWithType: TemplateProviderBase.SaveToConnector
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.SaveToConnector
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions
  name: PreProcessSaveTemplateExtensions
  nameWithType: TemplateProviderBase.PreProcessSaveTemplateExtensions
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessSaveTemplateExtensions
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions
  name: PostProcessSaveTemplateExtensions
  nameWithType: TemplateProviderBase.PostProcessSaveTemplateExtensions
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessSaveTemplateExtensions
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions
  name: PreProcessGetTemplateExtensions
  nameWithType: TemplateProviderBase.PreProcessGetTemplateExtensions
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PreProcessGetTemplateExtensions
- uid: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions*
  commentId: Overload:PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions
  name: PostProcessGetTemplateExtensions
  nameWithType: TemplateProviderBase.PostProcessGetTemplateExtensions
  fullName: PnP.Framework.Provisioning.Providers.TemplateProviderBase.PostProcessGetTemplateExtensions

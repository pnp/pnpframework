### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  commentId: T:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  id: CalendarType
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002
  children:
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.ChineseLunar
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Gregorian
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianArabicCalendar
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianMiddleEastFrenchCalendar
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedEnglishCalendar
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedFrenchCalendar
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hebrew
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hijri
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Japan
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Korea
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.KoreaandJapaneseLunar
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.None
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.SakaEra
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Taiwan
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Thai
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.UmmalQura
  langs:
  - csharp
  - vb
  name: CalendarType
  nameWithType: CalendarType
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  type: Enum
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CalendarType
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10955
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: >-
      [Serializable]

      public enum CalendarType
    content.vb: >-
      <Serializable>

      Public Enum CalendarType
  extensionMethods:
  - System.Enum.System.EnumerationExtensions.Include``1({T})
  - System.Enum.System.EnumerationExtensions.Remove``1({T})
  - System.Enum.System.EnumerationExtensions.Has``1({T})
  - System.Enum.System.EnumerationExtensions.Missing``1({T})
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.None
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.None
  id: None
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: CalendarType.None
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.None
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: None
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10961
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: None = 0
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Gregorian
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Gregorian
  id: Gregorian
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: Gregorian
  nameWithType: CalendarType.Gregorian
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Gregorian
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Gregorian
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10964
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: Gregorian = 1
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Japan
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Japan
  id: Japan
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: Japan
  nameWithType: CalendarType.Japan
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Japan
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Japan
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10967
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: Japan = 2
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Taiwan
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Taiwan
  id: Taiwan
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: Taiwan
  nameWithType: CalendarType.Taiwan
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Taiwan
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Taiwan
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10970
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: Taiwan = 3
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Korea
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Korea
  id: Korea
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: Korea
  nameWithType: CalendarType.Korea
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Korea
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Korea
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10973
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: Korea = 4
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hijri
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hijri
  id: Hijri
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: Hijri
  nameWithType: CalendarType.Hijri
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hijri
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Hijri
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10976
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: Hijri = 5
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Thai
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Thai
  id: Thai
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: Thai
  nameWithType: CalendarType.Thai
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Thai
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Thai
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10979
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: Thai = 6
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hebrew
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hebrew
  id: Hebrew
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: Hebrew
  nameWithType: CalendarType.Hebrew
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.Hebrew
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Hebrew
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10982
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: Hebrew = 7
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianMiddleEastFrenchCalendar
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianMiddleEastFrenchCalendar
  id: GregorianMiddleEastFrenchCalendar
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: GregorianMiddleEastFrenchCalendar
  nameWithType: CalendarType.GregorianMiddleEastFrenchCalendar
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianMiddleEastFrenchCalendar
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GregorianMiddleEastFrenchCalendar
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10985
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: GregorianMiddleEastFrenchCalendar = 8
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianArabicCalendar
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianArabicCalendar
  id: GregorianArabicCalendar
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: GregorianArabicCalendar
  nameWithType: CalendarType.GregorianArabicCalendar
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianArabicCalendar
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GregorianArabicCalendar
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10989
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: GregorianArabicCalendar = 9
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedEnglishCalendar
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedEnglishCalendar
  id: GregorianTransliteratedEnglishCalendar
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: GregorianTransliteratedEnglishCalendar
  nameWithType: CalendarType.GregorianTransliteratedEnglishCalendar
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedEnglishCalendar
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GregorianTransliteratedEnglishCalendar
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10993
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: GregorianTransliteratedEnglishCalendar = 10
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedFrenchCalendar
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedFrenchCalendar
  id: GregorianTransliteratedFrenchCalendar
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: GregorianTransliteratedFrenchCalendar
  nameWithType: CalendarType.GregorianTransliteratedFrenchCalendar
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.GregorianTransliteratedFrenchCalendar
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GregorianTransliteratedFrenchCalendar
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 10997
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: GregorianTransliteratedFrenchCalendar = 11
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.KoreaandJapaneseLunar
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.KoreaandJapaneseLunar
  id: KoreaandJapaneseLunar
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: KoreaandJapaneseLunar
  nameWithType: CalendarType.KoreaandJapaneseLunar
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.KoreaandJapaneseLunar
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: KoreaandJapaneseLunar
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 11001
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: KoreaandJapaneseLunar = 12
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.ChineseLunar
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.ChineseLunar
  id: ChineseLunar
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: ChineseLunar
  nameWithType: CalendarType.ChineseLunar
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.ChineseLunar
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ChineseLunar
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 11005
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: ChineseLunar = 13
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.SakaEra
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.SakaEra
  id: SakaEra
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: SakaEra
  nameWithType: CalendarType.SakaEra
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.SakaEra
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SakaEra
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 11009
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: SakaEra = 14
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.UmmalQura
  commentId: F:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.UmmalQura
  id: UmmalQura
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  langs:
  - csharp
  - vb
  name: UmmalQura
  nameWithType: CalendarType.UmmalQura
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.UmmalQura
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UmmalQura
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2020-02.cs
    startLine: 11013
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202002
  remarks: ''
  example: []
  syntax:
    content: UmmalQura = 15
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002
  commentId: N:PnP.Framework.Provisioning.Providers.Xml.V202002
  name: PnP.Framework.Provisioning.Providers.Xml.V202002
  nameWithType: PnP.Framework.Provisioning.Providers.Xml.V202002
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002
- uid: System.Enum.System.EnumerationExtensions.Include``1({T})
  commentId: M:System.EnumerationExtensions.Include``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Include``1(System.Enum,``0)
  name: Include<T>(T)
  nameWithType: EnumerationExtensions.Include<T>(T)
  fullName: System.EnumerationExtensions.Include<T>(T)
  nameWithType.vb: EnumerationExtensions.Include(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Include(Of T)(T)
  name.vb: Include(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Include``1(``0)
    name: Include<T>
    nameWithType: EnumerationExtensions.Include<T>
    fullName: System.EnumerationExtensions.Include<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Include``1(``0)
    name: Include(Of T)
    nameWithType: EnumerationExtensions.Include(Of T)
    fullName: System.EnumerationExtensions.Include(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Remove``1({T})
  commentId: M:System.EnumerationExtensions.Remove``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Remove``1(System.Enum,``0)
  name: Remove<T>(T)
  nameWithType: EnumerationExtensions.Remove<T>(T)
  fullName: System.EnumerationExtensions.Remove<T>(T)
  nameWithType.vb: EnumerationExtensions.Remove(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Remove(Of T)(T)
  name.vb: Remove(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Remove``1(``0)
    name: Remove<T>
    nameWithType: EnumerationExtensions.Remove<T>
    fullName: System.EnumerationExtensions.Remove<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Remove``1(``0)
    name: Remove(Of T)
    nameWithType: EnumerationExtensions.Remove(Of T)
    fullName: System.EnumerationExtensions.Remove(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Has``1({T})
  commentId: M:System.EnumerationExtensions.Has``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Has``1(System.Enum,``0)
  name: Has<T>(T)
  nameWithType: EnumerationExtensions.Has<T>(T)
  fullName: System.EnumerationExtensions.Has<T>(T)
  nameWithType.vb: EnumerationExtensions.Has(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Has(Of T)(T)
  name.vb: Has(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Has``1(``0)
    name: Has<T>
    nameWithType: EnumerationExtensions.Has<T>
    fullName: System.EnumerationExtensions.Has<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Has``1(``0)
    name: Has(Of T)
    nameWithType: EnumerationExtensions.Has(Of T)
    fullName: System.EnumerationExtensions.Has(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Enum.System.EnumerationExtensions.Missing``1({T})
  commentId: M:System.EnumerationExtensions.Missing``1(System.Enum,``0)
  parent: System.EnumerationExtensions
  definition: System.EnumerationExtensions.Missing``1(System.Enum,``0)
  name: Missing<T>(T)
  nameWithType: EnumerationExtensions.Missing<T>(T)
  fullName: System.EnumerationExtensions.Missing<T>(T)
  nameWithType.vb: EnumerationExtensions.Missing(Of T)(T)
  fullName.vb: System.EnumerationExtensions.Missing(Of T)(T)
  name.vb: Missing(Of T)(T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Missing``1(``0)
    name: Missing<T>
    nameWithType: EnumerationExtensions.Missing<T>
    fullName: System.EnumerationExtensions.Missing<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Missing``1(``0)
    name: Missing(Of T)
    nameWithType: EnumerationExtensions.Missing(Of T)
    fullName: System.EnumerationExtensions.Missing(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<CalendarType>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<CalendarType>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of CalendarType)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of CalendarType)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<CalendarType>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<CalendarType>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of CalendarType)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of CalendarType)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<CalendarType, T>(Expression<Func<CalendarType, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<CalendarType, T>(Expression<Func<CalendarType, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of CalendarType, T)(Expression(Of Func(Of CalendarType, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of CalendarType, T)(Expression(Of Func(Of CalendarType, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<CalendarType, T>
    nameWithType: ObjectExtensions.Set<CalendarType, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
    name: CalendarType
    nameWithType: CalendarType
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of CalendarType, T)
    nameWithType: ObjectExtensions.Set(Of CalendarType, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
    name: CalendarType
    nameWithType: CalendarType
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Include``1(System.Enum,``0)
  isExternal: true
  name: Include<T>(Enum, T)
  nameWithType: EnumerationExtensions.Include<T>(Enum, T)
  fullName: System.EnumerationExtensions.Include<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Include(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Include(Of T)(System.Enum, T)
  name.vb: Include(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
    name: Include<T>
    nameWithType: EnumerationExtensions.Include<T>
    fullName: System.EnumerationExtensions.Include<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Include``1(System.Enum,``0)
    name: Include(Of T)
    nameWithType: EnumerationExtensions.Include(Of T)
    fullName: System.EnumerationExtensions.Include(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions
  commentId: T:System.EnumerationExtensions
  parent: System
  name: EnumerationExtensions
  nameWithType: EnumerationExtensions
  fullName: System.EnumerationExtensions
- uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Remove``1(System.Enum,``0)
  isExternal: true
  name: Remove<T>(Enum, T)
  nameWithType: EnumerationExtensions.Remove<T>(Enum, T)
  fullName: System.EnumerationExtensions.Remove<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Remove(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Remove(Of T)(System.Enum, T)
  name.vb: Remove(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
    name: Remove<T>
    nameWithType: EnumerationExtensions.Remove<T>
    fullName: System.EnumerationExtensions.Remove<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Remove``1(System.Enum,``0)
    name: Remove(Of T)
    nameWithType: EnumerationExtensions.Remove(Of T)
    fullName: System.EnumerationExtensions.Remove(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Has``1(System.Enum,``0)
  isExternal: true
  name: Has<T>(Enum, T)
  nameWithType: EnumerationExtensions.Has<T>(Enum, T)
  fullName: System.EnumerationExtensions.Has<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Has(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Has(Of T)(System.Enum, T)
  name.vb: Has(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
    name: Has<T>
    nameWithType: EnumerationExtensions.Has<T>
    fullName: System.EnumerationExtensions.Has<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Has``1(System.Enum,``0)
    name: Has(Of T)
    nameWithType: EnumerationExtensions.Has(Of T)
    fullName: System.EnumerationExtensions.Has(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
  commentId: M:System.EnumerationExtensions.Missing``1(System.Enum,``0)
  isExternal: true
  name: Missing<T>(Enum, T)
  nameWithType: EnumerationExtensions.Missing<T>(Enum, T)
  fullName: System.EnumerationExtensions.Missing<T>(System.Enum, T)
  nameWithType.vb: EnumerationExtensions.Missing(Of T)(Enum, T)
  fullName.vb: System.EnumerationExtensions.Missing(Of T)(System.Enum, T)
  name.vb: Missing(Of T)(Enum, T)
  spec.csharp:
  - uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
    name: Missing<T>
    nameWithType: EnumerationExtensions.Missing<T>
    fullName: System.EnumerationExtensions.Missing<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.EnumerationExtensions.Missing``1(System.Enum,``0)
    name: Missing(Of T)
    nameWithType: EnumerationExtensions.Missing(Of T)
    fullName: System.EnumerationExtensions.Missing(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  commentId: T:PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType
  parent: PnP.Framework.Provisioning.Providers.Xml.V202002
  name: CalendarType
  nameWithType: CalendarType
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202002.CalendarType

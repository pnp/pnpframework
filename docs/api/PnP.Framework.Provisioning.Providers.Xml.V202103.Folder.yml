### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  commentId: T:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  id: Folder
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103
  children:
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security
  langs:
  - csharp
  - vb
  name: Folder
  nameWithType: Folder
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Folder
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 7930
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Folder
    content.vb: >-
      <Serializable>

      Public Class Folder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.Xml.V202103.Folder,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1
  commentId: P:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1
  id: Folder1
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  langs:
  - csharp
  - vb
  name: Folder1
  nameWithType: Folder.Folder1
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Folder1
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 7952
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: public Folder[] Folder1 { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder[]
    content.vb: Public Property Folder1 As Folder()
  overload: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security
  commentId: P:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security
  id: Security
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: Folder.Security
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Security
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 7963
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: public ObjectSecurity Security { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202103.ObjectSecurity
    content.vb: Public Property Security As ObjectSecurity
  overload: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries
  commentId: P:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries
  id: PropertyBagEntries
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  langs:
  - csharp
  - vb
  name: PropertyBagEntries
  nameWithType: Folder.PropertyBagEntries
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PropertyBagEntries
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 7973
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: public PropertyBagEntry[] PropertyBagEntries { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry[]
    content.vb: Public Property PropertyBagEntries As PropertyBagEntry()
  overload: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues
  commentId: P:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues
  id: DefaultColumnValues
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  langs:
  - csharp
  - vb
  name: DefaultColumnValues
  nameWithType: Folder.DefaultColumnValues
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DefaultColumnValues
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 7984
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: public StringDictionaryItem[] DefaultColumnValues { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem[]
    content.vb: Public Property DefaultColumnValues As StringDictionaryItem()
  overload: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties
  commentId: P:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties
  id: Properties
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: Folder.Properties
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Properties
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 7995
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: public StringDictionaryItem[] Properties { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem[]
    content.vb: Public Property Properties As StringDictionaryItem()
  overload: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name
  commentId: P:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name
  id: Name
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Folder.Name
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Name
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 8006
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID
  commentId: P:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID
  id: ContentTypeID
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  langs:
  - csharp
  - vb
  name: ContentTypeID
  nameWithType: Folder.ContentTypeID
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ContentTypeID
    path: ../src/lib/PnP.Framework/Provisioning/Providers/Xml/ProvisioningSchema-2021-03.cs
    startLine: 8017
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Provisioning.Providers.Xml.V202103
  remarks: ''
  example: []
  syntax:
    content: public string ContentTypeID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentTypeID As String
  overload: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103
  commentId: N:PnP.Framework.Provisioning.Providers.Xml.V202103
  name: PnP.Framework.Provisioning.Providers.Xml.V202103
  nameWithType: PnP.Framework.Provisioning.Providers.Xml.V202103
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<Folder>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Folder>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.Xml.V202103.Folder>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of Folder)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.Xml.V202103.Folder)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of Folder)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<Folder>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<Folder>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Provisioning.Providers.Xml.V202103.Folder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of Folder)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of Folder)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Provisioning.Providers.Xml.V202103.Folder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Provisioning.Providers.Xml.V202103.Folder,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<Folder, T>(Expression<Func<Folder, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<Folder, T>(Expression<Func<Folder, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.Xml.V202103.Folder, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Provisioning.Providers.Xml.V202103.Folder, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of Folder, T)(Expression(Of Func(Of Folder, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.Xml.V202103.Folder, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Provisioning.Providers.Xml.V202103.Folder, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of Folder, T)(Expression(Of Func(Of Folder, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<Folder, T>
    nameWithType: ObjectExtensions.Set<Folder, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Provisioning.Providers.Xml.V202103.Folder, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
    name: Folder
    nameWithType: Folder
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of Folder, T)
    nameWithType: ObjectExtensions.Set(Of Folder, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Provisioning.Providers.Xml.V202103.Folder, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
    name: Folder
    nameWithType: Folder
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1*
  commentId: Overload:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1
  name: Folder1
  nameWithType: Folder.Folder1
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Folder1
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder[]
  isExternal: true
  name: Folder[]
  nameWithType: Folder[]
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder[]
  nameWithType.vb: Folder()
  fullName.vb: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder()
  name.vb: Folder()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
    name: Folder
    nameWithType: Folder
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
    name: Folder
    nameWithType: Folder
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security*
  commentId: Overload:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security
  name: Security
  nameWithType: Folder.Security
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Security
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.ObjectSecurity
  commentId: T:PnP.Framework.Provisioning.Providers.Xml.V202103.ObjectSecurity
  parent: PnP.Framework.Provisioning.Providers.Xml.V202103
  name: ObjectSecurity
  nameWithType: ObjectSecurity
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.ObjectSecurity
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries*
  commentId: Overload:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries
  name: PropertyBagEntries
  nameWithType: Folder.PropertyBagEntries
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.PropertyBagEntries
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry[]
  isExternal: true
  name: PropertyBagEntry[]
  nameWithType: PropertyBagEntry[]
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry[]
  nameWithType.vb: PropertyBagEntry()
  fullName.vb: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry()
  name.vb: PropertyBagEntry()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry
    name: PropertyBagEntry
    nameWithType: PropertyBagEntry
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry
    name: PropertyBagEntry
    nameWithType: PropertyBagEntry
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.PropertyBagEntry
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues*
  commentId: Overload:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues
  name: DefaultColumnValues
  nameWithType: Folder.DefaultColumnValues
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.DefaultColumnValues
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem[]
  isExternal: true
  name: StringDictionaryItem[]
  nameWithType: StringDictionaryItem[]
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem[]
  nameWithType.vb: StringDictionaryItem()
  fullName.vb: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem()
  name.vb: StringDictionaryItem()
  spec.csharp:
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem
    name: StringDictionaryItem
    nameWithType: StringDictionaryItem
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem
    name: StringDictionaryItem
    nameWithType: StringDictionaryItem
    fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.StringDictionaryItem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties*
  commentId: Overload:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties
  name: Properties
  nameWithType: Folder.Properties
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Properties
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name*
  commentId: Overload:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name
  name: Name
  nameWithType: Folder.Name
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID*
  commentId: Overload:PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID
  name: ContentTypeID
  nameWithType: Folder.ContentTypeID
  fullName: PnP.Framework.Provisioning.Providers.Xml.V202103.Folder.ContentTypeID

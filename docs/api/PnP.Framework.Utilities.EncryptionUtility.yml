### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.EncryptionUtility
  commentId: T:PnP.Framework.Utilities.EncryptionUtility
  id: EncryptionUtility
  parent: PnP.Framework.Utilities
  children:
  - PnP.Framework.Utilities.EncryptionUtility.Decrypt(System.String,System.String)
  - PnP.Framework.Utilities.EncryptionUtility.Encrypt(System.String,System.String)
  - PnP.Framework.Utilities.EncryptionUtility.ToInsecureString(System.Security.SecureString)
  - PnP.Framework.Utilities.EncryptionUtility.ToSecureString(System.String)
  langs:
  - csharp
  - vb
  name: EncryptionUtility
  nameWithType: EncryptionUtility
  fullName: PnP.Framework.Utilities.EncryptionUtility
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: EncryptionUtility
    path: ../src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
    startLine: 10
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nUtility class that support certificate based encryption/decryption\n"
  example: []
  syntax:
    content: public static class EncryptionUtility
    content.vb: Public Module EncryptionUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PnP.Framework.Utilities.EncryptionUtility.Encrypt(System.String,System.String)
  commentId: M:PnP.Framework.Utilities.EncryptionUtility.Encrypt(System.String,System.String)
  id: Encrypt(System.String,System.String)
  parent: PnP.Framework.Utilities.EncryptionUtility
  langs:
  - csharp
  - vb
  name: Encrypt(String, String)
  nameWithType: EncryptionUtility.Encrypt(String, String)
  fullName: PnP.Framework.Utilities.EncryptionUtility.Encrypt(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Encrypt
    path: ../src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
    startLine: 19
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nEncrypt a piece of text based on a given certificate\n"
  example: []
  syntax:
    content: public static string Encrypt(string stringToEncrypt, string thumbPrint)
    parameters:
    - id: stringToEncrypt
      type: System.String
      description: Text to encrypt
    - id: thumbPrint
      type: System.String
      description: Thumbprint of the certificate to use
    return:
      type: System.String
      description: Encrypted text
    content.vb: Public Shared Function Encrypt(stringToEncrypt As String, thumbPrint As String) As String
  overload: PnP.Framework.Utilities.EncryptionUtility.Encrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.EncryptionUtility.Decrypt(System.String,System.String)
  commentId: M:PnP.Framework.Utilities.EncryptionUtility.Decrypt(System.String,System.String)
  id: Decrypt(System.String,System.String)
  parent: PnP.Framework.Utilities.EncryptionUtility
  langs:
  - csharp
  - vb
  name: Decrypt(String, String)
  nameWithType: EncryptionUtility.Decrypt(String, String)
  fullName: PnP.Framework.Utilities.EncryptionUtility.Decrypt(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Decrypt
    path: ../src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
    startLine: 53
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nDecrypt a piece of text based on a given certificate\n"
  example: []
  syntax:
    content: public static string Decrypt(string stringToDecrypt, string thumbPrint)
    parameters:
    - id: stringToDecrypt
      type: System.String
      description: Text to decrypt
    - id: thumbPrint
      type: System.String
      description: Thumbprint of the certificate to use
    return:
      type: System.String
      description: Decrypted text
    content.vb: Public Shared Function Decrypt(stringToDecrypt As String, thumbPrint As String) As String
  overload: PnP.Framework.Utilities.EncryptionUtility.Decrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.EncryptionUtility.ToSecureString(System.String)
  commentId: M:PnP.Framework.Utilities.EncryptionUtility.ToSecureString(System.String)
  id: ToSecureString(System.String)
  parent: PnP.Framework.Utilities.EncryptionUtility
  langs:
  - csharp
  - vb
  name: ToSecureString(String)
  nameWithType: EncryptionUtility.ToSecureString(String)
  fullName: PnP.Framework.Utilities.EncryptionUtility.ToSecureString(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToSecureString
    path: ../src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
    startLine: 87
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nConverts a string to a SecureString\n"
  example: []
  syntax:
    content: public static SecureString ToSecureString(string input)
    parameters:
    - id: input
      type: System.String
      description: String to convert
    return:
      type: System.Security.SecureString
      description: SecureString representation of the passed in string
    content.vb: Public Shared Function ToSecureString(input As String) As SecureString
  overload: PnP.Framework.Utilities.EncryptionUtility.ToSecureString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.EncryptionUtility.ToInsecureString(System.Security.SecureString)
  commentId: M:PnP.Framework.Utilities.EncryptionUtility.ToInsecureString(System.Security.SecureString)
  id: ToInsecureString(System.Security.SecureString)
  parent: PnP.Framework.Utilities.EncryptionUtility
  langs:
  - csharp
  - vb
  name: ToInsecureString(SecureString)
  nameWithType: EncryptionUtility.ToInsecureString(SecureString)
  fullName: PnP.Framework.Utilities.EncryptionUtility.ToInsecureString(System.Security.SecureString)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ToInsecureString
    path: ../src/lib/PnP.Framework/Utilities/EncryptionUtility.cs
    startLine: 100
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nConverts a SecureString to a &quot;regular&quot; string\n"
  example: []
  syntax:
    content: public static string ToInsecureString(SecureString input)
    parameters:
    - id: input
      type: System.Security.SecureString
      description: SecureString to convert
    return:
      type: System.String
      description: A &quot;regular&quot; string representation of the passed SecureString
    content.vb: Public Shared Function ToInsecureString(input As SecureString) As String
  overload: PnP.Framework.Utilities.EncryptionUtility.ToInsecureString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Utilities
  commentId: N:PnP.Framework.Utilities
  name: PnP.Framework.Utilities
  nameWithType: PnP.Framework.Utilities
  fullName: PnP.Framework.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Utilities.EncryptionUtility.Encrypt*
  commentId: Overload:PnP.Framework.Utilities.EncryptionUtility.Encrypt
  name: Encrypt
  nameWithType: EncryptionUtility.Encrypt
  fullName: PnP.Framework.Utilities.EncryptionUtility.Encrypt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Utilities.EncryptionUtility.Decrypt*
  commentId: Overload:PnP.Framework.Utilities.EncryptionUtility.Decrypt
  name: Decrypt
  nameWithType: EncryptionUtility.Decrypt
  fullName: PnP.Framework.Utilities.EncryptionUtility.Decrypt
- uid: PnP.Framework.Utilities.EncryptionUtility.ToSecureString*
  commentId: Overload:PnP.Framework.Utilities.EncryptionUtility.ToSecureString
  name: ToSecureString
  nameWithType: EncryptionUtility.ToSecureString
  fullName: PnP.Framework.Utilities.EncryptionUtility.ToSecureString
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security
  commentId: N:System.Security
  isExternal: true
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
- uid: PnP.Framework.Utilities.EncryptionUtility.ToInsecureString*
  commentId: Overload:PnP.Framework.Utilities.EncryptionUtility.ToInsecureString
  name: ToInsecureString
  nameWithType: EncryptionUtility.ToInsecureString
  fullName: PnP.Framework.Utilities.EncryptionUtility.ToInsecureString

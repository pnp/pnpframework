### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  commentId: T:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  id: IThemeSlotRule
  parent: PnP.Framework.Utilities.Themes.Generator
  children:
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value
  langs:
  - csharp
  - vb
  name: IThemeSlotRule
  nameWithType: IThemeSlotRule
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  type: Interface
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IThemeSlotRule
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 5
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: public interface IThemeSlotRule
    content.vb: Public Interface IThemeSlotRule
  extensionMethods:
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name
  id: name
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: name
  nameWithType: IThemeSlotRule.name
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: name
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 8
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: string name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property name As String
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name*
  modifiers.csharp:
  - get
  - set
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color
  id: color
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: color
  nameWithType: IThemeSlotRule.color
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: color
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 10
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: IColor color { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Utilities.Themes.Palettes.IColor
    content.vb: Property color As IColor
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color*
  modifiers.csharp:
  - get
  - set
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value
  id: value
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: value
  nameWithType: IThemeSlotRule.value
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: value
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: string value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property value As String
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value*
  modifiers.csharp:
  - get
  - set
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits
  id: inherits
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: inherits
  nameWithType: IThemeSlotRule.inherits
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: inherits
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: IThemeSlotRule inherits { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
    content.vb: Property inherits As IThemeSlotRule
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits*
  modifiers.csharp:
  - get
  - set
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade
  id: asShade
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: asShade
  nameWithType: IThemeSlotRule.asShade
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: asShade
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: Shade asShade { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Utilities.Themes.Palettes.Shade
    content.vb: Property asShade As Shade
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade*
  modifiers.csharp:
  - get
  - set
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade
  id: isBackgroundShade
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: isBackgroundShade
  nameWithType: IThemeSlotRule.isBackgroundShade
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: isBackgroundShade
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 18
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: bool isBackgroundShade { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property isBackgroundShade As Boolean
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade*
  modifiers.csharp:
  - get
  - set
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized
  id: isCustomized
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: isCustomized
  nameWithType: IThemeSlotRule.isCustomized
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: isCustomized
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 20
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: bool isCustomized { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property isCustomized As Boolean
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized*
  modifiers.csharp:
  - get
  - set
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules
  commentId: P:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules
  id: dependentRules
  parent: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  langs:
  - csharp
  - vb
  name: dependentRules
  nameWithType: IThemeSlotRule.dependentRules
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: dependentRules
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/IThemeSlotRule.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  syntax:
    content: List<IThemeSlotRule> dependentRules { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule}
    content.vb: Property dependentRules As List(Of IThemeSlotRule)
  overload: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules*
  modifiers.csharp:
  - get
  - set
references:
- uid: PnP.Framework.Utilities.Themes.Generator
  commentId: N:PnP.Framework.Utilities.Themes.Generator
  name: PnP.Framework.Utilities.Themes.Generator
  nameWithType: PnP.Framework.Utilities.Themes.Generator
  fullName: PnP.Framework.Utilities.Themes.Generator
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<IThemeSlotRule>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<IThemeSlotRule>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of IThemeSlotRule)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of IThemeSlotRule)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<IThemeSlotRule>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<IThemeSlotRule>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of IThemeSlotRule)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of IThemeSlotRule)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<IThemeSlotRule, T>(Expression<Func<IThemeSlotRule, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<IThemeSlotRule, T>(Expression<Func<IThemeSlotRule, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of IThemeSlotRule, T)(Expression(Of Func(Of IThemeSlotRule, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of IThemeSlotRule, T)(Expression(Of Func(Of IThemeSlotRule, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<IThemeSlotRule, T>
    nameWithType: ObjectExtensions.Set<IThemeSlotRule, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
    name: IThemeSlotRule
    nameWithType: IThemeSlotRule
    fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of IThemeSlotRule, T)
    nameWithType: ObjectExtensions.Set(Of IThemeSlotRule, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
    name: IThemeSlotRule
    nameWithType: IThemeSlotRule
    fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name
  name: name
  nameWithType: IThemeSlotRule.name
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color
  name: color
  nameWithType: IThemeSlotRule.color
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.color
- uid: PnP.Framework.Utilities.Themes.Palettes.IColor
  commentId: T:PnP.Framework.Utilities.Themes.Palettes.IColor
  parent: PnP.Framework.Utilities.Themes.Palettes
  name: IColor
  nameWithType: IColor
  fullName: PnP.Framework.Utilities.Themes.Palettes.IColor
- uid: PnP.Framework.Utilities.Themes.Palettes
  commentId: N:PnP.Framework.Utilities.Themes.Palettes
  name: PnP.Framework.Utilities.Themes.Palettes
  nameWithType: PnP.Framework.Utilities.Themes.Palettes
  fullName: PnP.Framework.Utilities.Themes.Palettes
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value
  name: value
  nameWithType: IThemeSlotRule.value
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.value
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits
  name: inherits
  nameWithType: IThemeSlotRule.inherits
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.inherits
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  commentId: T:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  parent: PnP.Framework.Utilities.Themes.Generator
  name: IThemeSlotRule
  nameWithType: IThemeSlotRule
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade
  name: asShade
  nameWithType: IThemeSlotRule.asShade
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.asShade
- uid: PnP.Framework.Utilities.Themes.Palettes.Shade
  commentId: T:PnP.Framework.Utilities.Themes.Palettes.Shade
  parent: PnP.Framework.Utilities.Themes.Palettes
  name: Shade
  nameWithType: Shade
  fullName: PnP.Framework.Utilities.Themes.Palettes.Shade
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade
  name: isBackgroundShade
  nameWithType: IThemeSlotRule.isBackgroundShade
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isBackgroundShade
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized
  name: isCustomized
  nameWithType: IThemeSlotRule.isCustomized
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.isCustomized
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules
  name: dependentRules
  nameWithType: IThemeSlotRule.dependentRules
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule.dependentRules
- uid: System.Collections.Generic.List{PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IThemeSlotRule>
  nameWithType: List<IThemeSlotRule>
  fullName: System.Collections.Generic.List<PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule>
  nameWithType.vb: List(Of IThemeSlotRule)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule)
  name.vb: List(Of IThemeSlotRule)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
    name: IThemeSlotRule
    nameWithType: IThemeSlotRule
    fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
    name: IThemeSlotRule
    nameWithType: IThemeSlotRule
    fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

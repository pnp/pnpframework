### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator
  commentId: T:PnP.Framework.Utilities.Themes.Generator.ThemeGenerator
  id: ThemeGenerator
  parent: PnP.Framework.Utilities.Themes.Generator
  children:
  - PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson(PnP.Framework.Utilities.Themes.Generator.IThemeRules)
  - PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots(PnP.Framework.Utilities.Themes.Generator.IThemeRules,System.Boolean)
  - PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot(PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule,PnP.Framework.Utilities.Themes.Palettes.IColor,System.Boolean,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: ThemeGenerator
  nameWithType: ThemeGenerator
  fullName: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ThemeGenerator
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  summary: "\nSets an IThemeSlotRule to the given color and cascades it to the rest of the theme, updating other IThemeSlotRules in the theme that\ninherit from that color.\nisInverted: whether it&apos;s a dark theme or not, which affects the algorithm used to generate shades\nisCustomization should be true only if it&apos;s a user action, and indicates overwriting the slot&apos;s inheritance(if any)\noverwriteCustomColor: a slot could have a generated color based on its inheritance rules(isCustomized is false), or a custom color\nbased on user input(isCustomized is true), this bool tells us whether to override existing customized colors\n"
  example: []
  syntax:
    content: public static class ThemeGenerator
    content.vb: Public Module ThemeGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot(PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule,PnP.Framework.Utilities.Themes.Palettes.IColor,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot(PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule,PnP.Framework.Utilities.Themes.Palettes.IColor,System.Boolean,System.Boolean,System.Boolean)
  id: SetSlot(PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule,PnP.Framework.Utilities.Themes.Palettes.IColor,System.Boolean,System.Boolean,System.Boolean)
  parent: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator
  langs:
  - csharp
  - vb
  name: SetSlot(IThemeSlotRule, IColor, Boolean, Boolean, Boolean)
  nameWithType: ThemeGenerator.SetSlot(IThemeSlotRule, IColor, Boolean, Boolean, Boolean)
  fullName: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot(PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule, PnP.Framework.Utilities.Themes.Palettes.IColor, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SetSlot
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  summary: "\n\n"
  example: []
  syntax:
    content: public static void SetSlot(IThemeSlotRule rule, IColor color, bool isInverted = false, bool isCustomization = false, bool overwriteCustomColor = true)
    parameters:
    - id: rule
      type: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
      description: ''
    - id: color
      type: PnP.Framework.Utilities.Themes.Palettes.IColor
      description: ''
    - id: isInverted
      type: System.Boolean
      description: ''
    - id: isCustomization
      type: System.Boolean
      description: ''
    - id: overwriteCustomColor
      type: System.Boolean
      description: ''
    content.vb: Public Shared Sub SetSlot(rule As IThemeSlotRule, color As IColor, isInverted As Boolean = False, isCustomization As Boolean = False, overwriteCustomColor As Boolean = True)
  overload: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots(PnP.Framework.Utilities.Themes.Generator.IThemeRules,System.Boolean)
  commentId: M:PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots(PnP.Framework.Utilities.Themes.Generator.IThemeRules,System.Boolean)
  id: InsureSlots(PnP.Framework.Utilities.Themes.Generator.IThemeRules,System.Boolean)
  parent: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator
  langs:
  - csharp
  - vb
  name: InsureSlots(IThemeRules, Boolean)
  nameWithType: ThemeGenerator.InsureSlots(IThemeRules, Boolean)
  fullName: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots(PnP.Framework.Utilities.Themes.Generator.IThemeRules, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: InsureSlots
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
    startLine: 56
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  summary: "\nSets the color of each slot based on its rule. Slots that don&apos;t inherit must have a color already.\nIf this completes without error, then the theme is ready to use. (All slots will have a color.)\nsetSlot() can be called before this, but this must be called before getThemeAs*().\nDoes not override colors of rules where isCustomized is true (i.e. doesn&apos;t override existing customizations).\n"
  example: []
  syntax:
    content: public static void InsureSlots(IThemeRules slotRules, bool isInverted)
    parameters:
    - id: slotRules
      type: PnP.Framework.Utilities.Themes.Generator.IThemeRules
      description: ''
    - id: isInverted
      type: System.Boolean
      description: ''
    content.vb: Public Shared Sub InsureSlots(slotRules As IThemeRules, isInverted As Boolean)
  overload: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson(PnP.Framework.Utilities.Themes.Generator.IThemeRules)
  commentId: M:PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson(PnP.Framework.Utilities.Themes.Generator.IThemeRules)
  id: GetThemeAsJson(PnP.Framework.Utilities.Themes.Generator.IThemeRules)
  parent: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator
  langs:
  - csharp
  - vb
  name: GetThemeAsJson(IThemeRules)
  nameWithType: ThemeGenerator.GetThemeAsJson(IThemeRules)
  fullName: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson(PnP.Framework.Utilities.Themes.Generator.IThemeRules)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetThemeAsJson
    path: ../src/lib/PnP.Framework/Utilities/Themes/Generator/ThemeGenerator.cs
    startLine: 81
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.Themes.Generator
  summary: "\nGets the JSON-formatted blob that describes the theme, usable with the REST request endpoints\n{ [theme slot name as string] : [color as string],\n&quot;tokenName&quot;: &quot;#f00f00&quot;,\n&quot;tokenName2&quot;: &quot;#ba2ba2&quot;,\n... }\n"
  example: []
  syntax:
    content: public static string GetThemeAsJson(IThemeRules slotRules)
    parameters:
    - id: slotRules
      type: PnP.Framework.Utilities.Themes.Generator.IThemeRules
      description: ''
    return:
      type: System.String
    content.vb: Public Shared Function GetThemeAsJson(slotRules As IThemeRules) As String
  overload: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Utilities.Themes.Generator
  commentId: N:PnP.Framework.Utilities.Themes.Generator
  name: PnP.Framework.Utilities.Themes.Generator
  nameWithType: PnP.Framework.Utilities.Themes.Generator
  fullName: PnP.Framework.Utilities.Themes.Generator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot
  name: SetSlot
  nameWithType: ThemeGenerator.SetSlot
  fullName: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.SetSlot
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  commentId: T:PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
  parent: PnP.Framework.Utilities.Themes.Generator
  name: IThemeSlotRule
  nameWithType: IThemeSlotRule
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeSlotRule
- uid: PnP.Framework.Utilities.Themes.Palettes.IColor
  commentId: T:PnP.Framework.Utilities.Themes.Palettes.IColor
  parent: PnP.Framework.Utilities.Themes.Palettes
  name: IColor
  nameWithType: IColor
  fullName: PnP.Framework.Utilities.Themes.Palettes.IColor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Utilities.Themes.Palettes
  commentId: N:PnP.Framework.Utilities.Themes.Palettes
  name: PnP.Framework.Utilities.Themes.Palettes
  nameWithType: PnP.Framework.Utilities.Themes.Palettes
  fullName: PnP.Framework.Utilities.Themes.Palettes
- uid: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots
  name: InsureSlots
  nameWithType: ThemeGenerator.InsureSlots
  fullName: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.InsureSlots
- uid: PnP.Framework.Utilities.Themes.Generator.IThemeRules
  commentId: T:PnP.Framework.Utilities.Themes.Generator.IThemeRules
  parent: PnP.Framework.Utilities.Themes.Generator
  name: IThemeRules
  nameWithType: IThemeRules
  fullName: PnP.Framework.Utilities.Themes.Generator.IThemeRules
- uid: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson*
  commentId: Overload:PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson
  name: GetThemeAsJson
  nameWithType: ThemeGenerator.GetThemeAsJson
  fullName: PnP.Framework.Utilities.Themes.Generator.ThemeGenerator.GetThemeAsJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

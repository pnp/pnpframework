### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
  commentId: T:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
  id: FileMockDataRepository`1
  parent: PnP.Framework.Utilities.UnitTests.Helpers
  children:
  - PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.#ctor(System.String)
  - PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.FilePath
  - PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.LoadMockData
  - PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.SaveMockData(System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}})
  langs:
  - csharp
  - vb
  name: FileMockDataRepository<T>
  nameWithType: FileMockDataRepository<T>
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FileMockDataRepository
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Helpers
  syntax:
    content: 'public class FileMockDataRepository<T> : IMockDataRepository<MockResponseEntry<T>>'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class FileMockDataRepository(Of T)
          Implements IMockDataRepository(Of MockResponseEntry(Of T))
  inheritance:
  - System.Object
  implements:
  - PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository{{T}},{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  nameWithType.vb: FileMockDataRepository(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T)
  name.vb: FileMockDataRepository(Of T)
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.FilePath
  commentId: P:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.FilePath
  id: FilePath
  parent: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: FileMockDataRepository<T>.FilePath
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.FilePath
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FilePath
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Helpers
  syntax:
    content: public string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilePath As String
  overload: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.FilePath*
  nameWithType.vb: FileMockDataRepository(Of T).FilePath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).FilePath
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.#ctor(System.String)
  commentId: M:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
  langs:
  - csharp
  - vb
  name: FileMockDataRepository(String)
  nameWithType: FileMockDataRepository<T>.FileMockDataRepository(String)
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.FileMockDataRepository(System.String)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Helpers
  syntax:
    content: public FileMockDataRepository(string filePath)
    parameters:
    - id: filePath
      type: System.String
    content.vb: Public Sub New(filePath As String)
  overload: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.#ctor*
  nameWithType.vb: FileMockDataRepository(Of T).FileMockDataRepository(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).FileMockDataRepository(System.String)
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.LoadMockData
  commentId: M:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.LoadMockData
  id: LoadMockData
  parent: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
  langs:
  - csharp
  - vb
  name: LoadMockData()
  nameWithType: FileMockDataRepository<T>.LoadMockData()
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.LoadMockData()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LoadMockData
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Helpers
  syntax:
    content: public List<MockResponseEntry<T>> LoadMockData()
    return:
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
    content.vb: Public Function LoadMockData As List(Of MockResponseEntry(Of T))
  overload: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.LoadMockData*
  implements:
  - PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}.LoadMockData
  nameWithType.vb: FileMockDataRepository(Of T).LoadMockData()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).LoadMockData()
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.SaveMockData(System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}})
  commentId: M:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.SaveMockData(System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}})
  id: SaveMockData(System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}})
  parent: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
  langs:
  - csharp
  - vb
  name: SaveMockData(List<MockResponseEntry<T>>)
  nameWithType: FileMockDataRepository<T>.SaveMockData(List<MockResponseEntry<T>>)
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.SaveMockData(System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveMockData
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Helpers/FileMockDataRepository.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Helpers
  syntax:
    content: public void SaveMockData(List<MockResponseEntry<T>> mockedData)
    parameters:
    - id: mockedData
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
    content.vb: Public Sub SaveMockData(mockedData As List(Of MockResponseEntry(Of T)))
  overload: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.SaveMockData*
  implements:
  - PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}.SaveMockData(System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}})
  nameWithType.vb: FileMockDataRepository(Of T).SaveMockData(List(Of MockResponseEntry(Of T)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).SaveMockData(System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)))
  name.vb: SaveMockData(List(Of MockResponseEntry(Of T)))
references:
- uid: PnP.Framework.Utilities.UnitTests.Helpers
  commentId: N:PnP.Framework.Utilities.UnitTests.Helpers
  name: PnP.Framework.Utilities.UnitTests.Helpers
  nameWithType: PnP.Framework.Utilities.UnitTests.Helpers
  fullName: PnP.Framework.Utilities.UnitTests.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
  commentId: T:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}}
  parent: PnP.Framework.Utilities.UnitTests.Helpers
  definition: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
  name: IMockDataRepository<MockResponseEntry<T>>
  nameWithType: IMockDataRepository<MockResponseEntry<T>>
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>
  nameWithType.vb: IMockDataRepository(Of MockResponseEntry(Of T))
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T))
  name.vb: IMockDataRepository(Of MockResponseEntry(Of T))
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<FileMockDataRepository<T>>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<FileMockDataRepository<T>>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of FileMockDataRepository(Of T))(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T))(System.String)
  name.vb: ValidateNotNullOrEmpty(Of FileMockDataRepository(Of T))(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<FileMockDataRepository<T>>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<FileMockDataRepository<T>>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of FileMockDataRepository(Of T))
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of FileMockDataRepository(Of T))
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository{{T}},{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<FileMockDataRepository<T>, T>(Expression<Func<FileMockDataRepository<T>, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<FileMockDataRepository<T>, T>(Expression<Func<FileMockDataRepository<T>, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of FileMockDataRepository(Of T), T)(Expression(Of Func(Of FileMockDataRepository(Of T), T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T), T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T), T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of FileMockDataRepository(Of T), T)(Expression(Of Func(Of FileMockDataRepository(Of T), T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<FileMockDataRepository<T>, T>
    nameWithType: ObjectExtensions.Set<FileMockDataRepository<T>, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
    name: FileMockDataRepository
    nameWithType: FileMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of FileMockDataRepository(Of T), T)
    nameWithType: ObjectExtensions.Set(Of FileMockDataRepository(Of T), T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T), T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1
    name: FileMockDataRepository
    nameWithType: FileMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
  commentId: T:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
  name: IMockDataRepository<T>
  nameWithType: IMockDataRepository<T>
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<T>
  nameWithType.vb: IMockDataRepository(Of T)
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of T)
  name.vb: IMockDataRepository(Of T)
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.FilePath*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.FilePath
  name: FilePath
  nameWithType: FileMockDataRepository<T>.FilePath
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.FilePath
  nameWithType.vb: FileMockDataRepository(Of T).FilePath
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).FilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.#ctor*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.#ctor
  name: FileMockDataRepository
  nameWithType: FileMockDataRepository<T>.FileMockDataRepository
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.FileMockDataRepository
  nameWithType.vb: FileMockDataRepository(Of T).FileMockDataRepository
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).FileMockDataRepository
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.LoadMockData*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.LoadMockData
  name: LoadMockData
  nameWithType: FileMockDataRepository<T>.LoadMockData
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.LoadMockData
  nameWithType.vb: FileMockDataRepository(Of T).LoadMockData
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).LoadMockData
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}.LoadMockData
  commentId: M:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}}.LoadMockData
  parent: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
  definition: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.LoadMockData
  name: LoadMockData()
  nameWithType: IMockDataRepository<MockResponseEntry<T>>.LoadMockData()
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>.LoadMockData()
  nameWithType.vb: IMockDataRepository(Of MockResponseEntry(Of T)).LoadMockData()
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)).LoadMockData()
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.LoadMockData
    name: LoadMockData
    nameWithType: IMockDataRepository<MockResponseEntry<T>>.LoadMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>.LoadMockData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.LoadMockData
    name: LoadMockData
    nameWithType: IMockDataRepository(Of MockResponseEntry(Of T)).LoadMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)).LoadMockData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MockResponseEntry<T>>
  nameWithType: List<MockResponseEntry<T>>
  fullName: System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>
  nameWithType.vb: List(Of MockResponseEntry(Of T))
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T))
  name.vb: List(Of MockResponseEntry(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.LoadMockData
  commentId: M:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.LoadMockData
  name: LoadMockData()
  nameWithType: IMockDataRepository<T>.LoadMockData()
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<T>.LoadMockData()
  nameWithType.vb: IMockDataRepository(Of T).LoadMockData()
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of T).LoadMockData()
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.LoadMockData
    name: LoadMockData
    nameWithType: IMockDataRepository<T>.LoadMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<T>.LoadMockData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.LoadMockData
    name: LoadMockData
    nameWithType: IMockDataRepository(Of T).LoadMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of T).LoadMockData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.SaveMockData*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository`1.SaveMockData
  name: SaveMockData
  nameWithType: FileMockDataRepository<T>.SaveMockData
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository<T>.SaveMockData
  nameWithType.vb: FileMockDataRepository(Of T).SaveMockData
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.FileMockDataRepository(Of T).SaveMockData
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}.SaveMockData(System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}})
  commentId: M:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}}.SaveMockData(System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}})
  parent: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
  definition: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.SaveMockData(System.Collections.Generic.List{`0})
  name: SaveMockData(List<MockResponseEntry<T>>)
  nameWithType: IMockDataRepository<MockResponseEntry<T>>.SaveMockData(List<MockResponseEntry<T>>)
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>.SaveMockData(System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>)
  nameWithType.vb: IMockDataRepository(Of MockResponseEntry(Of T)).SaveMockData(List(Of MockResponseEntry(Of T)))
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)).SaveMockData(System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)))
  name.vb: SaveMockData(List(Of MockResponseEntry(Of T)))
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.SaveMockData(System.Collections.Generic.List{`0})
    name: SaveMockData
    nameWithType: IMockDataRepository<MockResponseEntry<T>>.SaveMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>.SaveMockData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.SaveMockData(System.Collections.Generic.List{`0})
    name: SaveMockData
    nameWithType: IMockDataRepository(Of MockResponseEntry(Of T)).SaveMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)).SaveMockData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.SaveMockData(System.Collections.Generic.List{`0})
  commentId: M:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.SaveMockData(System.Collections.Generic.List{`0})
  isExternal: true
  name: SaveMockData(List<T>)
  nameWithType: IMockDataRepository<T>.SaveMockData(List<T>)
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<T>.SaveMockData(System.Collections.Generic.List<T>)
  nameWithType.vb: IMockDataRepository(Of T).SaveMockData(List(Of T))
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of T).SaveMockData(System.Collections.Generic.List(Of T))
  name.vb: SaveMockData(List(Of T))
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.SaveMockData(System.Collections.Generic.List{`0})
    name: SaveMockData
    nameWithType: IMockDataRepository<T>.SaveMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<T>.SaveMockData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1.SaveMockData(System.Collections.Generic.List{`0})
    name: SaveMockData
    nameWithType: IMockDataRepository(Of T).SaveMockData
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of T).SaveMockData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  commentId: T:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  id: MockLegacyAuthenticationProvider
  parent: PnP.Framework.Utilities.UnitTests
  children:
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication
  langs:
  - csharp
  - vb
  name: MockLegacyAuthenticationProvider
  nameWithType: MockLegacyAuthenticationProvider
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MockLegacyAuthenticationProvider
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests
  syntax:
    content: 'public class MockLegacyAuthenticationProvider : ILegacyAuthenticationProvider, IAuthenticationProvider'
    content.vb: >-
      Public Class MockLegacyAuthenticationProvider
          Implements ILegacyAuthenticationProvider, IAuthenticationProvider
  inheritance:
  - System.Object
  implements:
  - PnP.Core.Services.ILegacyAuthenticationProvider
  - PnP.Core.Services.IAuthenticationProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication
  commentId: P:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication
  id: RequiresCookieAuthentication
  parent: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  langs:
  - csharp
  - vb
  name: RequiresCookieAuthentication
  nameWithType: MockLegacyAuthenticationProvider.RequiresCookieAuthentication
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RequiresCookieAuthentication
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests
  syntax:
    content: public bool RequiresCookieAuthentication { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequiresCookieAuthentication As Boolean
  overload: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication*
  implements:
  - PnP.Core.Services.ILegacyAuthenticationProvider.RequiresCookieAuthentication
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
  commentId: M:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
  id: AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
  parent: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  langs:
  - csharp
  - vb
  name: AuthenticateRequestAsync(Uri, HttpRequestMessage)
  nameWithType: MockLegacyAuthenticationProvider.AuthenticateRequestAsync(Uri, HttpRequestMessage)
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync(System.Uri, System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AuthenticateRequestAsync
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests
  syntax:
    content: public Task AuthenticateRequestAsync(Uri resource, HttpRequestMessage request)
    parameters:
    - id: resource
      type: System.Uri
    - id: request
      type: System.Net.Http.HttpRequestMessage
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AuthenticateRequestAsync(resource As Uri, request As HttpRequestMessage) As Task
  overload: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync*
  implements:
  - PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
  commentId: M:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
  id: GetAccessTokenAsync(System.Uri,System.String[])
  parent: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  langs:
  - csharp
  - vb
  name: GetAccessTokenAsync(Uri, String[])
  nameWithType: MockLegacyAuthenticationProvider.GetAccessTokenAsync(Uri, String[])
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri, System.String[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetAccessTokenAsync
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
    startLine: 18
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests
  syntax:
    content: public Task<string> GetAccessTokenAsync(Uri resource, string[] scopes)
    parameters:
    - id: resource
      type: System.Uri
    - id: scopes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GetAccessTokenAsync(resource As Uri, scopes As String()) As Task(Of String)
  overload: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync*
  implements:
  - PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
  nameWithType.vb: MockLegacyAuthenticationProvider.GetAccessTokenAsync(Uri, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri, System.String())
  name.vb: GetAccessTokenAsync(Uri, String())
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  commentId: M:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  id: GetAccessTokenAsync(System.Uri)
  parent: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  langs:
  - csharp
  - vb
  name: GetAccessTokenAsync(Uri)
  nameWithType: MockLegacyAuthenticationProvider.GetAccessTokenAsync(Uri)
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetAccessTokenAsync
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
    startLine: 23
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests
  syntax:
    content: public Task<string> GetAccessTokenAsync(Uri resource)
    parameters:
    - id: resource
      type: System.Uri
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GetAccessTokenAsync(resource As Uri) As Task(Of String)
  overload: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync*
  implements:
  - PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  commentId: M:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  id: GetCookieHeader(System.Uri)
  parent: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  langs:
  - csharp
  - vb
  name: GetCookieHeader(Uri)
  nameWithType: MockLegacyAuthenticationProvider.GetCookieHeader(Uri)
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetCookieHeader
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
    startLine: 28
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests
  syntax:
    content: public string GetCookieHeader(Uri targetUrl)
    parameters:
    - id: targetUrl
      type: System.Uri
    return:
      type: System.String
    content.vb: Public Function GetCookieHeader(targetUrl As Uri) As String
  overload: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader*
  implements:
  - PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest
  commentId: M:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest
  id: GetRequestDigest
  parent: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  langs:
  - csharp
  - vb
  name: GetRequestDigest()
  nameWithType: MockLegacyAuthenticationProvider.GetRequestDigest()
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetRequestDigest
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/MockLegacyAuthenticationProvider.cs
    startLine: 33
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests
  syntax:
    content: public string GetRequestDigest()
    return:
      type: System.String
    content.vb: Public Function GetRequestDigest As String
  overload: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest*
  implements:
  - PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Utilities.UnitTests
  commentId: N:PnP.Framework.Utilities.UnitTests
  name: PnP.Framework.Utilities.UnitTests
  nameWithType: PnP.Framework.Utilities.UnitTests
  fullName: PnP.Framework.Utilities.UnitTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Core.Services.ILegacyAuthenticationProvider
  commentId: T:PnP.Core.Services.ILegacyAuthenticationProvider
  parent: PnP.Core.Services
  isExternal: true
  name: ILegacyAuthenticationProvider
  nameWithType: ILegacyAuthenticationProvider
  fullName: PnP.Core.Services.ILegacyAuthenticationProvider
- uid: PnP.Core.Services.IAuthenticationProvider
  commentId: T:PnP.Core.Services.IAuthenticationProvider
  parent: PnP.Core.Services
  isExternal: true
  name: IAuthenticationProvider
  nameWithType: IAuthenticationProvider
  fullName: PnP.Core.Services.IAuthenticationProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<MockLegacyAuthenticationProvider>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockLegacyAuthenticationProvider>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of MockLegacyAuthenticationProvider)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of MockLegacyAuthenticationProvider)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<MockLegacyAuthenticationProvider>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockLegacyAuthenticationProvider>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of MockLegacyAuthenticationProvider)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of MockLegacyAuthenticationProvider)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<MockLegacyAuthenticationProvider, T>(Expression<Func<MockLegacyAuthenticationProvider, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<MockLegacyAuthenticationProvider, T>(Expression<Func<MockLegacyAuthenticationProvider, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of MockLegacyAuthenticationProvider, T)(Expression(Of Func(Of MockLegacyAuthenticationProvider, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of MockLegacyAuthenticationProvider, T)(Expression(Of Func(Of MockLegacyAuthenticationProvider, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<MockLegacyAuthenticationProvider, T>
    nameWithType: ObjectExtensions.Set<MockLegacyAuthenticationProvider, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
    name: MockLegacyAuthenticationProvider
    nameWithType: MockLegacyAuthenticationProvider
    fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of MockLegacyAuthenticationProvider, T)
    nameWithType: ObjectExtensions.Set(Of MockLegacyAuthenticationProvider, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
    name: MockLegacyAuthenticationProvider
    nameWithType: MockLegacyAuthenticationProvider
    fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Core.Services
  commentId: N:PnP.Core.Services
  isExternal: true
  name: PnP.Core.Services
  nameWithType: PnP.Core.Services
  fullName: PnP.Core.Services
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication
  name: RequiresCookieAuthentication
  nameWithType: MockLegacyAuthenticationProvider.RequiresCookieAuthentication
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.RequiresCookieAuthentication
- uid: PnP.Core.Services.ILegacyAuthenticationProvider.RequiresCookieAuthentication
  commentId: P:PnP.Core.Services.ILegacyAuthenticationProvider.RequiresCookieAuthentication
  parent: PnP.Core.Services.ILegacyAuthenticationProvider
  isExternal: true
  name: RequiresCookieAuthentication
  nameWithType: ILegacyAuthenticationProvider.RequiresCookieAuthentication
  fullName: PnP.Core.Services.ILegacyAuthenticationProvider.RequiresCookieAuthentication
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync
  name: AuthenticateRequestAsync
  nameWithType: MockLegacyAuthenticationProvider.AuthenticateRequestAsync
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.AuthenticateRequestAsync
- uid: PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
  commentId: M:PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
  parent: PnP.Core.Services.IAuthenticationProvider
  isExternal: true
  name: AuthenticateRequestAsync(Uri, HttpRequestMessage)
  nameWithType: IAuthenticationProvider.AuthenticateRequestAsync(Uri, HttpRequestMessage)
  fullName: PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync(System.Uri, System.Net.Http.HttpRequestMessage)
  spec.csharp:
  - uid: PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
    name: AuthenticateRequestAsync
    nameWithType: IAuthenticationProvider.AuthenticateRequestAsync
    fullName: PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync(System.Uri,System.Net.Http.HttpRequestMessage)
    name: AuthenticateRequestAsync
    nameWithType: IAuthenticationProvider.AuthenticateRequestAsync
    fullName: PnP.Core.Services.IAuthenticationProvider.AuthenticateRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync
  name: GetAccessTokenAsync
  nameWithType: MockLegacyAuthenticationProvider.GetAccessTokenAsync
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetAccessTokenAsync
- uid: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
  commentId: M:PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
  parent: PnP.Core.Services.IAuthenticationProvider
  isExternal: true
  name: GetAccessTokenAsync(Uri, String[])
  nameWithType: IAuthenticationProvider.GetAccessTokenAsync(Uri, String[])
  fullName: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri, System.String[])
  nameWithType.vb: IAuthenticationProvider.GetAccessTokenAsync(Uri, String())
  fullName.vb: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri, System.String())
  name.vb: GetAccessTokenAsync(Uri, String())
  spec.csharp:
  - uid: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
    name: GetAccessTokenAsync
    nameWithType: IAuthenticationProvider.GetAccessTokenAsync
    fullName: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri,System.String[])
    name: GetAccessTokenAsync
    nameWithType: IAuthenticationProvider.GetAccessTokenAsync
    fullName: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  commentId: M:PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  parent: PnP.Core.Services.IAuthenticationProvider
  isExternal: true
  name: GetAccessTokenAsync(Uri)
  nameWithType: IAuthenticationProvider.GetAccessTokenAsync(Uri)
  fullName: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri)
  spec.csharp:
  - uid: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri)
    name: GetAccessTokenAsync
    nameWithType: IAuthenticationProvider.GetAccessTokenAsync
    fullName: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync(System.Uri)
    name: GetAccessTokenAsync
    nameWithType: IAuthenticationProvider.GetAccessTokenAsync
    fullName: PnP.Core.Services.IAuthenticationProvider.GetAccessTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader
  name: GetCookieHeader
  nameWithType: MockLegacyAuthenticationProvider.GetCookieHeader
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetCookieHeader
- uid: PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  commentId: M:PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  parent: PnP.Core.Services.ILegacyAuthenticationProvider
  isExternal: true
  name: GetCookieHeader(Uri)
  nameWithType: ILegacyAuthenticationProvider.GetCookieHeader(Uri)
  fullName: PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader(System.Uri)
  spec.csharp:
  - uid: PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader(System.Uri)
    name: GetCookieHeader
    nameWithType: ILegacyAuthenticationProvider.GetCookieHeader
    fullName: PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader(System.Uri)
    name: GetCookieHeader
    nameWithType: ILegacyAuthenticationProvider.GetCookieHeader
    fullName: PnP.Core.Services.ILegacyAuthenticationProvider.GetCookieHeader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest
  name: GetRequestDigest
  nameWithType: MockLegacyAuthenticationProvider.GetRequestDigest
  fullName: PnP.Framework.Utilities.UnitTests.MockLegacyAuthenticationProvider.GetRequestDigest
- uid: PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest
  commentId: M:PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest
  parent: PnP.Core.Services.ILegacyAuthenticationProvider
  isExternal: true
  name: GetRequestDigest()
  nameWithType: ILegacyAuthenticationProvider.GetRequestDigest()
  fullName: PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest()
  spec.csharp:
  - uid: PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest
    name: GetRequestDigest
    nameWithType: ILegacyAuthenticationProvider.GetRequestDigest
    fullName: PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest
    name: GetRequestDigest
    nameWithType: ILegacyAuthenticationProvider.GetRequestDigest
    fullName: PnP.Core.Services.ILegacyAuthenticationProvider.GetRequestDigest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

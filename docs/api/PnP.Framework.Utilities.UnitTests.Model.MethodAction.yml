### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction
  commentId: T:PnP.Framework.Utilities.UnitTests.Model.MethodAction
  id: MethodAction
  parent: PnP.Framework.Utilities.UnitTests.Model
  children:
  - PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  - PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name
  - PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters
  langs:
  - csharp
  - vb
  name: MethodAction
  nameWithType: MethodAction
  fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MethodAction
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
    startLine: 127
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  syntax:
    content: 'public class MethodAction : BaseAction'
    content.vb: >-
      Public Class MethodAction
          Inherits BaseAction
  inheritance:
  - System.Object
  - PnP.Framework.Utilities.UnitTests.Model.BaseAction
  inheritedMembers:
  - PnP.Framework.Utilities.UnitTests.Model.BaseAction.Id
  - PnP.Framework.Utilities.UnitTests.Model.BaseAction.ObjectPathId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Utilities.UnitTests.Model.MethodAction.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Utilities.UnitTests.Model.MethodAction.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Model.MethodAction,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name
  id: Name
  parent: PnP.Framework.Utilities.UnitTests.Model.MethodAction
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MethodAction.Name
  fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Name
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
    startLine: 130
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters
  id: Parameters
  parent: PnP.Framework.Utilities.UnitTests.Model.MethodAction
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: MethodAction.Parameters
  fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Parameters
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
    startLine: 132
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  syntax:
    content: public List<Parameter> Parameters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.Parameter}
    content.vb: Public Property Parameters As List(Of Parameter)
  overload: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  commentId: M:PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  id: GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  parent: PnP.Framework.Utilities.UnitTests.Model.MethodAction
  langs:
  - csharp
  - vb
  name: GetResponse<T>(Identity, List<MockResponseEntry<T>>, CSOMRequest)
  nameWithType: MethodAction.GetResponse<T>(Identity, List<MockResponseEntry<T>>, CSOMRequest)
  fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse<T>(PnP.Framework.Utilities.UnitTests.Model.Identity, System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>, PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetResponse
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/Action.cs
    startLine: 133
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  syntax:
    content: public override string GetResponse<T>(Identity identity, List<MockResponseEntry<T>> responseEntries, CSOMRequest request)
    parameters:
    - id: identity
      type: PnP.Framework.Utilities.UnitTests.Model.Identity
    - id: responseEntries
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
    - id: request
      type: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
    typeParameters:
    - id: T
    return:
      type: System.String
    content.vb: Public Overrides Function GetResponse(Of T)(identity As Identity, responseEntries As List(Of MockResponseEntry(Of T)), request As CSOMRequest) As String
  overridden: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  overload: PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse*
  nameWithType.vb: MethodAction.GetResponse(Of T)(Identity, List(Of MockResponseEntry(Of T)), CSOMRequest)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse(Of T)(PnP.Framework.Utilities.UnitTests.Model.Identity, System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)), PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  name.vb: GetResponse(Of T)(Identity, List(Of MockResponseEntry(Of T)), CSOMRequest)
references:
- uid: PnP.Framework.Utilities.UnitTests.Model
  commentId: N:PnP.Framework.Utilities.UnitTests.Model
  name: PnP.Framework.Utilities.UnitTests.Model
  nameWithType: PnP.Framework.Utilities.UnitTests.Model
  fullName: PnP.Framework.Utilities.UnitTests.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction
  commentId: T:PnP.Framework.Utilities.UnitTests.Model.BaseAction
  parent: PnP.Framework.Utilities.UnitTests.Model
  name: BaseAction
  nameWithType: BaseAction
  fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction
- uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.Id
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.BaseAction.Id
  parent: PnP.Framework.Utilities.UnitTests.Model.BaseAction
  name: Id
  nameWithType: BaseAction.Id
  fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.Id
- uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.ObjectPathId
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.BaseAction.ObjectPathId
  parent: PnP.Framework.Utilities.UnitTests.Model.BaseAction
  name: ObjectPathId
  nameWithType: BaseAction.ObjectPathId
  fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.ObjectPathId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<MethodAction>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MethodAction>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Model.MethodAction>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of MethodAction)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Model.MethodAction)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of MethodAction)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<MethodAction>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MethodAction>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Model.MethodAction>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of MethodAction)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of MethodAction)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Model.MethodAction)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Model.MethodAction,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<MethodAction, T>(Expression<Func<MethodAction, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<MethodAction, T>(Expression<Func<MethodAction, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Model.MethodAction, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Utilities.UnitTests.Model.MethodAction, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of MethodAction, T)(Expression(Of Func(Of MethodAction, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Model.MethodAction, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Utilities.UnitTests.Model.MethodAction, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of MethodAction, T)(Expression(Of Func(Of MethodAction, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<MethodAction, T>
    nameWithType: ObjectExtensions.Set<MethodAction, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Model.MethodAction, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction
    name: MethodAction
    nameWithType: MethodAction
    fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of MethodAction, T)
    nameWithType: ObjectExtensions.Set(Of MethodAction, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Model.MethodAction, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction
    name: MethodAction
    nameWithType: MethodAction
    fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name
  name: Name
  nameWithType: MethodAction.Name
  fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters
  name: Parameters
  nameWithType: MethodAction.Parameters
  fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction.Parameters
- uid: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.Parameter}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.Parameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Parameter>
  nameWithType: List<Parameter>
  fullName: System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.Parameter>
  nameWithType.vb: List(Of Parameter)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.Parameter)
  name.vb: List(Of Parameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: PnP.Framework.Utilities.UnitTests.Model.Parameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: PnP.Framework.Utilities.UnitTests.Model.Parameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  commentId: M:PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  parent: PnP.Framework.Utilities.UnitTests.Model.BaseAction
  definition: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  name: GetResponse<T>(Identity, List<MockResponseEntry<T>>, CSOMRequest)
  nameWithType: BaseAction.GetResponse<T>(Identity, List<MockResponseEntry<T>>, CSOMRequest)
  fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse<T>(PnP.Framework.Utilities.UnitTests.Model.Identity, System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>, PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  nameWithType.vb: BaseAction.GetResponse(Of T)(Identity, List(Of MockResponseEntry(Of T)), CSOMRequest)
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse(Of T)(PnP.Framework.Utilities.UnitTests.Model.Identity, System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)), PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  name.vb: GetResponse(Of T)(Identity, List(Of MockResponseEntry(Of T)), CSOMRequest)
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
    name: GetResponse<T>
    nameWithType: BaseAction.GetResponse<T>
    fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Utilities.UnitTests.Model.Identity
    name: Identity
    nameWithType: Identity
    fullName: PnP.Framework.Utilities.UnitTests.Model.Identity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
    name: CSOMRequest
    nameWithType: CSOMRequest
    fullName: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
    name: GetResponse(Of T)
    nameWithType: BaseAction.GetResponse(Of T)
    fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Utilities.UnitTests.Model.Identity
    name: Identity
    nameWithType: Identity
    fullName: PnP.Framework.Utilities.UnitTests.Model.Identity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
    name: CSOMRequest
    nameWithType: CSOMRequest
    fullName: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse
  name: GetResponse
  nameWithType: MethodAction.GetResponse
  fullName: PnP.Framework.Utilities.UnitTests.Model.MethodAction.GetResponse
- uid: PnP.Framework.Utilities.UnitTests.Model.Identity
  commentId: T:PnP.Framework.Utilities.UnitTests.Model.Identity
  parent: PnP.Framework.Utilities.UnitTests.Model
  name: Identity
  nameWithType: Identity
  fullName: PnP.Framework.Utilities.UnitTests.Model.Identity
- uid: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MockResponseEntry<T>>
  nameWithType: List<MockResponseEntry<T>>
  fullName: System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>
  nameWithType.vb: List(Of MockResponseEntry(Of T))
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T))
  name.vb: List(Of MockResponseEntry(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  commentId: T:PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  parent: PnP.Framework.Utilities.UnitTests.Model
  name: CSOMRequest
  nameWithType: CSOMRequest
  fullName: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
- uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  commentId: M:PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  isExternal: true
  name: GetResponse<T>(Identity, List<MockResponseEntry<T>>, CSOMRequest)
  nameWithType: BaseAction.GetResponse<T>(Identity, List<MockResponseEntry<T>>, CSOMRequest)
  fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse<T>(PnP.Framework.Utilities.UnitTests.Model.Identity, System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>, PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  nameWithType.vb: BaseAction.GetResponse(Of T)(Identity, List(Of MockResponseEntry(Of T)), CSOMRequest)
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse(Of T)(PnP.Framework.Utilities.UnitTests.Model.Identity, System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)), PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  name.vb: GetResponse(Of T)(Identity, List(Of MockResponseEntry(Of T)), CSOMRequest)
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
    name: GetResponse<T>
    nameWithType: BaseAction.GetResponse<T>
    fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Utilities.UnitTests.Model.Identity
    name: Identity
    nameWithType: Identity
    fullName: PnP.Framework.Utilities.UnitTests.Model.Identity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
    name: CSOMRequest
    nameWithType: CSOMRequest
    fullName: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse``1(PnP.Framework.Utilities.UnitTests.Model.Identity,System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{``0}},PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
    name: GetResponse(Of T)
    nameWithType: BaseAction.GetResponse(Of T)
    fullName: PnP.Framework.Utilities.UnitTests.Model.BaseAction.GetResponse(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: PnP.Framework.Utilities.UnitTests.Model.Identity
    name: Identity
    nameWithType: Identity
    fullName: PnP.Framework.Utilities.UnitTests.Model.Identity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
    name: CSOMRequest
    nameWithType: CSOMRequest
    fullName: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  - name: )
    nameWithType: )
    fullName: )

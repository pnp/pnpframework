### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  commentId: T:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  id: MockResponseEntry`1
  parent: PnP.Framework.Utilities.UnitTests.Model
  children:
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Method
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.NameValueParameters
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ParentParameterValues
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PropertyName
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ReturnValue
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializedReturnValue
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializerSettings
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Url
  langs:
  - csharp
  - vb
  name: MockResponseEntry<T>
  nameWithType: MockResponseEntry<T>
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MockResponseEntry
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 7
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  syntax:
    content: public class MockResponseEntry<T>
    typeParameters:
    - id: T
    content.vb: Public Class MockResponseEntry(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}},{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  nameWithType.vb: MockResponseEntry(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T)
  name.vb: MockResponseEntry(Of T)
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializerSettings
  commentId: F:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializerSettings
  id: SerializerSettings
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: SerializerSettings
  nameWithType: MockResponseEntry<T>.SerializerSettings
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.SerializerSettings
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SerializerSettings
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  syntax:
    content: public static JsonSerializerSettings SerializerSettings
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
    content.vb: Public Shared SerializerSettings As JsonSerializerSettings
  nameWithType.vb: MockResponseEntry(Of T).SerializerSettings
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).SerializerSettings
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Url
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Url
  id: Url
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: MockResponseEntry<T>.Url
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.Url
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Url
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  summary: "\nAbsolute url of web service called\n"
  example: []
  syntax:
    content: public string Url { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Url As String
  overload: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Url*
  nameWithType.vb: MockResponseEntry(Of T).Url
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).Url
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Method
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Method
  id: Method
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: MockResponseEntry<T>.Method
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.Method
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Method
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 20
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  summary: "\nMethod name called by CSOM (GetEffectivePermissionMask, EnsureUser ect)\n"
  example: []
  syntax:
    content: public string Method { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Method As String
  overload: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Method*
  nameWithType.vb: MockResponseEntry(Of T).Method
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).Method
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.NameValueParameters
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.NameValueParameters
  id: NameValueParameters
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: NameValueParameters
  nameWithType: MockResponseEntry<T>.NameValueParameters
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.NameValueParameters
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: NameValueParameters
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  summary: "\nDictionary of parameters which should be compared with called api function parameters\n"
  example: []
  syntax:
    content: public Dictionary<string, string> NameValueParameters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property NameValueParameters As Dictionary(Of String, String)
  overload: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.NameValueParameters*
  nameWithType.vb: MockResponseEntry(Of T).NameValueParameters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).NameValueParameters
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PropertyName
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PropertyName
  id: PropertyName
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: PropertyName
  nameWithType: MockResponseEntry<T>.PropertyName
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.PropertyName
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: PropertyName
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 28
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  summary: "\nName of requested property (Web, Site)\n"
  example: []
  syntax:
    content: public string PropertyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PropertyName As String
  overload: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PropertyName*
  nameWithType.vb: MockResponseEntry(Of T).PropertyName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).PropertyName
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ParentParameterValues
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ParentParameterValues
  id: ParentParameterValues
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: ParentParameterValues
  nameWithType: MockResponseEntry<T>.ParentParameterValues
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.ParentParameterValues
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ParentParameterValues
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 33
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  summary: "\nOptional. If there is parent method call this is the list of values to compare.\nFor example when You call Web.Lists.GetByTitle(&quot;List Title&quot;).GetItems() the ParentParameterValues for GetItems will be {&quot;List Title&quot;}\n"
  example: []
  syntax:
    content: public List<string> ParentParameterValues { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ParentParameterValues As List(Of String)
  overload: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ParentParameterValues*
  nameWithType.vb: MockResponseEntry(Of T).ParentParameterValues
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).ParentParameterValues
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializedReturnValue
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializedReturnValue
  id: SerializedReturnValue
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: SerializedReturnValue
  nameWithType: MockResponseEntry<T>.SerializedReturnValue
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.SerializedReturnValue
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SerializedReturnValue
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 37
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  summary: "\nSerialized return value\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public string SerializedReturnValue { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property SerializedReturnValue As String
  overload: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializedReturnValue*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  nameWithType.vb: MockResponseEntry(Of T).SerializedReturnValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).SerializedReturnValue
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ReturnValue
  commentId: P:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ReturnValue
  id: ReturnValue
  parent: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
  langs:
  - csharp
  - vb
  name: ReturnValue
  nameWithType: MockResponseEntry<T>.ReturnValue
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.ReturnValue
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ReturnValue
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Model/MockResponseEntry.cs
    startLine: 45
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Model
  syntax:
    content: public T ReturnValue { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property ReturnValue As T
  overload: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ReturnValue*
  nameWithType.vb: MockResponseEntry(Of T).ReturnValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).ReturnValue
references:
- uid: PnP.Framework.Utilities.UnitTests.Model
  commentId: N:PnP.Framework.Utilities.UnitTests.Model
  name: PnP.Framework.Utilities.UnitTests.Model
  nameWithType: PnP.Framework.Utilities.UnitTests.Model
  fullName: PnP.Framework.Utilities.UnitTests.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<MockResponseEntry<T>>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockResponseEntry<T>>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of MockResponseEntry(Of T))(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T))(System.String)
  name.vb: ValidateNotNullOrEmpty(Of MockResponseEntry(Of T))(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<MockResponseEntry<T>>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockResponseEntry<T>>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of MockResponseEntry(Of T))
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of MockResponseEntry(Of T))
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}},{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<MockResponseEntry<T>, T>(Expression<Func<MockResponseEntry<T>, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<MockResponseEntry<T>, T>(Expression<Func<MockResponseEntry<T>, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of MockResponseEntry(Of T), T)(Expression(Of Func(Of MockResponseEntry(Of T), T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T), T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T), T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of MockResponseEntry(Of T), T)(Expression(Of Func(Of MockResponseEntry(Of T), T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<MockResponseEntry<T>, T>
    nameWithType: ObjectExtensions.Set<MockResponseEntry<T>, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of MockResponseEntry(Of T), T)
    nameWithType: ObjectExtensions.Set(Of MockResponseEntry(Of T), T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T), T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Url*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Url
  name: Url
  nameWithType: MockResponseEntry<T>.Url
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.Url
  nameWithType.vb: MockResponseEntry(Of T).Url
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).Url
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Method*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.Method
  name: Method
  nameWithType: MockResponseEntry<T>.Method
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.Method
  nameWithType.vb: MockResponseEntry(Of T).Method
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).Method
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.NameValueParameters*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.NameValueParameters
  name: NameValueParameters
  nameWithType: MockResponseEntry<T>.NameValueParameters
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.NameValueParameters
  nameWithType.vb: MockResponseEntry(Of T).NameValueParameters
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).NameValueParameters
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PropertyName*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.PropertyName
  name: PropertyName
  nameWithType: MockResponseEntry<T>.PropertyName
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.PropertyName
  nameWithType.vb: MockResponseEntry(Of T).PropertyName
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).PropertyName
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ParentParameterValues*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ParentParameterValues
  name: ParentParameterValues
  nameWithType: MockResponseEntry<T>.ParentParameterValues
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.ParentParameterValues
  nameWithType.vb: MockResponseEntry(Of T).ParentParameterValues
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).ParentParameterValues
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializedReturnValue*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.SerializedReturnValue
  name: SerializedReturnValue
  nameWithType: MockResponseEntry<T>.SerializedReturnValue
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.SerializedReturnValue
  nameWithType.vb: MockResponseEntry(Of T).SerializedReturnValue
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).SerializedReturnValue
- uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ReturnValue*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1.ReturnValue
  name: ReturnValue
  nameWithType: MockResponseEntry<T>.ReturnValue
  fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>.ReturnValue
  nameWithType.vb: MockResponseEntry(Of T).ReturnValue
  fullName.vb: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T).ReturnValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T

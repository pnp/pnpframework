### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  commentId: T:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  id: MockEntryResponseProvider`1
  parent: PnP.Framework.Utilities.UnitTests.Web
  children:
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor(PnP.Framework.Utilities.UnitTests.Model.ResponseHeader)
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.CurrentUrlResponses
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetActionObjectPathsFromRequest``1(PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetRequest(System.String)
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetResponse(System.String,System.String,System.String)
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseEntries
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseHeader
  langs:
  - csharp
  - vb
  name: MockEntryResponseProvider<T>
  nameWithType: MockEntryResponseProvider<T>
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MockEntryResponseProvider
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: 'public class MockEntryResponseProvider<T> : IMockResponseProvider'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class MockEntryResponseProvider(Of T)
          Implements IMockResponseProvider
  inheritance:
  - System.Object
  derivedClasses:
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider
  implements:
  - PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider{{T}},{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  nameWithType.vb: MockEntryResponseProvider(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T)
  name.vb: MockEntryResponseProvider(Of T)
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseEntries
  commentId: P:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseEntries
  id: ResponseEntries
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: ResponseEntries
  nameWithType: MockEntryResponseProvider<T>.ResponseEntries
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.ResponseEntries
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResponseEntries
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public List<MockResponseEntry<T>> ResponseEntries { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
    content.vb: Public Property ResponseEntries As List(Of MockResponseEntry(Of T))
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseEntries*
  nameWithType.vb: MockEntryResponseProvider(Of T).ResponseEntries
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).ResponseEntries
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.CurrentUrlResponses
  commentId: P:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.CurrentUrlResponses
  id: CurrentUrlResponses
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: CurrentUrlResponses
  nameWithType: MockEntryResponseProvider<T>.CurrentUrlResponses
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.CurrentUrlResponses
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CurrentUrlResponses
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: protected List<MockResponseEntry<T>> CurrentUrlResponses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
    content.vb: Protected Property CurrentUrlResponses As List(Of MockResponseEntry(Of T))
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.CurrentUrlResponses*
  nameWithType.vb: MockEntryResponseProvider(Of T).CurrentUrlResponses
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).CurrentUrlResponses
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseHeader
  commentId: P:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseHeader
  id: ResponseHeader
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: ResponseHeader
  nameWithType: MockEntryResponseProvider<T>.ResponseHeader
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.ResponseHeader
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResponseHeader
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public ResponseHeader ResponseHeader { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Utilities.UnitTests.Model.ResponseHeader
    content.vb: Public Property ResponseHeader As ResponseHeader
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseHeader*
  nameWithType.vb: MockEntryResponseProvider(Of T).ResponseHeader
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).ResponseHeader
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor(PnP.Framework.Utilities.UnitTests.Model.ResponseHeader)
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor(PnP.Framework.Utilities.UnitTests.Model.ResponseHeader)
  id: '#ctor(PnP.Framework.Utilities.UnitTests.Model.ResponseHeader)'
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: MockEntryResponseProvider(ResponseHeader)
  nameWithType: MockEntryResponseProvider<T>.MockEntryResponseProvider(ResponseHeader)
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.MockEntryResponseProvider(PnP.Framework.Utilities.UnitTests.Model.ResponseHeader)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public MockEntryResponseProvider(ResponseHeader responseHeader)
    parameters:
    - id: responseHeader
      type: PnP.Framework.Utilities.UnitTests.Model.ResponseHeader
    content.vb: Public Sub New(responseHeader As ResponseHeader)
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor*
  nameWithType.vb: MockEntryResponseProvider(Of T).MockEntryResponseProvider(ResponseHeader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).MockEntryResponseProvider(PnP.Framework.Utilities.UnitTests.Model.ResponseHeader)
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor
  id: '#ctor'
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: MockEntryResponseProvider()
  nameWithType: MockEntryResponseProvider<T>.MockEntryResponseProvider()
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.MockEntryResponseProvider()
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 20
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public MockEntryResponseProvider()
    content.vb: Public Sub New
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor*
  nameWithType.vb: MockEntryResponseProvider(Of T).MockEntryResponseProvider()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).MockEntryResponseProvider()
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetResponse(System.String,System.String,System.String)
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetResponse(System.String,System.String,System.String)
  id: GetResponse(System.String,System.String,System.String)
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: GetResponse(String, String, String)
  nameWithType: MockEntryResponseProvider<T>.GetResponse(String, String, String)
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.GetResponse(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetResponse
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public string GetResponse(string url, string verb, string body)
    parameters:
    - id: url
      type: System.String
    - id: verb
      type: System.String
    - id: body
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetResponse(url As String, verb As String, body As String) As String
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetResponse*
  implements:
  - PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse(System.String,System.String,System.String)
  nameWithType.vb: MockEntryResponseProvider(Of T).GetResponse(String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).GetResponse(System.String, System.String, System.String)
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetRequest(System.String)
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetRequest(System.String)
  id: GetRequest(System.String)
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: GetRequest(String)
  nameWithType: MockEntryResponseProvider<T>.GetRequest(String)
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.GetRequest(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetRequest
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public static CSOMRequest GetRequest(string body)
    parameters:
    - id: body
      type: System.String
    return:
      type: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
    content.vb: Public Shared Function GetRequest(body As String) As CSOMRequest
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetRequest*
  nameWithType.vb: MockEntryResponseProvider(Of T).GetRequest(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).GetRequest(System.String)
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetActionObjectPathsFromRequest``1(PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetActionObjectPathsFromRequest``1(PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  id: GetActionObjectPathsFromRequest``1(PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  parent: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
  langs:
  - csharp
  - vb
  name: GetActionObjectPathsFromRequest<T>(CSOMRequest)
  nameWithType: MockEntryResponseProvider<T>.GetActionObjectPathsFromRequest<T>(CSOMRequest)
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.GetActionObjectPathsFromRequest<T>(PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetActionObjectPathsFromRequest
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockEntryResponseProvider.cs
    startLine: 58
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public static List<ActionObjectPath<T>> GetActionObjectPathsFromRequest<T>(CSOMRequest request)
    parameters:
    - id: request
      type: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath{{T}}}
    content.vb: Public Shared Function GetActionObjectPathsFromRequest(Of T)(request As CSOMRequest) As List(Of ActionObjectPath(Of T))
  overload: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetActionObjectPathsFromRequest*
  nameWithType.vb: MockEntryResponseProvider(Of T).GetActionObjectPathsFromRequest(Of T)(CSOMRequest)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).GetActionObjectPathsFromRequest(Of T)(PnP.Framework.Utilities.UnitTests.Model.CSOMRequest)
  name.vb: GetActionObjectPathsFromRequest(Of T)(CSOMRequest)
references:
- uid: PnP.Framework.Utilities.UnitTests.Web
  commentId: N:PnP.Framework.Utilities.UnitTests.Web
  name: PnP.Framework.Utilities.UnitTests.Web
  nameWithType: PnP.Framework.Utilities.UnitTests.Web
  fullName: PnP.Framework.Utilities.UnitTests.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
  commentId: T:PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
  parent: PnP.Framework.Utilities.UnitTests.Web
  name: IMockResponseProvider
  nameWithType: IMockResponseProvider
  fullName: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<MockEntryResponseProvider<T>>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockEntryResponseProvider<T>>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of MockEntryResponseProvider(Of T))(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T))(System.String)
  name.vb: ValidateNotNullOrEmpty(Of MockEntryResponseProvider(Of T))(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<MockEntryResponseProvider<T>>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockEntryResponseProvider<T>>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of MockEntryResponseProvider(Of T))
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of MockEntryResponseProvider(Of T))
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider{{T}},{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<MockEntryResponseProvider<T>, T>(Expression<Func<MockEntryResponseProvider<T>, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<MockEntryResponseProvider<T>, T>(Expression<Func<MockEntryResponseProvider<T>, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of MockEntryResponseProvider(Of T), T)(Expression(Of Func(Of MockEntryResponseProvider(Of T), T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T), T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T), T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of MockEntryResponseProvider(Of T), T)(Expression(Of Func(Of MockEntryResponseProvider(Of T), T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<MockEntryResponseProvider<T>, T>
    nameWithType: ObjectExtensions.Set<MockEntryResponseProvider<T>, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
    name: MockEntryResponseProvider
    nameWithType: MockEntryResponseProvider
    fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of MockEntryResponseProvider(Of T), T)
    nameWithType: ObjectExtensions.Set(Of MockEntryResponseProvider(Of T), T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T), T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1
    name: MockEntryResponseProvider
    nameWithType: MockEntryResponseProvider
    fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseEntries*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseEntries
  name: ResponseEntries
  nameWithType: MockEntryResponseProvider<T>.ResponseEntries
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.ResponseEntries
  nameWithType.vb: MockEntryResponseProvider(Of T).ResponseEntries
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).ResponseEntries
- uid: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{{T}}}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MockResponseEntry<T>>
  nameWithType: List<MockResponseEntry<T>>
  fullName: System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry<T>>
  nameWithType.vb: List(Of MockResponseEntry(Of T))
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry(Of T))
  name.vb: List(Of MockResponseEntry(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry`1
    name: MockResponseEntry
    nameWithType: MockResponseEntry
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponseEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.CurrentUrlResponses*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.CurrentUrlResponses
  name: CurrentUrlResponses
  nameWithType: MockEntryResponseProvider<T>.CurrentUrlResponses
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.CurrentUrlResponses
  nameWithType.vb: MockEntryResponseProvider(Of T).CurrentUrlResponses
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).CurrentUrlResponses
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseHeader*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.ResponseHeader
  name: ResponseHeader
  nameWithType: MockEntryResponseProvider<T>.ResponseHeader
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.ResponseHeader
  nameWithType.vb: MockEntryResponseProvider(Of T).ResponseHeader
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).ResponseHeader
- uid: PnP.Framework.Utilities.UnitTests.Model.ResponseHeader
  commentId: T:PnP.Framework.Utilities.UnitTests.Model.ResponseHeader
  parent: PnP.Framework.Utilities.UnitTests.Model
  name: ResponseHeader
  nameWithType: ResponseHeader
  fullName: PnP.Framework.Utilities.UnitTests.Model.ResponseHeader
- uid: PnP.Framework.Utilities.UnitTests.Model
  commentId: N:PnP.Framework.Utilities.UnitTests.Model
  name: PnP.Framework.Utilities.UnitTests.Model
  nameWithType: PnP.Framework.Utilities.UnitTests.Model
  fullName: PnP.Framework.Utilities.UnitTests.Model
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.#ctor
  name: MockEntryResponseProvider
  nameWithType: MockEntryResponseProvider<T>.MockEntryResponseProvider
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.MockEntryResponseProvider
  nameWithType.vb: MockEntryResponseProvider(Of T).MockEntryResponseProvider
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).MockEntryResponseProvider
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetResponse*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetResponse
  name: GetResponse
  nameWithType: MockEntryResponseProvider<T>.GetResponse
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.GetResponse
  nameWithType.vb: MockEntryResponseProvider(Of T).GetResponse
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).GetResponse
- uid: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse(System.String,System.String,System.String)
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse(System.String,System.String,System.String)
  parent: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
  isExternal: true
  name: GetResponse(String, String, String)
  nameWithType: IMockResponseProvider.GetResponse(String, String, String)
  fullName: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse(System.String, System.String, System.String)
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse(System.String,System.String,System.String)
    name: GetResponse
    nameWithType: IMockResponseProvider.GetResponse
    fullName: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse(System.String,System.String,System.String)
    name: GetResponse
    nameWithType: IMockResponseProvider.GetResponse
    fullName: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider.GetResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetRequest*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetRequest
  name: GetRequest
  nameWithType: MockEntryResponseProvider<T>.GetRequest
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.GetRequest
  nameWithType.vb: MockEntryResponseProvider(Of T).GetRequest
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).GetRequest
- uid: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  commentId: T:PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
  parent: PnP.Framework.Utilities.UnitTests.Model
  name: CSOMRequest
  nameWithType: CSOMRequest
  fullName: PnP.Framework.Utilities.UnitTests.Model.CSOMRequest
- uid: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetActionObjectPathsFromRequest*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider`1.GetActionObjectPathsFromRequest
  name: GetActionObjectPathsFromRequest
  nameWithType: MockEntryResponseProvider<T>.GetActionObjectPathsFromRequest
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider<T>.GetActionObjectPathsFromRequest
  nameWithType.vb: MockEntryResponseProvider(Of T).GetActionObjectPathsFromRequest
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockEntryResponseProvider(Of T).GetActionObjectPathsFromRequest
- uid: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath{{T}}}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ActionObjectPath<T>>
  nameWithType: List<ActionObjectPath<T>>
  fullName: System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath<T>>
  nameWithType.vb: List(Of ActionObjectPath(Of T))
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath(Of T))
  name.vb: List(Of ActionObjectPath(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath`1
    name: ActionObjectPath
    nameWithType: ActionObjectPath
    fullName: PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath`1
    name: ActionObjectPath
    nameWithType: ActionObjectPath
    fullName: PnP.Framework.Utilities.UnitTests.Model.ActionObjectPath
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )

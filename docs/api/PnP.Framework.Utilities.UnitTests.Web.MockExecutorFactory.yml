### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  commentId: T:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  id: MockExecutorFactory
  parent: PnP.Framework.Utilities.UnitTests.Web
  children:
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.#ctor(PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider,PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse},System.Boolean)
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.OnRequestExecuted
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData
  langs:
  - csharp
  - vb
  name: MockExecutorFactory
  nameWithType: MockExecutorFactory
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MockExecutorFactory
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: 'public class MockExecutorFactory : WebRequestExecutorFactory'
    content.vb: >-
      Public Class MockExecutorFactory
          Inherits WebRequestExecutorFactory
  inheritance:
  - System.Object
  - Microsoft.SharePoint.Client.WebRequestExecutorFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest
  commentId: P:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest
  id: RunAsIntegrationTest
  parent: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  langs:
  - csharp
  - vb
  name: RunAsIntegrationTest
  nameWithType: MockExecutorFactory.RunAsIntegrationTest
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: RunAsIntegrationTest
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public bool RunAsIntegrationTest { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RunAsIntegrationTest As Boolean
  overload: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.OnRequestExecuted
  commentId: E:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.OnRequestExecuted
  id: OnRequestExecuted
  parent: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  langs:
  - csharp
  - vb
  name: OnRequestExecuted
  nameWithType: MockExecutorFactory.OnRequestExecuted
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.OnRequestExecuted
  type: Event
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: OnRequestExecuted
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 13
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public event EventHandler<RequestExecutedArgs> OnRequestExecuted
    return:
      type: System.EventHandler{PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs}
    content.vb: Public Event OnRequestExecuted As EventHandler(Of RequestExecutedArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository
  commentId: P:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository
  id: MockDataRepository
  parent: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  langs:
  - csharp
  - vb
  name: MockDataRepository
  nameWithType: MockExecutorFactory.MockDataRepository
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: MockDataRepository
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 14
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public IMockDataRepository<MockResponse> MockDataRepository { get; set; }
    parameters: []
    return:
      type: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse}
    content.vb: Public Property MockDataRepository As IMockDataRepository(Of MockResponse)
  overload: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses
  commentId: P:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses
  id: IntegrationResponses
  parent: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  langs:
  - csharp
  - vb
  name: IntegrationResponses
  nameWithType: MockExecutorFactory.IntegrationResponses
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: IntegrationResponses
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 15
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public List<MockResponse> IntegrationResponses { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponse}
    content.vb: Public ReadOnly Property IntegrationResponses As List(Of MockResponse)
  overload: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.#ctor(PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider,PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse},System.Boolean)
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.#ctor(PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider,PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse},System.Boolean)
  id: '#ctor(PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider,PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse},System.Boolean)'
  parent: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  langs:
  - csharp
  - vb
  name: MockExecutorFactory(IMockResponseProvider, IMockDataRepository<MockResponse>, Boolean)
  nameWithType: MockExecutorFactory.MockExecutorFactory(IMockResponseProvider, IMockDataRepository<MockResponse>, Boolean)
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockExecutorFactory(PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider, PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<PnP.Framework.Utilities.UnitTests.Model.MockResponse>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 16
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public MockExecutorFactory(IMockResponseProvider responseProvider, IMockDataRepository<MockResponse> repo, bool runAsIntegrationTests = false)
    parameters:
    - id: responseProvider
      type: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
    - id: repo
      type: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse}
    - id: runAsIntegrationTests
      type: System.Boolean
    content.vb: Public Sub New(responseProvider As IMockResponseProvider, repo As IMockDataRepository(Of MockResponse), runAsIntegrationTests As Boolean = False)
  overload: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.#ctor*
  nameWithType.vb: MockExecutorFactory.MockExecutorFactory(IMockResponseProvider, IMockDataRepository(Of MockResponse), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockExecutorFactory(PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider, PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of PnP.Framework.Utilities.UnitTests.Model.MockResponse), System.Boolean)
  name.vb: MockExecutorFactory(IMockResponseProvider, IMockDataRepository(Of MockResponse), Boolean)
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
  id: CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
  parent: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  langs:
  - csharp
  - vb
  name: CreateWebRequestExecutor(ClientRuntimeContext, String)
  nameWithType: MockExecutorFactory.CreateWebRequestExecutor(ClientRuntimeContext, String)
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CreateWebRequestExecutor
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 24
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public override WebRequestExecutor CreateWebRequestExecutor(ClientRuntimeContext context, string requestUrl)
    parameters:
    - id: context
      type: Microsoft.SharePoint.Client.ClientRuntimeContext
    - id: requestUrl
      type: System.String
    return:
      type: Microsoft.SharePoint.Client.WebRequestExecutor
    content.vb: Public Overrides Function CreateWebRequestExecutor(context As ClientRuntimeContext, requestUrl As String) As WebRequestExecutor
  overridden: Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
  overload: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData
  commentId: M:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData
  id: SaveMockData
  parent: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  langs:
  - csharp
  - vb
  name: SaveMockData()
  nameWithType: MockExecutorFactory.SaveMockData()
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SaveMockData
    path: ../src/lib/PnP.Framework/Utilities/UnitTests/Web/MockExecutorFactory.cs
    startLine: 44
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities.UnitTests.Web
  syntax:
    content: public void SaveMockData()
    content.vb: Public Sub SaveMockData
  overload: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PnP.Framework.Utilities.UnitTests.Web
  commentId: N:PnP.Framework.Utilities.UnitTests.Web
  name: PnP.Framework.Utilities.UnitTests.Web
  nameWithType: PnP.Framework.Utilities.UnitTests.Web
  fullName: PnP.Framework.Utilities.UnitTests.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.SharePoint.Client.WebRequestExecutorFactory
  commentId: T:Microsoft.SharePoint.Client.WebRequestExecutorFactory
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: WebRequestExecutorFactory
  nameWithType: WebRequestExecutorFactory
  fullName: Microsoft.SharePoint.Client.WebRequestExecutorFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<MockExecutorFactory>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockExecutorFactory>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of MockExecutorFactory)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of MockExecutorFactory)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<MockExecutorFactory>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<MockExecutorFactory>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of MockExecutorFactory)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of MockExecutorFactory)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<MockExecutorFactory, T>(Expression<Func<MockExecutorFactory, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<MockExecutorFactory, T>(Expression<Func<MockExecutorFactory, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory, T>(System.Linq.Expressions.Expression<System.Func<PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of MockExecutorFactory, T)(Expression(Of Func(Of MockExecutorFactory, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory, T)(System.Linq.Expressions.Expression(Of System.Func(Of PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of MockExecutorFactory, T)(Expression(Of Func(Of MockExecutorFactory, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<MockExecutorFactory, T>
    nameWithType: ObjectExtensions.Set<MockExecutorFactory, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
    name: MockExecutorFactory
    nameWithType: MockExecutorFactory
    fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of MockExecutorFactory, T)
    nameWithType: ObjectExtensions.Set(Of MockExecutorFactory, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
    name: MockExecutorFactory
    nameWithType: MockExecutorFactory
    fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SharePoint.Client
  commentId: N:Microsoft.SharePoint.Client
  name: Microsoft.SharePoint.Client
  nameWithType: Microsoft.SharePoint.Client
  fullName: Microsoft.SharePoint.Client
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest
  name: RunAsIntegrationTest
  nameWithType: MockExecutorFactory.RunAsIntegrationTest
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.RunAsIntegrationTest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EventHandler{PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs}
  commentId: T:System.EventHandler{PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<RequestExecutedArgs>
  nameWithType: EventHandler<RequestExecutedArgs>
  fullName: System.EventHandler<PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs>
  nameWithType.vb: EventHandler(Of RequestExecutedArgs)
  fullName.vb: System.EventHandler(Of PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs)
  name.vb: EventHandler(Of RequestExecutedArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs
    name: RequestExecutedArgs
    nameWithType: RequestExecutedArgs
    fullName: PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs
    name: RequestExecutedArgs
    nameWithType: RequestExecutedArgs
    fullName: PnP.Framework.Utilities.UnitTests.Model.RequestExecutedArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository
  name: MockDataRepository
  nameWithType: MockExecutorFactory.MockDataRepository
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockDataRepository
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse}
  commentId: T:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository{PnP.Framework.Utilities.UnitTests.Model.MockResponse}
  parent: PnP.Framework.Utilities.UnitTests.Helpers
  definition: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
  name: IMockDataRepository<MockResponse>
  nameWithType: IMockDataRepository<MockResponse>
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<PnP.Framework.Utilities.UnitTests.Model.MockResponse>
  nameWithType.vb: IMockDataRepository(Of MockResponse)
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of PnP.Framework.Utilities.UnitTests.Model.MockResponse)
  name.vb: IMockDataRepository(Of MockResponse)
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponse
    name: MockResponse
    nameWithType: MockResponse
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponse
    name: MockResponse
    nameWithType: MockResponse
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
  commentId: T:PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
  name: IMockDataRepository<T>
  nameWithType: IMockDataRepository<T>
  fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository<T>
  nameWithType.vb: IMockDataRepository(Of T)
  fullName.vb: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository(Of T)
  name.vb: IMockDataRepository(Of T)
  spec.csharp:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository`1
    name: IMockDataRepository
    nameWithType: IMockDataRepository
    fullName: PnP.Framework.Utilities.UnitTests.Helpers.IMockDataRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Helpers
  commentId: N:PnP.Framework.Utilities.UnitTests.Helpers
  name: PnP.Framework.Utilities.UnitTests.Helpers
  nameWithType: PnP.Framework.Utilities.UnitTests.Helpers
  fullName: PnP.Framework.Utilities.UnitTests.Helpers
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses
  name: IntegrationResponses
  nameWithType: MockExecutorFactory.IntegrationResponses
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.IntegrationResponses
- uid: System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponse}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Utilities.UnitTests.Model.MockResponse}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MockResponse>
  nameWithType: List<MockResponse>
  fullName: System.Collections.Generic.List<PnP.Framework.Utilities.UnitTests.Model.MockResponse>
  nameWithType.vb: List(Of MockResponse)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Utilities.UnitTests.Model.MockResponse)
  name.vb: List(Of MockResponse)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponse
    name: MockResponse
    nameWithType: MockResponse
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Utilities.UnitTests.Model.MockResponse
    name: MockResponse
    nameWithType: MockResponse
    fullName: PnP.Framework.Utilities.UnitTests.Model.MockResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.#ctor*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.#ctor
  name: MockExecutorFactory
  nameWithType: MockExecutorFactory.MockExecutorFactory
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.MockExecutorFactory
- uid: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
  commentId: T:PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
  parent: PnP.Framework.Utilities.UnitTests.Web
  name: IMockResponseProvider
  nameWithType: IMockResponseProvider
  fullName: PnP.Framework.Utilities.UnitTests.Web.IMockResponseProvider
- uid: Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
  commentId: M:Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
  parent: Microsoft.SharePoint.Client.WebRequestExecutorFactory
  isExternal: true
  name: CreateWebRequestExecutor(ClientRuntimeContext, String)
  nameWithType: WebRequestExecutorFactory.CreateWebRequestExecutor(ClientRuntimeContext, String)
  fullName: Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext, System.String)
  spec.csharp:
  - uid: Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
    name: CreateWebRequestExecutor
    nameWithType: WebRequestExecutorFactory.CreateWebRequestExecutor
    fullName: Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)
    name: CreateWebRequestExecutor
    nameWithType: WebRequestExecutorFactory.CreateWebRequestExecutor
    fullName: Microsoft.SharePoint.Client.WebRequestExecutorFactory.CreateWebRequestExecutor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SharePoint.Client.ClientRuntimeContext
    name: ClientRuntimeContext
    nameWithType: ClientRuntimeContext
    fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor
  name: CreateWebRequestExecutor
  nameWithType: MockExecutorFactory.CreateWebRequestExecutor
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.CreateWebRequestExecutor
- uid: Microsoft.SharePoint.Client.ClientRuntimeContext
  commentId: T:Microsoft.SharePoint.Client.ClientRuntimeContext
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: ClientRuntimeContext
  nameWithType: ClientRuntimeContext
  fullName: Microsoft.SharePoint.Client.ClientRuntimeContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SharePoint.Client.WebRequestExecutor
  commentId: T:Microsoft.SharePoint.Client.WebRequestExecutor
  parent: Microsoft.SharePoint.Client
  isExternal: true
  name: WebRequestExecutor
  nameWithType: WebRequestExecutor
  fullName: Microsoft.SharePoint.Client.WebRequestExecutor
- uid: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData*
  commentId: Overload:PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData
  name: SaveMockData
  nameWithType: MockExecutorFactory.SaveMockData
  fullName: PnP.Framework.Utilities.UnitTests.Web.MockExecutorFactory.SaveMockData

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.X509CertificateUtility
  commentId: T:PnP.Framework.Utilities.X509CertificateUtility
  id: X509CertificateUtility
  parent: PnP.Framework.Utilities
  children:
  - PnP.Framework.Utilities.X509CertificateUtility.Decrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  - PnP.Framework.Utilities.X509CertificateUtility.Encrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  - PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  langs:
  - csharp
  - vb
  name: X509CertificateUtility
  nameWithType: X509CertificateUtility
  fullName: PnP.Framework.Utilities.X509CertificateUtility
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: X509CertificateUtility
    path: ../src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
    startLine: 9
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nSupporting class for certificate based operations\n"
  example: []
  syntax:
    content: public static class X509CertificateUtility
    content.vb: Public Module X509CertificateUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  commentId: M:PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  id: LoadCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  parent: PnP.Framework.Utilities.X509CertificateUtility
  langs:
  - csharp
  - vb
  name: LoadCertificate(StoreName, StoreLocation, String)
  nameWithType: X509CertificateUtility.LoadCertificate(StoreName, StoreLocation, String)
  fullName: PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate(System.Security.Cryptography.X509Certificates.StoreName, System.Security.Cryptography.X509Certificates.StoreLocation, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: LoadCertificate
    path: ../src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
    startLine: 18
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nLoads a certificate from a given certificate store\n"
  example: []
  syntax:
    content: public static X509Certificate2 LoadCertificate(StoreName storeName, StoreLocation storeLocation, string thumbprint)
    parameters:
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: Name of the certificate store
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: Location of the certificate store
    - id: thumbprint
      type: System.String
      description: Thumbprint of the certificate to load
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> certificate
    content.vb: Public Shared Function LoadCertificate(storeName As StoreName, storeLocation As StoreLocation, thumbprint As String) As X509Certificate2
  overload: PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.X509CertificateUtility.Encrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:PnP.Framework.Utilities.X509CertificateUtility.Encrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Encrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: PnP.Framework.Utilities.X509CertificateUtility
  langs:
  - csharp
  - vb
  name: Encrypt(Byte[], Boolean, X509Certificate2)
  nameWithType: X509CertificateUtility.Encrypt(Byte[], Boolean, X509Certificate2)
  fullName: PnP.Framework.Utilities.X509CertificateUtility.Encrypt(System.Byte[], System.Boolean, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Encrypt
    path: ../src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
    startLine: 49
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nEncrypts data based on the RSACryptoServiceProvider\n"
  example: []
  syntax:
    content: public static byte[] Encrypt(byte[] plainData, bool fOAEP, X509Certificate2 certificate)
    parameters:
    - id: plainData
      type: System.Byte[]
      description: Bytes to encrypt
    - id: fOAEP
      type: System.Boolean
      description: true to perform direct System.Security.Cryptography.RSA decryption using OAEP padding
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: Certificate to use
    return:
      type: System.Byte[]
      description: Encrypted bytes
    content.vb: Public Shared Function Encrypt(plainData As Byte(), fOAEP As Boolean, certificate As X509Certificate2) As Byte()
  overload: PnP.Framework.Utilities.X509CertificateUtility.Encrypt*
  nameWithType.vb: X509CertificateUtility.Encrypt(Byte(), Boolean, X509Certificate2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.X509CertificateUtility.Encrypt(System.Byte(), System.Boolean, System.Security.Cryptography.X509Certificates.X509Certificate2)
  name.vb: Encrypt(Byte(), Boolean, X509Certificate2)
- uid: PnP.Framework.Utilities.X509CertificateUtility.Decrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:PnP.Framework.Utilities.X509CertificateUtility.Decrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Decrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: PnP.Framework.Utilities.X509CertificateUtility
  langs:
  - csharp
  - vb
  name: Decrypt(Byte[], Boolean, X509Certificate2)
  nameWithType: X509CertificateUtility.Decrypt(Byte[], Boolean, X509Certificate2)
  fullName: PnP.Framework.Utilities.X509CertificateUtility.Decrypt(System.Byte[], System.Boolean, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Decrypt
    path: ../src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
    startLine: 77
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nDecrypts data based on the RSACryptoServiceProvider\n"
  example: []
  syntax:
    content: public static byte[] Decrypt(byte[] encryptedData, bool fOAEP, X509Certificate2 certificate)
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: Bytes to decrypt
    - id: fOAEP
      type: System.Boolean
      description: true to perform direct System.Security.Cryptography.RSA decryption using OAEP padding
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: Certificate to use
    return:
      type: System.Byte[]
      description: Decrypted bytes
    content.vb: Public Shared Function Decrypt(encryptedData As Byte(), fOAEP As Boolean, certificate As X509Certificate2) As Byte()
  overload: PnP.Framework.Utilities.X509CertificateUtility.Decrypt*
  nameWithType.vb: X509CertificateUtility.Decrypt(Byte(), Boolean, X509Certificate2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.X509CertificateUtility.Decrypt(System.Byte(), System.Boolean, System.Security.Cryptography.X509Certificates.X509Certificate2)
  name.vb: Decrypt(Byte(), Boolean, X509Certificate2)
- uid: PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: GetPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: PnP.Framework.Utilities.X509CertificateUtility
  langs:
  - csharp
  - vb
  name: GetPublicKey(X509Certificate2)
  nameWithType: X509CertificateUtility.GetPublicKey(X509Certificate2)
  fullName: PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetPublicKey
    path: ../src/lib/PnP.Framework/Utilities/X509CertificateUtility.cs
    startLine: 101
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nReturns the certificate public key\n"
  example: []
  syntax:
    content: public static string GetPublicKey(X509Certificate2 certificate)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: Certificate to operate on
    return:
      type: System.String
      description: Public key of the certificate
    content.vb: Public Shared Function GetPublicKey(certificate As X509Certificate2) As String
  overload: PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Utilities
  commentId: N:PnP.Framework.Utilities
  name: PnP.Framework.Utilities
  nameWithType: PnP.Framework.Utilities
  fullName: PnP.Framework.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate*
  commentId: Overload:PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate
  name: LoadCertificate
  nameWithType: X509CertificateUtility.LoadCertificate
  fullName: PnP.Framework.Utilities.X509CertificateUtility.LoadCertificate
- uid: System.Security.Cryptography.X509Certificates.StoreName
  commentId: T:System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  commentId: T:System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: PnP.Framework.Utilities.X509CertificateUtility.Encrypt*
  commentId: Overload:PnP.Framework.Utilities.X509CertificateUtility.Encrypt
  name: Encrypt
  nameWithType: X509CertificateUtility.Encrypt
  fullName: PnP.Framework.Utilities.X509CertificateUtility.Encrypt
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Utilities.X509CertificateUtility.Decrypt*
  commentId: Overload:PnP.Framework.Utilities.X509CertificateUtility.Decrypt
  name: Decrypt
  nameWithType: X509CertificateUtility.Decrypt
  fullName: PnP.Framework.Utilities.X509CertificateUtility.Decrypt
- uid: PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey*
  commentId: Overload:PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey
  name: GetPublicKey
  nameWithType: X509CertificateUtility.GetPublicKey
  fullName: PnP.Framework.Utilities.X509CertificateUtility.GetPublicKey

### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.XMLSerializer
  commentId: T:PnP.Framework.Utilities.XMLSerializer
  id: XMLSerializer
  parent: PnP.Framework.Utilities
  children:
  - PnP.Framework.Utilities.XMLSerializer.Deserialize``1(System.String)
  - PnP.Framework.Utilities.XMLSerializer.Deserialize``1(System.Xml.Linq.XDocument)
  - PnP.Framework.Utilities.XMLSerializer.Serialize``1(``0)
  - PnP.Framework.Utilities.XMLSerializer.Serialize``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  - PnP.Framework.Utilities.XMLSerializer.SerializeToStream``1(``0)
  - PnP.Framework.Utilities.XMLSerializer.SerializeToStream``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  langs:
  - csharp
  - vb
  name: XMLSerializer
  nameWithType: XMLSerializer
  fullName: PnP.Framework.Utilities.XMLSerializer
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/XMLSerializer.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: XMLSerializer
    path: ../src/lib/PnP.Framework/Utilities/XMLSerializer.cs
    startLine: 11
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nHolds methods for XML serialization\n"
  example: []
  syntax:
    content: public static class XMLSerializer
    content.vb: Public Module XMLSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PnP.Framework.Utilities.XMLSerializer.Deserialize``1(System.Xml.Linq.XDocument)
  commentId: M:PnP.Framework.Utilities.XMLSerializer.Deserialize``1(System.Xml.Linq.XDocument)
  id: Deserialize``1(System.Xml.Linq.XDocument)
  parent: PnP.Framework.Utilities.XMLSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(XDocument)
  nameWithType: XMLSerializer.Deserialize<T>(XDocument)
  fullName: PnP.Framework.Utilities.XMLSerializer.Deserialize<T>(System.Xml.Linq.XDocument)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/XMLSerializer.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Deserialize
    path: ../src/lib/PnP.Framework/Utilities/XMLSerializer.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nDeserialize an XDocuemnt to instance of an object T\n"
  example: []
  syntax:
    content: public static T Deserialize<T>(XDocument xdoc)
    parameters:
    - id: xdoc
      type: System.Xml.Linq.XDocument
      description: XML document
    typeParameters:
    - id: T
      description: Generic Type paramerter
    return:
      type: '{T}'
      description: Returns deserialized object
    content.vb: Public Shared Function Deserialize(Of T)(xdoc As XDocument) As T
  overload: PnP.Framework.Utilities.XMLSerializer.Deserialize*
  nameWithType.vb: XMLSerializer.Deserialize(Of T)(XDocument)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.XMLSerializer.Deserialize(Of T)(System.Xml.Linq.XDocument)
  name.vb: Deserialize(Of T)(XDocument)
- uid: PnP.Framework.Utilities.XMLSerializer.Serialize``1(``0)
  commentId: M:PnP.Framework.Utilities.XMLSerializer.Serialize``1(``0)
  id: Serialize``1(``0)
  parent: PnP.Framework.Utilities.XMLSerializer
  langs:
  - csharp
  - vb
  name: Serialize<T>(T)
  nameWithType: XMLSerializer.Serialize<T>(T)
  fullName: PnP.Framework.Utilities.XMLSerializer.Serialize<T>(T)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/XMLSerializer.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Serialize
    path: ../src/lib/PnP.Framework/Utilities/XMLSerializer.cs
    startLine: 61
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nSerializes an object instance to an XML represented string. \n"
  example: []
  syntax:
    content: >-
      public static string Serialize<T>(T objectToSerialize)
          where T : new()
    parameters:
    - id: objectToSerialize
      type: '{T}'
      description: Object to serialize
    typeParameters:
    - id: T
      description: Generic Type parameter
    return:
      type: System.String
      description: An string that represents the serialized object.
    content.vb: Public Shared Function Serialize(Of T As New)(objectToSerialize As T) As String
  overload: PnP.Framework.Utilities.XMLSerializer.Serialize*
  nameWithType.vb: XMLSerializer.Serialize(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.XMLSerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
- uid: PnP.Framework.Utilities.XMLSerializer.Serialize``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  commentId: M:PnP.Framework.Utilities.XMLSerializer.Serialize``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  id: Serialize``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: PnP.Framework.Utilities.XMLSerializer
  langs:
  - csharp
  - vb
  name: Serialize<T>(T, XmlSerializerNamespaces)
  nameWithType: XMLSerializer.Serialize<T>(T, XmlSerializerNamespaces)
  fullName: PnP.Framework.Utilities.XMLSerializer.Serialize<T>(T, System.Xml.Serialization.XmlSerializerNamespaces)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/XMLSerializer.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Serialize
    path: ../src/lib/PnP.Framework/Utilities/XMLSerializer.cs
    startLine: 73
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nSerializes an object instance to an XML represented string, providing custom namespace prefixes. \n"
  example: []
  syntax:
    content: >-
      public static string Serialize<T>(T objectToSerialize, XmlSerializerNamespaces ns)
          where T : new()
    parameters:
    - id: objectToSerialize
      type: '{T}'
      description: ''
    - id: ns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: Xml serialization namespace
    typeParameters:
    - id: T
      description: Generic type object to serialize
    return:
      type: System.String
      description: An string that represents the serialized object.
    content.vb: Public Shared Function Serialize(Of T As New)(objectToSerialize As T, ns As XmlSerializerNamespaces) As String
  overload: PnP.Framework.Utilities.XMLSerializer.Serialize*
  nameWithType.vb: XMLSerializer.Serialize(Of T)(T, XmlSerializerNamespaces)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.XMLSerializer.Serialize(Of T)(T, System.Xml.Serialization.XmlSerializerNamespaces)
  name.vb: Serialize(Of T)(T, XmlSerializerNamespaces)
- uid: PnP.Framework.Utilities.XMLSerializer.SerializeToStream``1(``0)
  commentId: M:PnP.Framework.Utilities.XMLSerializer.SerializeToStream``1(``0)
  id: SerializeToStream``1(``0)
  parent: PnP.Framework.Utilities.XMLSerializer
  langs:
  - csharp
  - vb
  name: SerializeToStream<T>(T)
  nameWithType: XMLSerializer.SerializeToStream<T>(T)
  fullName: PnP.Framework.Utilities.XMLSerializer.SerializeToStream<T>(T)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/XMLSerializer.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SerializeToStream
    path: ../src/lib/PnP.Framework/Utilities/XMLSerializer.cs
    startLine: 96
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nSerializes an object instance to a stream. \n"
  example: []
  syntax:
    content: >-
      public static Stream SerializeToStream<T>(T objectToSerialize)
          where T : new()
    parameters:
    - id: objectToSerialize
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: Generic type to serialize
    return:
      type: System.IO.Stream
      description: An string that represents the serialized object.
    content.vb: Public Shared Function SerializeToStream(Of T As New)(objectToSerialize As T) As Stream
  overload: PnP.Framework.Utilities.XMLSerializer.SerializeToStream*
  nameWithType.vb: XMLSerializer.SerializeToStream(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.XMLSerializer.SerializeToStream(Of T)(T)
  name.vb: SerializeToStream(Of T)(T)
- uid: PnP.Framework.Utilities.XMLSerializer.SerializeToStream``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  commentId: M:PnP.Framework.Utilities.XMLSerializer.SerializeToStream``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  id: SerializeToStream``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: PnP.Framework.Utilities.XMLSerializer
  langs:
  - csharp
  - vb
  name: SerializeToStream<T>(T, XmlSerializerNamespaces)
  nameWithType: XMLSerializer.SerializeToStream<T>(T, XmlSerializerNamespaces)
  fullName: PnP.Framework.Utilities.XMLSerializer.SerializeToStream<T>(T, System.Xml.Serialization.XmlSerializerNamespaces)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/XMLSerializer.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SerializeToStream
    path: ../src/lib/PnP.Framework/Utilities/XMLSerializer.cs
    startLine: 108
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nSerializes an object instance to a stream, providing custom namespace prefixes. \n"
  example: []
  syntax:
    content: >-
      public static Stream SerializeToStream<T>(T objectToSerialize, XmlSerializerNamespaces ns)
          where T : new()
    parameters:
    - id: objectToSerialize
      type: '{T}'
      description: ''
    - id: ns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: Xml serializer namespace
    typeParameters:
    - id: T
      description: Generic type to serialize
    return:
      type: System.IO.Stream
      description: An string that represents the serialized object.
    content.vb: Public Shared Function SerializeToStream(Of T As New)(objectToSerialize As T, ns As XmlSerializerNamespaces) As Stream
  overload: PnP.Framework.Utilities.XMLSerializer.SerializeToStream*
  nameWithType.vb: XMLSerializer.SerializeToStream(Of T)(T, XmlSerializerNamespaces)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.XMLSerializer.SerializeToStream(Of T)(T, System.Xml.Serialization.XmlSerializerNamespaces)
  name.vb: SerializeToStream(Of T)(T, XmlSerializerNamespaces)
- uid: PnP.Framework.Utilities.XMLSerializer.Deserialize``1(System.String)
  commentId: M:PnP.Framework.Utilities.XMLSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: PnP.Framework.Utilities.XMLSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(String)
  nameWithType: XMLSerializer.Deserialize<T>(String)
  fullName: PnP.Framework.Utilities.XMLSerializer.Deserialize<T>(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/XMLSerializer.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Deserialize
    path: ../src/lib/PnP.Framework/Utilities/XMLSerializer.cs
    startLine: 131
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nDeserializes an XML string to an object instance\n"
  example: []
  syntax:
    content: >-
      public static T Deserialize<T>(string xmlString)
          where T : new()
    parameters:
    - id: xmlString
      type: System.String
      description: A string in XML format that representing the serialized object
    typeParameters:
    - id: T
      description: The Object Type to Desserialize
    return:
      type: '{T}'
      description: An object instance of T
    content.vb: Public Shared Function Deserialize(Of T As New)(xmlString As String) As T
  overload: PnP.Framework.Utilities.XMLSerializer.Deserialize*
  nameWithType.vb: XMLSerializer.Deserialize(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PnP.Framework.Utilities.XMLSerializer.Deserialize(Of T)(System.String)
  name.vb: Deserialize(Of T)(String)
references:
- uid: PnP.Framework.Utilities
  commentId: N:PnP.Framework.Utilities
  name: PnP.Framework.Utilities
  nameWithType: PnP.Framework.Utilities
  fullName: PnP.Framework.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Utilities.XMLSerializer.Deserialize*
  commentId: Overload:PnP.Framework.Utilities.XMLSerializer.Deserialize
  name: Deserialize
  nameWithType: XMLSerializer.Deserialize
  fullName: PnP.Framework.Utilities.XMLSerializer.Deserialize
- uid: System.Xml.Linq.XDocument
  commentId: T:System.Xml.Linq.XDocument
  parent: System.Xml.Linq
  isExternal: true
  name: XDocument
  nameWithType: XDocument
  fullName: System.Xml.Linq.XDocument
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: PnP.Framework.Utilities.XMLSerializer.Serialize*
  commentId: Overload:PnP.Framework.Utilities.XMLSerializer.Serialize
  name: Serialize
  nameWithType: XMLSerializer.Serialize
  fullName: PnP.Framework.Utilities.XMLSerializer.Serialize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  commentId: T:System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializerNamespaces
  nameWithType: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: PnP.Framework.Utilities.XMLSerializer.SerializeToStream*
  commentId: Overload:PnP.Framework.Utilities.XMLSerializer.SerializeToStream
  name: SerializeToStream
  nameWithType: XMLSerializer.SerializeToStream
  fullName: PnP.Framework.Utilities.XMLSerializer.SerializeToStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO

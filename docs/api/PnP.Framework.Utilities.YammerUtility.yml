### YamlMime:ManagedReference
items:
- uid: PnP.Framework.Utilities.YammerUtility
  commentId: T:PnP.Framework.Utilities.YammerUtility
  id: YammerUtility
  parent: PnP.Framework.Utilities
  children:
  - PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  - PnP.Framework.Utilities.YammerUtility.CreateYammerGroup(System.String,System.Boolean,System.String)
  - PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  - PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.String)
  - PnP.Framework.Utilities.YammerUtility.GetYammerGroupById(System.Int32,System.String)
  - PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName(System.String,System.String)
  - PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart(System.String,System.Int32,System.Boolean,System.Boolean)
  - PnP.Framework.Utilities.YammerUtility.GetYammerGroups(System.String)
  - PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)
  - PnP.Framework.Utilities.YammerUtility.GetYammerUser(System.String)
  langs:
  - csharp
  - vb
  name: YammerUtility
  nameWithType: YammerUtility
  fullName: PnP.Framework.Utilities.YammerUtility
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: YammerUtility
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 12
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nHolds yammer operation methods\n"
  example: []
  syntax:
    content: public static class YammerUtility
    content.vb: Public Module YammerUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName(System.String,System.String)
  commentId: M:PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName(System.String,System.String)
  id: GetYammerGroupByName(System.String,System.String)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: GetYammerGroupByName(String, String)
  nameWithType: YammerUtility.GetYammerGroupByName(String, String)
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetYammerGroupByName
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 20
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nReturns Yammer Group if group exists. If the group does not exist, returns null.\n"
  example: []
  syntax:
    content: public static YammerGroup GetYammerGroupByName(string groupName, string accessToken)
    parameters:
    - id: groupName
      type: System.String
      description: Group name to search for
    - id: accessToken
      type: System.String
      description: accessToken will have all the required permissions to update or retrieve data to Yammer on behalf of the user
    return:
      type: PnP.Framework.Entities.YammerGroup
      description: Returns Yammer Group is group exists. If group does not exists, returns null.
    content.vb: Public Shared Function GetYammerGroupByName(groupName As String, accessToken As String) As YammerGroup
  overload: PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroupById(System.Int32,System.String)
  commentId: M:PnP.Framework.Utilities.YammerUtility.GetYammerGroupById(System.Int32,System.String)
  id: GetYammerGroupById(System.Int32,System.String)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: GetYammerGroupById(Int32, String)
  nameWithType: YammerUtility.GetYammerGroupById(Int32, String)
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroupById(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetYammerGroupById
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 41
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nReturns Yammer Group if group exists. If the group does not exist, returns null.\n"
  example: []
  syntax:
    content: public static YammerGroup GetYammerGroupById(int groupId, string accessToken)
    parameters:
    - id: groupId
      type: System.Int32
      description: Group Id to search for
    - id: accessToken
      type: System.String
      description: accessToken will have all the required permissions to update or retrieve data to Yammer on behalf of the user
    return:
      type: PnP.Framework.Entities.YammerGroup
      description: Returns Yammer Group is group exists. If group does not exists, returns null.
    content.vb: Public Shared Function GetYammerGroupById(groupId As Integer, accessToken As String) As YammerGroup
  overload: PnP.Framework.Utilities.YammerUtility.GetYammerGroupById*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroups(System.String)
  commentId: M:PnP.Framework.Utilities.YammerUtility.GetYammerGroups(System.String)
  id: GetYammerGroups(System.String)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: GetYammerGroups(String)
  nameWithType: YammerUtility.GetYammerGroups(String)
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroups(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetYammerGroups
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 61
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nReturns Yammer groups based on the access token. All groups are returned for registered apps.\n"
  example: []
  syntax:
    content: public static List<YammerGroup> GetYammerGroups(string accessToken)
    parameters:
    - id: accessToken
      type: System.String
      description: accessToken will have all the required permissions to update or retrieve data to Yammer on behalf of the user
    return:
      type: System.Collections.Generic.List{PnP.Framework.Entities.YammerGroup}
      description: All groups in the network
    content.vb: Public Shared Function GetYammerGroups(accessToken As String) As List(Of YammerGroup)
  overload: PnP.Framework.Utilities.YammerUtility.GetYammerGroups*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerUser(System.String)
  commentId: M:PnP.Framework.Utilities.YammerUtility.GetYammerUser(System.String)
  id: GetYammerUser(System.String)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: GetYammerUser(String)
  nameWithType: YammerUtility.GetYammerUser(String)
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerUser(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetYammerUser
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 85
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nReturns yammer user if user exists. If the user doesn&apos;t exist, returns null\n"
  example: []
  syntax:
    content: public static YammerUser GetYammerUser(string accessToken)
    parameters:
    - id: accessToken
      type: System.String
      description: accessToken will have all the required permissions to update or retrieve data to Yammer on behalf of the user
    return:
      type: PnP.Framework.Entities.YammerUser
      description: ''
    content.vb: Public Shared Function GetYammerUser(accessToken As String) As YammerUser
  overload: PnP.Framework.Utilities.YammerUtility.GetYammerUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerGroup(System.String,System.Boolean,System.String)
  commentId: M:PnP.Framework.Utilities.YammerUtility.CreateYammerGroup(System.String,System.Boolean,System.String)
  id: CreateYammerGroup(System.String,System.Boolean,System.String)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: CreateYammerGroup(String, Boolean, String)
  nameWithType: YammerUtility.CreateYammerGroup(String, Boolean, String)
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerGroup(System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CreateYammerGroup
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 99
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nCan be used to create Yammer group to the Yammer network\n"
  example: []
  syntax:
    content: public static YammerGroup CreateYammerGroup(string groupName, bool isPrivate, string accessToken)
    parameters:
    - id: groupName
      type: System.String
      description: Creates yammer group with given name
    - id: isPrivate
      type: System.Boolean
      description: Sets yammer groups as private if the value is true. Otherwise sets as public group
    - id: accessToken
      type: System.String
      description: accessToken will have all the required permissions to update or retrieve data to Yammer on behalf of the user
    return:
      type: PnP.Framework.Entities.YammerGroup
      description: Returns YammerGroup created
    content.vb: Public Shared Function CreateYammerGroup(groupName As String, isPrivate As Boolean, accessToken As String) As YammerGroup
  overload: PnP.Framework.Utilities.YammerUtility.CreateYammerGroup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart(System.String,System.Int32,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart(System.String,System.Int32,System.Boolean,System.Boolean)
  id: GetYammerGroupDiscussionPart(System.String,System.Int32,System.Boolean,System.Boolean)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: GetYammerGroupDiscussionPart(String, Int32, Boolean, Boolean)
  nameWithType: YammerUtility.GetYammerGroupDiscussionPart(String, Int32, Boolean, Boolean)
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart(System.String, System.Int32, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetYammerGroupDiscussionPart
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 121
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nCreates web part entity with the Yammer group structure on it\n"
  example: []
  syntax:
    content: public static WebPartEntity GetYammerGroupDiscussionPart(string yammerNetworkName, int yammerGroupId, bool showHeader, bool showFooter)
    parameters:
    - id: yammerNetworkName
      type: System.String
      description: Yammer group network name
    - id: yammerGroupId
      type: System.Int32
      description: Yammer group id
    - id: showHeader
      type: System.Boolean
      description: Shows header of webpart based on the value
    - id: showFooter
      type: System.Boolean
      description: Shows footer of webpart based on value
    return:
      type: PnP.Framework.Entities.WebPartEntity
      description: Returns created WebPartEntity
    content.vb: Public Shared Function GetYammerGroupDiscussionPart(yammerNetworkName As String, yammerGroupId As Integer, showHeader As Boolean, showFooter As Boolean) As WebPartEntity
  overload: PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)
  commentId: M:PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)
  id: GetYammerOpenGraphDiscussionPart(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: GetYammerOpenGraphDiscussionPart(String, String, Boolean, Boolean, String, String, String)
  nameWithType: YammerUtility.GetYammerOpenGraphDiscussionPart(String, String, Boolean, Boolean, String, String, String)
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart(System.String, System.String, System.Boolean, System.Boolean, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetYammerOpenGraphDiscussionPart
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 143
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nCreates web part entity with the Yammer OpenGraph structure on it for specific URL\n"
  example: []
  syntax:
    content: public static WebPartEntity GetYammerOpenGraphDiscussionPart(string yammerNetworkName, string url, bool showHeader, bool showFooter, string postTitle = "", string postImageUrl = "", string defaultGroupId = "")
    parameters:
    - id: yammerNetworkName
      type: System.String
      description: Yammer network name
    - id: url
      type: System.String
      description: yammer URL
    - id: showHeader
      type: System.Boolean
      description: Shows header based on value
    - id: showFooter
      type: System.Boolean
      description: Shows footer based on value
    - id: postTitle
      type: System.String
      description: creates webpart with given post title
    - id: postImageUrl
      type: System.String
      description: creates webpart with given post title
    - id: defaultGroupId
      type: System.String
      description: creates webpart with givne group id
    return:
      type: PnP.Framework.Entities.WebPartEntity
      description: Returns created WebPartEntity
    content.vb: Public Shared Function GetYammerOpenGraphDiscussionPart(yammerNetworkName As String, url As String, showHeader As Boolean, showFooter As Boolean, postTitle As String = "", postImageUrl As String = "", defaultGroupId As String = "") As WebPartEntity
  overload: PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  id: CreateYammerDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: CreateYammerDiscussionPartXml(String, Int32, Boolean, Boolean, Boolean)
  nameWithType: YammerUtility.CreateYammerDiscussionPartXml(String, Int32, Boolean, Boolean, Boolean)
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml(System.String, System.Int32, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CreateYammerDiscussionPartXml
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 163
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nConstructs the webpart XML for yammer group needed to inject as Yammer web part to SharePoint page\n"
  example: []
  syntax:
    content: public static string CreateYammerDiscussionPartXml(string yammerNetworkName, int yammerGroupId, bool showHeader, bool showFooter, bool useSSO = true)
    parameters:
    - id: yammerNetworkName
      type: System.String
      description: Yammer network name
    - id: yammerGroupId
      type: System.Int32
      description: Group ID
    - id: showHeader
      type: System.Boolean
      description: Shows header based on value
    - id: showFooter
      type: System.Boolean
      description: Shows footer based on value
    - id: useSSO
      type: System.Boolean
      description: uses given Single Sign-on information to create webpart
    return:
      type: System.String
      description: The constructed web part XML
    content.vb: Public Shared Function CreateYammerDiscussionPartXml(yammerNetworkName As String, yammerGroupId As Integer, showHeader As Boolean, showFooter As Boolean, useSSO As Boolean = True) As String
  overload: PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  id: CreateYammerGroupDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: CreateYammerGroupDiscussionPartXml(String, Int32, Boolean, Boolean, Boolean)
  nameWithType: YammerUtility.CreateYammerGroupDiscussionPartXml(String, Int32, Boolean, Boolean, Boolean)
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml(System.String, System.Int32, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CreateYammerGroupDiscussionPartXml
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 177
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nConstructs the webpart XML for yammer group needed to inject as Yammer web part to SharePoint page\n"
  example: []
  syntax:
    content: public static string CreateYammerGroupDiscussionPartXml(string yammerNetworkName, int yammerGroupId, bool showHeader, bool showFooter, bool useSSO = true)
    parameters:
    - id: yammerNetworkName
      type: System.String
      description: Yammer network name
    - id: yammerGroupId
      type: System.Int32
      description: Group ID
    - id: showHeader
      type: System.Boolean
      description: Shows header based on value
    - id: showFooter
      type: System.Boolean
      description: Shows footer based on value
    - id: useSSO
      type: System.Boolean
      description: uses given Single Sign-on information to create webpart
    return:
      type: System.String
      description: The constructed web part XML
    content.vb: Public Shared Function CreateYammerGroupDiscussionPartXml(yammerNetworkName As String, yammerGroupId As Integer, showHeader As Boolean, showFooter As Boolean, useSSO As Boolean = True) As String
  overload: PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.String)
  commentId: M:PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.String)
  id: CreateYammerOpenGraphDiscussionPartXml(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.String)
  parent: PnP.Framework.Utilities.YammerUtility
  langs:
  - csharp
  - vb
  name: CreateYammerOpenGraphDiscussionPartXml(String, String, Boolean, Boolean, String, String, Boolean, String)
  nameWithType: YammerUtility.CreateYammerOpenGraphDiscussionPartXml(String, String, Boolean, Boolean, String, String, Boolean, String)
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml(System.String, System.String, System.Boolean, System.Boolean, System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/Utilities/YammerUtility.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: CreateYammerOpenGraphDiscussionPartXml
    path: ../src/lib/PnP.Framework/Utilities/YammerUtility.cs
    startLine: 224
  assemblies:
  - PnP.Framework
  namespace: PnP.Framework.Utilities
  summary: "\nConstructs web part definition for Open Graph discussion web part definition\n"
  example: []
  syntax:
    content: public static string CreateYammerOpenGraphDiscussionPartXml(string yammerNetworkName, string url, bool showHeader, bool showFooter, string postTitle = "", string postImageUrl = "", bool useSso = true, string groupId = "")
    parameters:
    - id: yammerNetworkName
      type: System.String
      description: Yammer network name
    - id: url
      type: System.String
      description: Yammer URL
    - id: showHeader
      type: System.Boolean
      description: Shows header based on value
    - id: showFooter
      type: System.Boolean
      description: Shows footer based on value
    - id: postTitle
      type: System.String
      description: creates webpart with given post title
    - id: postImageUrl
      type: System.String
      description: creates webpart with given post title
    - id: useSso
      type: System.Boolean
      description: uses given Single Sign-on information to create webpart
    - id: groupId
      type: System.String
      description: yammer group id
    return:
      type: System.String
      description: The constructed Open Graph Discussion Part XML
    content.vb: Public Shared Function CreateYammerOpenGraphDiscussionPartXml(yammerNetworkName As String, url As String, showHeader As Boolean, showFooter As Boolean, postTitle As String = "", postImageUrl As String = "", useSso As Boolean = True, groupId As String = "") As String
  overload: PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PnP.Framework.Utilities
  commentId: N:PnP.Framework.Utilities
  name: PnP.Framework.Utilities
  nameWithType: PnP.Framework.Utilities
  fullName: PnP.Framework.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName
  name: GetYammerGroupByName
  nameWithType: YammerUtility.GetYammerGroupByName
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroupByName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PnP.Framework.Entities.YammerGroup
  commentId: T:PnP.Framework.Entities.YammerGroup
  parent: PnP.Framework.Entities
  name: YammerGroup
  nameWithType: YammerGroup
  fullName: PnP.Framework.Entities.YammerGroup
- uid: PnP.Framework.Entities
  commentId: N:PnP.Framework.Entities
  name: PnP.Framework.Entities
  nameWithType: PnP.Framework.Entities
  fullName: PnP.Framework.Entities
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroupById*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.GetYammerGroupById
  name: GetYammerGroupById
  nameWithType: YammerUtility.GetYammerGroupById
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroupById
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroups*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.GetYammerGroups
  name: GetYammerGroups
  nameWithType: YammerUtility.GetYammerGroups
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroups
- uid: System.Collections.Generic.List{PnP.Framework.Entities.YammerGroup}
  commentId: T:System.Collections.Generic.List{PnP.Framework.Entities.YammerGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<YammerGroup>
  nameWithType: List<YammerGroup>
  fullName: System.Collections.Generic.List<PnP.Framework.Entities.YammerGroup>
  nameWithType.vb: List(Of YammerGroup)
  fullName.vb: System.Collections.Generic.List(Of PnP.Framework.Entities.YammerGroup)
  name.vb: List(Of YammerGroup)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PnP.Framework.Entities.YammerGroup
    name: YammerGroup
    nameWithType: YammerGroup
    fullName: PnP.Framework.Entities.YammerGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PnP.Framework.Entities.YammerGroup
    name: YammerGroup
    nameWithType: YammerGroup
    fullName: PnP.Framework.Entities.YammerGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerUser*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.GetYammerUser
  name: GetYammerUser
  nameWithType: YammerUtility.GetYammerUser
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerUser
- uid: PnP.Framework.Entities.YammerUser
  commentId: T:PnP.Framework.Entities.YammerUser
  parent: PnP.Framework.Entities
  name: YammerUser
  nameWithType: YammerUser
  fullName: PnP.Framework.Entities.YammerUser
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerGroup*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.CreateYammerGroup
  name: CreateYammerGroup
  nameWithType: YammerUtility.CreateYammerGroup
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart
  name: GetYammerGroupDiscussionPart
  nameWithType: YammerUtility.GetYammerGroupDiscussionPart
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerGroupDiscussionPart
- uid: PnP.Framework.Entities.WebPartEntity
  commentId: T:PnP.Framework.Entities.WebPartEntity
  parent: PnP.Framework.Entities
  name: WebPartEntity
  nameWithType: WebPartEntity
  fullName: PnP.Framework.Entities.WebPartEntity
- uid: PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart
  name: GetYammerOpenGraphDiscussionPart
  nameWithType: YammerUtility.GetYammerOpenGraphDiscussionPart
  fullName: PnP.Framework.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml
  name: CreateYammerDiscussionPartXml
  nameWithType: YammerUtility.CreateYammerDiscussionPartXml
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerDiscussionPartXml
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml
  name: CreateYammerGroupDiscussionPartXml
  nameWithType: YammerUtility.CreateYammerGroupDiscussionPartXml
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml
- uid: PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml*
  commentId: Overload:PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml
  name: CreateYammerOpenGraphDiscussionPartXml
  nameWithType: YammerUtility.CreateYammerOpenGraphDiscussionPartXml
  fullName: PnP.Framework.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml

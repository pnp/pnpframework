### YamlMime:ManagedReference
items:
- uid: System.Resources.NetStandard.ResXResourceReader
  commentId: T:System.Resources.NetStandard.ResXResourceReader
  id: ResXResourceReader
  parent: System.Resources.NetStandard
  children:
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream)
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader)
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.String)
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.NetStandard.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  - System.Resources.NetStandard.ResXResourceReader.BasePath
  - System.Resources.NetStandard.ResXResourceReader.Close
  - System.Resources.NetStandard.ResXResourceReader.Dispose(System.Boolean)
  - System.Resources.NetStandard.ResXResourceReader.Finalize
  - System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String)
  - System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  - System.Resources.NetStandard.ResXResourceReader.GetEnumerator
  - System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator
  - System.Resources.NetStandard.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.NetStandard.ResXResourceReader.System#IDisposable#Dispose
  - System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes
  langs:
  - csharp
  - vb
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.NetStandard.ResXResourceReader
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResXResourceReader
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 22
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nResX resource reader.\n"
  example: []
  syntax:
    content: 'public class ResXResourceReader : IResourceReader, IEnumerable, IDisposable'
    content.vb: >-
      Public Class ResXResourceReader
          Implements IResourceReader, IEnumerable, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceReader
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Resources.NetStandard.ResXResourceReader.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - System.Resources.NetStandard.ResXResourceReader.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{System.Resources.NetStandard.ResXResourceReader,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.String)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.String)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 54
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: Public Sub New(fileName As String)
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(String, ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String, ITypeResolutionService)
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.String, System.ComponentModel.Design.ITypeResolutionService)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 57
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(string fileName, ITypeResolutionService typeResolver)
    parameters:
    - id: fileName
      type: System.String
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
    content.vb: Public Sub New(fileName As String, typeResolver As ITypeResolutionService)
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.TextReader)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 67
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(TextReader reader)
    parameters:
    - id: reader
      type: System.IO.TextReader
    content.vb: Public Sub New(reader As TextReader)
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(TextReader, ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader, ITypeResolutionService)
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.TextReader, System.ComponentModel.Design.ITypeResolutionService)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 70
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(TextReader reader, ITypeResolutionService typeResolver)
    parameters:
    - id: reader
      type: System.IO.TextReader
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
    content.vb: Public Sub New(reader As TextReader, typeResolver As ITypeResolutionService)
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 80
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
    content.vb: Public Sub New(stream As Stream)
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(Stream, ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream, ITypeResolutionService)
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.Stream, System.ComponentModel.Design.ITypeResolutionService)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 83
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(Stream stream, ITypeResolutionService typeResolver)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
    content.vb: Public Sub New(stream As Stream, typeResolver As ITypeResolutionService)
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.Stream,System.Reflection.AssemblyName[])'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(Stream, AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream, AssemblyName[])
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.Stream, System.Reflection.AssemblyName[])
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 93
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(Stream stream, AssemblyName[] assemblyNames)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
    content.vb: Public Sub New(stream As Stream, assemblyNames As AssemblyName())
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  nameWithType.vb: ResXResourceReader.ResXResourceReader(Stream, AssemblyName())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.Stream, System.Reflection.AssemblyName())
  name.vb: ResXResourceReader(Stream, AssemblyName())
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(TextReader, AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader, AssemblyName[])
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.TextReader, System.Reflection.AssemblyName[])
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 103
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(TextReader reader, AssemblyName[] assemblyNames)
    parameters:
    - id: reader
      type: System.IO.TextReader
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
    content.vb: Public Sub New(reader As TextReader, assemblyNames As AssemblyName())
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  nameWithType.vb: ResXResourceReader.ResXResourceReader(TextReader, AssemblyName())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.IO.TextReader, System.Reflection.AssemblyName())
  name.vb: ResXResourceReader(TextReader, AssemblyName())
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  commentId: M:System.Resources.NetStandard.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  id: '#ctor(System.String,System.Reflection.AssemblyName[])'
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: ResXResourceReader(String, AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String, AssemblyName[])
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.String, System.Reflection.AssemblyName[])
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 113
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceReader(string fileName, AssemblyName[] assemblyNames)
    parameters:
    - id: fileName
      type: System.String
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
    content.vb: Public Sub New(fileName As String, assemblyNames As AssemblyName())
  overload: System.Resources.NetStandard.ResXResourceReader.#ctor*
  nameWithType.vb: ResXResourceReader.ResXResourceReader(String, AssemblyName())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader(System.String, System.Reflection.AssemblyName())
  name.vb: ResXResourceReader(String, AssemblyName())
- uid: System.Resources.NetStandard.ResXResourceReader.Finalize
  commentId: M:System.Resources.NetStandard.ResXResourceReader.Finalize
  id: Finalize
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.NetStandard.ResXResourceReader.Finalize()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Finalize
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 123
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: System.Resources.NetStandard.ResXResourceReader.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Resources.NetStandard.ResXResourceReader.BasePath
  commentId: P:System.Resources.NetStandard.ResXResourceReader.BasePath
  id: BasePath
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.NetStandard.ResXResourceReader.BasePath
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BasePath
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 131
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nBasePath for relatives filepaths with ResXFileRefs.\n"
  example: []
  syntax:
    content: public string BasePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BasePath As String
  overload: System.Resources.NetStandard.ResXResourceReader.BasePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes
  commentId: P:System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes
  id: UseResXDataNodes
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: UseResXDataNodes
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 153
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nResXFileRef&apos;s TypeConverter automatically unwraps it, creates the referenced\nobject and returns it. This property gives the user control over whether this unwrapping should\nhappen, or a ResXFileRef object should be returned. Default is true for backward compat and common case\nscenario.\n"
  example: []
  syntax:
    content: public bool UseResXDataNodes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseResXDataNodes As Boolean
  overload: System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.Close
  commentId: M:System.Resources.NetStandard.ResXResourceReader.Close
  id: Close
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.NetStandard.ResXResourceReader.Close()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Close
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 173
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCloses and files or streams being used by the reader.\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: System.Resources.NetStandard.ResXResourceReader.Close*
  implements:
  - System.Resources.IResourceReader.Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.System#IDisposable#Dispose
  commentId: M:System.Resources.NetStandard.ResXResourceReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  nameWithType: ResXResourceReader.IDisposable.Dispose()
  fullName: System.Resources.NetStandard.ResXResourceReader.System.IDisposable.Dispose()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: System.IDisposable.Dispose
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 179
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  overload: System.Resources.NetStandard.ResXResourceReader.System#IDisposable#Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: ResXResourceReader.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
- uid: System.Resources.NetStandard.ResXResourceReader.Dispose(System.Boolean)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.NetStandard.ResXResourceReader.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Dispose
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 185
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: System.Resources.NetStandard.ResXResourceReader.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String)
  id: FromFileContents(System.String)
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FromFileContents
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 273
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCreates a reader with the specified file contents.\n"
  example: []
  syntax:
    content: public static ResXResourceReader FromFileContents(string fileContents)
    parameters:
    - id: fileContents
      type: System.String
    return:
      type: System.Resources.NetStandard.ResXResourceReader
    content.vb: Public Shared Function FromFileContents(fileContents As String) As ResXResourceReader
  overload: System.Resources.NetStandard.ResXResourceReader.FromFileContents*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  commentId: M:System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: FromFileContents(String, ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String, ITypeResolutionService)
  fullName: System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String, System.ComponentModel.Design.ITypeResolutionService)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FromFileContents
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 281
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCreates a reader with the specified file contents.\n"
  example: []
  syntax:
    content: public static ResXResourceReader FromFileContents(string fileContents, ITypeResolutionService typeResolver)
    parameters:
    - id: fileContents
      type: System.String
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
    return:
      type: System.Resources.NetStandard.ResXResourceReader
    content.vb: Public Shared Function FromFileContents(fileContents As String, typeResolver As ITypeResolutionService) As ResXResourceReader
  overload: System.Resources.NetStandard.ResXResourceReader.FromFileContents*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  commentId: M:System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  id: FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: FromFileContents(String, AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String, AssemblyName[])
  fullName: System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String, System.Reflection.AssemblyName[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: FromFileContents
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 292
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCreates a reader with the specified file contents.\n"
  example: []
  syntax:
    content: public static ResXResourceReader FromFileContents(string fileContents, AssemblyName[] assemblyNames)
    parameters:
    - id: fileContents
      type: System.String
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
    return:
      type: System.Resources.NetStandard.ResXResourceReader
    content.vb: Public Shared Function FromFileContents(fileContents As String, assemblyNames As AssemblyName()) As ResXResourceReader
  overload: System.Resources.NetStandard.ResXResourceReader.FromFileContents*
  nameWithType.vb: ResXResourceReader.FromFileContents(String, AssemblyName())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Resources.NetStandard.ResXResourceReader.FromFileContents(System.String, System.Reflection.AssemblyName())
  name.vb: FromFileContents(String, AssemblyName())
- uid: System.Resources.NetStandard.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Resources.NetStandard.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.IEnumerable.GetEnumerator()
  fullName: System.Resources.NetStandard.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 301
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: System.Resources.NetStandard.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: System.Resources.NetStandard.ResXResourceReader.GetEnumerator
  commentId: M:System.Resources.NetStandard.ResXResourceReader.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.NetStandard.ResXResourceReader.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetEnumerator
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 307
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public IDictionaryEnumerator GetEnumerator()
    return:
      type: System.Collections.IDictionaryEnumerator
    content.vb: Public Function GetEnumerator As IDictionaryEnumerator
  overload: System.Resources.NetStandard.ResXResourceReader.GetEnumerator*
  implements:
  - System.Resources.IResourceReader.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator
  commentId: M:System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator
  id: GetMetadataEnumerator
  parent: System.Resources.NetStandard.ResXResourceReader
  langs:
  - csharp
  - vb
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: GetMetadataEnumerator
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceReader.cs
    startLine: 317
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nReturns a dictionary enumerator that can be used to enumerate the &lt;metadata> elements in the .resx file.\n"
  example: []
  syntax:
    content: public IDictionaryEnumerator GetMetadataEnumerator()
    return:
      type: System.Collections.IDictionaryEnumerator
    content.vb: Public Function GetMetadataEnumerator As IDictionaryEnumerator
  overload: System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Resources.NetStandard
  commentId: N:System.Resources.NetStandard
  name: System.Resources.NetStandard
  nameWithType: System.Resources.NetStandard
  fullName: System.Resources.NetStandard
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Resources.IResourceReader
  commentId: T:System.Resources.IResourceReader
  parent: System.Resources
  isExternal: true
  name: IResourceReader
  nameWithType: IResourceReader
  fullName: System.Resources.IResourceReader
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXResourceReader.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ResXResourceReader>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ResXResourceReader>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<System.Resources.NetStandard.ResXResourceReader>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ResXResourceReader)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of System.Resources.NetStandard.ResXResourceReader)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ResXResourceReader)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ResXResourceReader>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ResXResourceReader>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<System.Resources.NetStandard.ResXResourceReader>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ResXResourceReader)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ResXResourceReader)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of System.Resources.NetStandard.ResXResourceReader)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXResourceReader.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{System.Resources.NetStandard.ResXResourceReader,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ResXResourceReader, T>(Expression<Func<ResXResourceReader, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ResXResourceReader, T>(Expression<Func<ResXResourceReader, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<System.Resources.NetStandard.ResXResourceReader, T>(System.Linq.Expressions.Expression<System.Func<System.Resources.NetStandard.ResXResourceReader, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ResXResourceReader, T)(Expression(Of Func(Of ResXResourceReader, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of System.Resources.NetStandard.ResXResourceReader, T)(System.Linq.Expressions.Expression(Of System.Func(Of System.Resources.NetStandard.ResXResourceReader, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ResXResourceReader, T)(Expression(Of Func(Of ResXResourceReader, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ResXResourceReader, T>
    nameWithType: ObjectExtensions.Set<ResXResourceReader, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<System.Resources.NetStandard.ResXResourceReader, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Resources.NetStandard.ResXResourceReader
    name: ResXResourceReader
    nameWithType: ResXResourceReader
    fullName: System.Resources.NetStandard.ResXResourceReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ResXResourceReader, T)
    nameWithType: ObjectExtensions.Set(Of ResXResourceReader, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of System.Resources.NetStandard.ResXResourceReader, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Resources.NetStandard.ResXResourceReader
    name: ResXResourceReader
    nameWithType: ResXResourceReader
    fullName: System.Resources.NetStandard.ResXResourceReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Resources
  commentId: N:System.Resources
  isExternal: true
  name: System.Resources
  nameWithType: System.Resources
  fullName: System.Resources
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: System.Resources.NetStandard.ResXResourceReader.#ctor*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.#ctor
  name: ResXResourceReader
  nameWithType: ResXResourceReader.ResXResourceReader
  fullName: System.Resources.NetStandard.ResXResourceReader.ResXResourceReader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.ITypeResolutionService
  commentId: T:System.ComponentModel.Design.ITypeResolutionService
  parent: System.ComponentModel.Design
  isExternal: true
  name: ITypeResolutionService
  nameWithType: ITypeResolutionService
  fullName: System.ComponentModel.Design.ITypeResolutionService
- uid: System.ComponentModel.Design
  commentId: N:System.ComponentModel.Design
  isExternal: true
  name: System.ComponentModel.Design
  nameWithType: System.ComponentModel.Design
  fullName: System.ComponentModel.Design
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Reflection.AssemblyName[]
  isExternal: true
  name: AssemblyName[]
  nameWithType: AssemblyName[]
  fullName: System.Reflection.AssemblyName[]
  nameWithType.vb: AssemblyName()
  fullName.vb: System.Reflection.AssemblyName()
  name.vb: AssemblyName()
  spec.csharp:
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Resources.NetStandard.ResXResourceReader.Finalize*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.Finalize
  name: Finalize
  nameWithType: ResXResourceReader.Finalize
  fullName: System.Resources.NetStandard.ResXResourceReader.Finalize
- uid: System.Resources.NetStandard.ResXResourceReader.BasePath*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.BasePath
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.NetStandard.ResXResourceReader.BasePath
- uid: System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.NetStandard.ResXResourceReader.UseResXDataNodes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.NetStandard.ResXResourceReader.Close*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.Close
  name: Close
  nameWithType: ResXResourceReader.Close
  fullName: System.Resources.NetStandard.ResXResourceReader.Close
- uid: System.Resources.IResourceReader.Close
  commentId: M:System.Resources.IResourceReader.Close
  parent: System.Resources.IResourceReader
  isExternal: true
  name: Close()
  nameWithType: IResourceReader.Close()
  fullName: System.Resources.IResourceReader.Close()
  spec.csharp:
  - uid: System.Resources.IResourceReader.Close
    name: Close
    nameWithType: IResourceReader.Close
    fullName: System.Resources.IResourceReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.IResourceReader.Close
    name: Close
    nameWithType: IResourceReader.Close
    fullName: System.Resources.IResourceReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXResourceReader.System#IDisposable#Dispose*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.System#IDisposable#Dispose
  name: IDisposable.Dispose
  nameWithType: ResXResourceReader.IDisposable.Dispose
  fullName: System.Resources.NetStandard.ResXResourceReader.System.IDisposable.Dispose
  nameWithType.vb: ResXResourceReader.System.IDisposable.Dispose
  name.vb: System.IDisposable.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXResourceReader.Dispose*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.Dispose
  name: Dispose
  nameWithType: ResXResourceReader.Dispose
  fullName: System.Resources.NetStandard.ResXResourceReader.Dispose
- uid: System.Resources.NetStandard.ResXResourceReader.FromFileContents*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.FromFileContents
  name: FromFileContents
  nameWithType: ResXResourceReader.FromFileContents
  fullName: System.Resources.NetStandard.ResXResourceReader.FromFileContents
- uid: System.Resources.NetStandard.ResXResourceReader
  commentId: T:System.Resources.NetStandard.ResXResourceReader
  parent: System.Resources.NetStandard
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.NetStandard.ResXResourceReader
- uid: System.Resources.NetStandard.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ResXResourceReader.IEnumerable.GetEnumerator
  fullName: System.Resources.NetStandard.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.NetStandard.ResXResourceReader.GetEnumerator*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.GetEnumerator
  name: GetEnumerator
  nameWithType: ResXResourceReader.GetEnumerator
  fullName: System.Resources.NetStandard.ResXResourceReader.GetEnumerator
- uid: System.Resources.IResourceReader.GetEnumerator
  commentId: M:System.Resources.IResourceReader.GetEnumerator
  parent: System.Resources.IResourceReader
  isExternal: true
  name: GetEnumerator()
  nameWithType: IResourceReader.GetEnumerator()
  fullName: System.Resources.IResourceReader.GetEnumerator()
  spec.csharp:
  - uid: System.Resources.IResourceReader.GetEnumerator
    name: GetEnumerator
    nameWithType: IResourceReader.GetEnumerator
    fullName: System.Resources.IResourceReader.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.IResourceReader.GetEnumerator
    name: GetEnumerator
    nameWithType: IResourceReader.GetEnumerator
    fullName: System.Resources.IResourceReader.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionaryEnumerator
  commentId: T:System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator*
  commentId: Overload:System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator
  name: GetMetadataEnumerator
  nameWithType: ResXResourceReader.GetMetadataEnumerator
  fullName: System.Resources.NetStandard.ResXResourceReader.GetMetadataEnumerator

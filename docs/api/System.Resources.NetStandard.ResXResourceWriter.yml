### YamlMime:ManagedReference
items:
- uid: System.Resources.NetStandard.ResXResourceWriter
  commentId: T:System.Resources.NetStandard.ResXResourceWriter
  id: ResXResourceWriter
  parent: System.Resources.NetStandard
  children:
  - System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.Stream)
  - System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})
  - System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.TextWriter)
  - System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})
  - System.Resources.NetStandard.ResXResourceWriter.#ctor(System.String)
  - System.Resources.NetStandard.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})
  - System.Resources.NetStandard.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)
  - System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.Byte[])
  - System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.Object)
  - System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.String)
  - System.Resources.NetStandard.ResXResourceWriter.AddResource(System.Resources.NetStandard.ResXDataNode)
  - System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.Byte[])
  - System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.Object)
  - System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.String)
  - System.Resources.NetStandard.ResXResourceWriter.BasePath
  - System.Resources.NetStandard.ResXResourceWriter.BinSerializedObjectMimeType
  - System.Resources.NetStandard.ResXResourceWriter.ByteArraySerializedObjectMimeType
  - System.Resources.NetStandard.ResXResourceWriter.Close
  - System.Resources.NetStandard.ResXResourceWriter.DefaultSerializedObjectMimeType
  - System.Resources.NetStandard.ResXResourceWriter.Dispose
  - System.Resources.NetStandard.ResXResourceWriter.Dispose(System.Boolean)
  - System.Resources.NetStandard.ResXResourceWriter.Finalize
  - System.Resources.NetStandard.ResXResourceWriter.Generate
  - System.Resources.NetStandard.ResXResourceWriter.ResMimeType
  - System.Resources.NetStandard.ResXResourceWriter.ResourceSchema
  - System.Resources.NetStandard.ResXResourceWriter.SoapSerializedObjectMimeType
  - System.Resources.NetStandard.ResXResourceWriter.Version
  langs:
  - csharp
  - vb
  name: ResXResourceWriter
  nameWithType: ResXResourceWriter
  fullName: System.Resources.NetStandard.ResXResourceWriter
  type: Class
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResXResourceWriter
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 20
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nResX resource writer. See the text in &quot;ResourceSchema&quot; for more\ninformation.\n"
  example: []
  syntax:
    content: 'public class ResXResourceWriter : IResourceWriter, IDisposable'
    content.vb: >-
      Public Class ResXResourceWriter
          Implements IResourceWriter, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceWriter
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Resources.NetStandard.ResXResourceWriter.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  - System.Resources.NetStandard.ResXResourceWriter.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{System.Resources.NetStandard.ResXResourceWriter,{T}}},{T},System.Boolean,System.Boolean)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  - System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  - System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Resources.NetStandard.ResXResourceWriter.BinSerializedObjectMimeType
  commentId: F:System.Resources.NetStandard.ResXResourceWriter.BinSerializedObjectMimeType
  id: BinSerializedObjectMimeType
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: BinSerializedObjectMimeType
  nameWithType: ResXResourceWriter.BinSerializedObjectMimeType
  fullName: System.Resources.NetStandard.ResXResourceWriter.BinSerializedObjectMimeType
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BinSerializedObjectMimeType
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 41
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public static readonly string BinSerializedObjectMimeType
    return:
      type: System.String
    content.vb: Public Shared ReadOnly BinSerializedObjectMimeType As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Resources.NetStandard.ResXResourceWriter.SoapSerializedObjectMimeType
  commentId: F:System.Resources.NetStandard.ResXResourceWriter.SoapSerializedObjectMimeType
  id: SoapSerializedObjectMimeType
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: SoapSerializedObjectMimeType
  nameWithType: ResXResourceWriter.SoapSerializedObjectMimeType
  fullName: System.Resources.NetStandard.ResXResourceWriter.SoapSerializedObjectMimeType
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: SoapSerializedObjectMimeType
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 42
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public static readonly string SoapSerializedObjectMimeType
    return:
      type: System.String
    content.vb: Public Shared ReadOnly SoapSerializedObjectMimeType As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Resources.NetStandard.ResXResourceWriter.DefaultSerializedObjectMimeType
  commentId: F:System.Resources.NetStandard.ResXResourceWriter.DefaultSerializedObjectMimeType
  id: DefaultSerializedObjectMimeType
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: DefaultSerializedObjectMimeType
  nameWithType: ResXResourceWriter.DefaultSerializedObjectMimeType
  fullName: System.Resources.NetStandard.ResXResourceWriter.DefaultSerializedObjectMimeType
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: DefaultSerializedObjectMimeType
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 43
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public static readonly string DefaultSerializedObjectMimeType
    return:
      type: System.String
    content.vb: Public Shared ReadOnly DefaultSerializedObjectMimeType As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Resources.NetStandard.ResXResourceWriter.ByteArraySerializedObjectMimeType
  commentId: F:System.Resources.NetStandard.ResXResourceWriter.ByteArraySerializedObjectMimeType
  id: ByteArraySerializedObjectMimeType
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ByteArraySerializedObjectMimeType
  nameWithType: ResXResourceWriter.ByteArraySerializedObjectMimeType
  fullName: System.Resources.NetStandard.ResXResourceWriter.ByteArraySerializedObjectMimeType
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ByteArraySerializedObjectMimeType
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 44
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public static readonly string ByteArraySerializedObjectMimeType
    return:
      type: System.String
    content.vb: Public Shared ReadOnly ByteArraySerializedObjectMimeType As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Resources.NetStandard.ResXResourceWriter.ResMimeType
  commentId: F:System.Resources.NetStandard.ResXResourceWriter.ResMimeType
  id: ResMimeType
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResMimeType
  nameWithType: ResXResourceWriter.ResMimeType
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResMimeType
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResMimeType
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 45
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public static readonly string ResMimeType
    return:
      type: System.String
    content.vb: Public Shared ReadOnly ResMimeType As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Resources.NetStandard.ResXResourceWriter.Version
  commentId: F:System.Resources.NetStandard.ResXResourceWriter.Version
  id: Version
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ResXResourceWriter.Version
  fullName: System.Resources.NetStandard.ResXResourceWriter.Version
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Version
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 46
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public static readonly string Version
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Version As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Resources.NetStandard.ResXResourceWriter.ResourceSchema
  commentId: F:System.Resources.NetStandard.ResXResourceWriter.ResourceSchema
  id: ResourceSchema
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResourceSchema
  nameWithType: ResXResourceWriter.ResourceSchema
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResourceSchema
  type: Field
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: ResourceSchema
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 48
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public static readonly string ResourceSchema
    return:
      type: System.String
    content.vb: Public Shared ReadOnly ResourceSchema As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Resources.NetStandard.ResXResourceWriter.BasePath
  commentId: P:System.Resources.NetStandard.ResXResourceWriter.BasePath
  id: BasePath
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: BasePath
  nameWithType: ResXResourceWriter.BasePath
  fullName: System.Resources.NetStandard.ResXResourceWriter.BasePath
  type: Property
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: BasePath
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 110
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nBase Path for ResXFileRefs.\n"
  example: []
  syntax:
    content: public string BasePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BasePath As String
  overload: System.Resources.NetStandard.ResXResourceWriter.BasePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.#ctor(System.String)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResXResourceWriter(String)
  nameWithType: ResXResourceWriter.ResXResourceWriter(String)
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.String)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 115
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCreates a new ResXResourceWriter that will write to the specified file.\n"
  example: []
  syntax:
    content: public ResXResourceWriter(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: Public Sub New(fileName As String)
  overload: System.Resources.NetStandard.ResXResourceWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})
  id: '#ctor(System.String,System.Func{System.Type,System.String})'
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResXResourceWriter(String, Func<Type, String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(String, Func<Type, String>)
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.String, System.Func<System.Type, System.String>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 119
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceWriter(string fileName, Func<Type, string> typeNameConverter)
    parameters:
    - id: fileName
      type: System.String
    - id: typeNameConverter
      type: System.Func{System.Type,System.String}
    content.vb: Public Sub New(fileName As String, typeNameConverter As Func(Of Type, String))
  overload: System.Resources.NetStandard.ResXResourceWriter.#ctor*
  nameWithType.vb: ResXResourceWriter.ResXResourceWriter(String, Func(Of Type, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.String, System.Func(Of System.Type, System.String))
  name.vb: ResXResourceWriter(String, Func(Of Type, String))
- uid: System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.Stream)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResXResourceWriter(Stream)
  nameWithType: ResXResourceWriter.ResXResourceWriter(Stream)
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 128
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCreates a new ResXResourceWriter that will write to the specified stream.\n"
  example: []
  syntax:
    content: public ResXResourceWriter(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
    content.vb: Public Sub New(stream As Stream)
  overload: System.Resources.NetStandard.ResXResourceWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})
  id: '#ctor(System.IO.Stream,System.Func{System.Type,System.String})'
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResXResourceWriter(Stream, Func<Type, String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(Stream, Func<Type, String>)
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.IO.Stream, System.Func<System.Type, System.String>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 132
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceWriter(Stream stream, Func<Type, string> typeNameConverter)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: typeNameConverter
      type: System.Func{System.Type,System.String}
    content.vb: Public Sub New(stream As Stream, typeNameConverter As Func(Of Type, String))
  overload: System.Resources.NetStandard.ResXResourceWriter.#ctor*
  nameWithType.vb: ResXResourceWriter.ResXResourceWriter(Stream, Func(Of Type, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.IO.Stream, System.Func(Of System.Type, System.String))
  name.vb: ResXResourceWriter(Stream, Func(Of Type, String))
- uid: System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.TextWriter)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResXResourceWriter(TextWriter)
  nameWithType: ResXResourceWriter.ResXResourceWriter(TextWriter)
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.IO.TextWriter)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 141
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCreates a new ResXResourceWriter that will write to the specified TextWriter.\n"
  example: []
  syntax:
    content: public ResXResourceWriter(TextWriter textWriter)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
    content.vb: Public Sub New(textWriter As TextWriter)
  overload: System.Resources.NetStandard.ResXResourceWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})
  id: '#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})'
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: ResXResourceWriter(TextWriter, Func<Type, String>)
  nameWithType: ResXResourceWriter.ResXResourceWriter(TextWriter, Func<Type, String>)
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.IO.TextWriter, System.Func<System.Type, System.String>)
  type: Constructor
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: .ctor
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 145
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public ResXResourceWriter(TextWriter textWriter, Func<Type, string> typeNameConverter)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
    - id: typeNameConverter
      type: System.Func{System.Type,System.String}
    content.vb: Public Sub New(textWriter As TextWriter, typeNameConverter As Func(Of Type, String))
  overload: System.Resources.NetStandard.ResXResourceWriter.#ctor*
  nameWithType.vb: ResXResourceWriter.ResXResourceWriter(TextWriter, Func(Of Type, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter(System.IO.TextWriter, System.Func(Of System.Type, System.String))
  name.vb: ResXResourceWriter(TextWriter, Func(Of Type, String))
- uid: System.Resources.NetStandard.ResXResourceWriter.Finalize
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.Finalize
  id: Finalize
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ResXResourceWriter.Finalize()
  fullName: System.Resources.NetStandard.ResXResourceWriter.Finalize()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Finalize
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 151
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: System.Resources.NetStandard.ResXResourceWriter.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Resources.NetStandard.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)
  id: AddAlias(System.String,System.Reflection.AssemblyName)
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddAlias(String, AssemblyName)
  nameWithType: ResXResourceWriter.AddAlias(String, AssemblyName)
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddAlias(System.String, System.Reflection.AssemblyName)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddAlias
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 259
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds aliases to the resource file...\n"
  example: []
  syntax:
    content: public virtual void AddAlias(string aliasName, AssemblyName assemblyName)
    parameters:
    - id: aliasName
      type: System.String
    - id: assemblyName
      type: System.Reflection.AssemblyName
    content.vb: Public Overridable Sub AddAlias(aliasName As String, assemblyName As AssemblyName)
  overload: System.Resources.NetStandard.ResXResourceWriter.AddAlias*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.Byte[])
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.Byte[])
  id: AddMetadata(System.String,System.Byte[])
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddMetadata(String, Byte[])
  nameWithType: ResXResourceWriter.AddMetadata(String, Byte[])
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddMetadata
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 278
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds the given value to the collection of metadata.  These name/value pairs\nwill be emitted to the &lt;metadata> elements in the .resx file.\n"
  example: []
  syntax:
    content: public void AddMetadata(string name, byte[] value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Byte[]
    content.vb: Public Sub AddMetadata(name As String, value As Byte())
  overload: System.Resources.NetStandard.ResXResourceWriter.AddMetadata*
  nameWithType.vb: ResXResourceWriter.AddMetadata(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String, System.Byte())
  name.vb: AddMetadata(String, Byte())
- uid: System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.String)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.String)
  id: AddMetadata(System.String,System.String)
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddMetadata(String, String)
  nameWithType: ResXResourceWriter.AddMetadata(String, String)
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddMetadata
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 287
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds the given value to the collection of metadata.  These name/value pairs\nwill be emitted to the &lt;metadata> elements in the .resx file.\n"
  example: []
  syntax:
    content: public void AddMetadata(string name, string value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Sub AddMetadata(name As String, value As String)
  overload: System.Resources.NetStandard.ResXResourceWriter.AddMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.Object)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String,System.Object)
  id: AddMetadata(System.String,System.Object)
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddMetadata(String, Object)
  nameWithType: ResXResourceWriter.AddMetadata(String, Object)
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddMetadata(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddMetadata
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 296
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds the given value to the collection of metadata.  These name/value pairs\nwill be emitted to the &lt;metadata> elements in the .resx file.\n"
  example: []
  syntax:
    content: public void AddMetadata(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub AddMetadata(name As String, value As Object)
  overload: System.Resources.NetStandard.ResXResourceWriter.AddMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.Byte[])
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.Byte[])
  id: AddResource(System.String,System.Byte[])
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddResource(String, Byte[])
  nameWithType: ResXResourceWriter.AddResource(String, Byte[])
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddResource
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 305
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds a blob resource to the resources.\n"
  example: []
  syntax:
    content: public void AddResource(string name, byte[] value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Byte[]
    content.vb: Public Sub AddResource(name As String, value As Byte())
  overload: System.Resources.NetStandard.ResXResourceWriter.AddResource*
  implements:
  - System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  nameWithType.vb: ResXResourceWriter.AddResource(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String, System.Byte())
  name.vb: AddResource(String, Byte())
- uid: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.Object)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.Object)
  id: AddResource(System.String,System.Object)
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddResource(String, Object)
  nameWithType: ResXResourceWriter.AddResource(String, Object)
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddResource
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 316
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds a resource to the resources. If the resource is a string,\nit will be saved that way, otherwise it will be serialized\nand stored as in binary.\n"
  example: []
  syntax:
    content: public void AddResource(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub AddResource(name As String, value As Object)
  overload: System.Resources.NetStandard.ResXResourceWriter.AddResource*
  implements:
  - System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.String)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddResource(String, String)
  nameWithType: ResXResourceWriter.AddResource(String, String)
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddResource
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 332
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds a string resource to the resources.\n"
  example: []
  syntax:
    content: public void AddResource(string name, string value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Sub AddResource(name As String, value As String)
  overload: System.Resources.NetStandard.ResXResourceWriter.AddResource*
  implements:
  - System.Resources.IResourceWriter.AddResource(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.Resources.NetStandard.ResXDataNode)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.AddResource(System.Resources.NetStandard.ResXDataNode)
  id: AddResource(System.Resources.NetStandard.ResXDataNode)
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: AddResource(ResXDataNode)
  nameWithType: ResXResourceWriter.AddResource(ResXDataNode)
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddResource(System.Resources.NetStandard.ResXDataNode)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: AddResource
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 340
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nAdds a string resource to the resources.\n"
  example: []
  syntax:
    content: public void AddResource(ResXDataNode node)
    parameters:
    - id: node
      type: System.Resources.NetStandard.ResXDataNode
    content.vb: Public Sub AddResource(node As ResXDataNode)
  overload: System.Resources.NetStandard.ResXResourceWriter.AddResource*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.Close
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.Close
  id: Close
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ResXResourceWriter.Close()
  fullName: System.Resources.NetStandard.ResXResourceWriter.Close()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Close
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 546
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nCloses any files or streams locked by the writer.\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: System.Resources.NetStandard.ResXResourceWriter.Close*
  implements:
  - System.Resources.IResourceWriter.Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.NetStandard.ResXResourceWriter.Dispose
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.Dispose
  id: Dispose
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ResXResourceWriter.Dispose()
  fullName: System.Resources.NetStandard.ResXResourceWriter.Dispose()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Dispose
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 552
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: System.Resources.NetStandard.ResXResourceWriter.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Resources.NetStandard.ResXResourceWriter.Dispose(System.Boolean)
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ResXResourceWriter.Dispose(Boolean)
  fullName: System.Resources.NetStandard.ResXResourceWriter.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Dispose
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 558
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: System.Resources.NetStandard.ResXResourceWriter.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Resources.NetStandard.ResXResourceWriter.Generate
  commentId: M:System.Resources.NetStandard.ResXResourceWriter.Generate
  id: Generate
  parent: System.Resources.NetStandard.ResXResourceWriter
  langs:
  - csharp
  - vb
  name: Generate()
  nameWithType: ResXResourceWriter.Generate()
  fullName: System.Resources.NetStandard.ResXResourceWriter.Generate()
  type: Method
  source:
    remote:
      path: src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
      branch: dev
      repo: https://github.com/pkbullock/pnpframework.git
    id: Generate
    path: ../src/lib/PnP.Framework/SystemResources/ResXResourceWriter.cs
    startLine: 637
  assemblies:
  - PnP.Framework
  namespace: System.Resources.NetStandard
  summary: "\nWrites the resources out to the file or stream.\n"
  example: []
  syntax:
    content: public void Generate()
    content.vb: Public Sub Generate
  overload: System.Resources.NetStandard.ResXResourceWriter.Generate*
  implements:
  - System.Resources.IResourceWriter.Generate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Resources.NetStandard
  commentId: N:System.Resources.NetStandard
  name: System.Resources.NetStandard
  nameWithType: System.Resources.NetStandard
  fullName: System.Resources.NetStandard
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Resources.IResourceWriter
  commentId: T:System.Resources.IResourceWriter
  parent: System.Resources
  isExternal: true
  name: IResourceWriter
  nameWithType: IResourceWriter
  fullName: System.Resources.IResourceWriter
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXResourceWriter.System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  parent: System.ValidationExtensions
  definition: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  name: ValidateNotNullOrEmpty<ResXResourceWriter>(String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ResXResourceWriter>(String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<System.Resources.NetStandard.ResXResourceWriter>(System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of ResXResourceWriter)(String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of System.Resources.NetStandard.ResXResourceWriter)(System.String)
  name.vb: ValidateNotNullOrEmpty(Of ResXResourceWriter)(String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty<ResXResourceWriter>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<ResXResourceWriter>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<System.Resources.NetStandard.ResXResourceWriter>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(System.String)
    name: ValidateNotNullOrEmpty(Of ResXResourceWriter)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of ResXResourceWriter)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of System.Resources.NetStandard.ResXResourceWriter)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXResourceWriter.PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{System.Resources.NetStandard.ResXResourceWriter,{T}}},{T},System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  name: Set<ResXResourceWriter, T>(Expression<Func<ResXResourceWriter, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<ResXResourceWriter, T>(Expression<Func<ResXResourceWriter, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<System.Resources.NetStandard.ResXResourceWriter, T>(System.Linq.Expressions.Expression<System.Func<System.Resources.NetStandard.ResXResourceWriter, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of ResXResourceWriter, T)(Expression(Of Func(Of ResXResourceWriter, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of System.Resources.NetStandard.ResXResourceWriter, T)(System.Linq.Expressions.Expression(Of System.Func(Of System.Resources.NetStandard.ResXResourceWriter, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of ResXResourceWriter, T)(Expression(Of Func(Of ResXResourceWriter, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<ResXResourceWriter, T>
    nameWithType: ObjectExtensions.Set<ResXResourceWriter, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<System.Resources.NetStandard.ResXResourceWriter, T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Resources.NetStandard.ResXResourceWriter
    name: ResXResourceWriter
    nameWithType: ResXResourceWriter
    fullName: System.Resources.NetStandard.ResXResourceWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of ResXResourceWriter, T)
    nameWithType: ObjectExtensions.Set(Of ResXResourceWriter, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of System.Resources.NetStandard.ResXResourceWriter, T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Resources.NetStandard.ResXResourceWriter
    name: ResXResourceWriter
    nameWithType: ResXResourceWriter
    fullName: System.Resources.NetStandard.ResXResourceWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  name: GetPublicInstancePropertyValue(String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  name: GetPublicInstanceProperty(String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  parent: PnP.Framework.Extensions.ObjectExtensions
  definition: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  name: SetPublicInstancePropertyValue(String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  parent: PnP.Framework.Modernization.Cache.Extensions
  definition: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  name: ToByteArray()
  nameWithType: Extensions.ToByteArray()
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray()
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Resources
  commentId: N:System.Resources
  isExternal: true
  name: System.Resources
  nameWithType: System.Resources
  fullName: System.Resources
- uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  commentId: M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
  isExternal: true
  name: ValidateNotNullOrEmpty<T>(T, String)
  nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>(T, String)
  fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>(T, System.String)
  nameWithType.vb: ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, String)
  fullName.vb: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)(T, System.String)
  name.vb: ValidateNotNullOrEmpty(Of T)(T, String)
  spec.csharp:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty<T>
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty<T>
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)
    name: ValidateNotNullOrEmpty(Of T)
    nameWithType: ValidationExtensions.ValidateNotNullOrEmpty(Of T)
    fullName: System.ValidationExtensions.ValidateNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValidationExtensions
  commentId: T:System.ValidationExtensions
  parent: System
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: System.ValidationExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
  isExternal: true
  name: Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  nameWithType: ObjectExtensions.Set<TObject, T>(TObject, Expression<Func<TObject, T>>, T, Boolean, Boolean)
  fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>(TObject, System.Linq.Expressions.Expression<System.Func<TObject, T>>, T, System.Boolean, System.Boolean)
  nameWithType.vb: ObjectExtensions.Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  fullName.vb: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)(TObject, System.Linq.Expressions.Expression(Of System.Func(Of TObject, T)), T, System.Boolean, System.Boolean)
  name.vb: Set(Of TObject, T)(TObject, Expression(Of Func(Of TObject, T)), T, Boolean, Boolean)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set<TObject, T>
    nameWithType: ObjectExtensions.Set<TObject, T>
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set<TObject, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,System.Boolean)
    name: Set(Of TObject, T)
    nameWithType: ObjectExtensions.Set(Of TObject, T)
    fullName: PnP.Framework.Extensions.ObjectExtensions.Set(Of TObject, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions
  commentId: T:PnP.Framework.Extensions.ObjectExtensions
  parent: PnP.Framework.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: PnP.Framework.Extensions.ObjectExtensions
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
  isExternal: true
  name: GetPublicInstancePropertyValue(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstancePropertyValue(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue(System.Object,System.String)
    name: GetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.GetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
  isExternal: true
  name: GetPublicInstanceProperty(Object, String)
  nameWithType: ObjectExtensions.GetPublicInstanceProperty(Object, String)
  fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object, System.String)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty(System.Object,System.String)
    name: GetPublicInstanceProperty
    nameWithType: ObjectExtensions.GetPublicInstanceProperty
    fullName: PnP.Framework.Extensions.ObjectExtensions.GetPublicInstanceProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  commentId: M:PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
  isExternal: true
  name: SetPublicInstancePropertyValue(Object, String, Object)
  nameWithType: ObjectExtensions.SetPublicInstancePropertyValue(Object, String, Object)
  fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue(System.Object,System.String,System.Object)
    name: SetPublicInstancePropertyValue
    nameWithType: ObjectExtensions.SetPublicInstancePropertyValue
    fullName: PnP.Framework.Extensions.ObjectExtensions.SetPublicInstancePropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  commentId: M:PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  isExternal: true
  name: ToByteArray(Object)
  nameWithType: Extensions.ToByteArray(Object)
  fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
  spec.csharp:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PnP.Framework.Modernization.Cache.Extensions.ToByteArray(System.Object)
    name: ToByteArray
    nameWithType: Extensions.ToByteArray
    fullName: PnP.Framework.Modernization.Cache.Extensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PnP.Framework.Modernization.Cache.Extensions
  commentId: T:PnP.Framework.Modernization.Cache.Extensions
  parent: PnP.Framework.Modernization.Cache
  name: Extensions
  nameWithType: Extensions
  fullName: PnP.Framework.Modernization.Cache.Extensions
- uid: PnP.Framework.Extensions
  commentId: N:PnP.Framework.Extensions
  name: PnP.Framework.Extensions
  nameWithType: PnP.Framework.Extensions
  fullName: PnP.Framework.Extensions
- uid: PnP.Framework.Modernization.Cache
  commentId: N:PnP.Framework.Modernization.Cache
  name: PnP.Framework.Modernization.Cache
  nameWithType: PnP.Framework.Modernization.Cache
  fullName: PnP.Framework.Modernization.Cache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.NetStandard.ResXResourceWriter.BasePath*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.BasePath
  name: BasePath
  nameWithType: ResXResourceWriter.BasePath
  fullName: System.Resources.NetStandard.ResXResourceWriter.BasePath
- uid: System.Resources.NetStandard.ResXResourceWriter.#ctor*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.#ctor
  name: ResXResourceWriter
  nameWithType: ResXResourceWriter.ResXResourceWriter
  fullName: System.Resources.NetStandard.ResXResourceWriter.ResXResourceWriter
- uid: System.Func{System.Type,System.String}
  commentId: T:System.Func{System.Type,System.String}
  parent: System
  definition: System.Func`2
  name: Func<Type, String>
  nameWithType: Func<Type, String>
  fullName: System.Func<System.Type, System.String>
  nameWithType.vb: Func(Of Type, String)
  fullName.vb: System.Func(Of System.Type, System.String)
  name.vb: Func(Of Type, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Resources.NetStandard.ResXResourceWriter.Finalize*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.Finalize
  name: Finalize
  nameWithType: ResXResourceWriter.Finalize
  fullName: System.Resources.NetStandard.ResXResourceWriter.Finalize
- uid: System.Resources.NetStandard.ResXResourceWriter.AddAlias*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.AddAlias
  name: AddAlias
  nameWithType: ResXResourceWriter.AddAlias
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddAlias
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Resources.NetStandard.ResXResourceWriter.AddMetadata*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.AddMetadata
  name: AddMetadata
  nameWithType: ResXResourceWriter.AddMetadata
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddMetadata
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Resources.NetStandard.ResXResourceWriter.AddResource*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.AddResource
  name: AddResource
  nameWithType: ResXResourceWriter.AddResource
  fullName: System.Resources.NetStandard.ResXResourceWriter.AddResource
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  commentId: M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  parent: System.Resources.IResourceWriter
  isExternal: true
  name: AddResource(String, Byte[])
  nameWithType: IResourceWriter.AddResource(String, Byte[])
  fullName: System.Resources.IResourceWriter.AddResource(System.String, System.Byte[])
  nameWithType.vb: IResourceWriter.AddResource(String, Byte())
  fullName.vb: System.Resources.IResourceWriter.AddResource(System.String, System.Byte())
  name.vb: AddResource(String, Byte())
  spec.csharp:
  - uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
    name: AddResource
    nameWithType: IResourceWriter.AddResource
    fullName: System.Resources.IResourceWriter.AddResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
    name: AddResource
    nameWithType: IResourceWriter.AddResource
    fullName: System.Resources.IResourceWriter.AddResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  commentId: M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  parent: System.Resources.IResourceWriter
  isExternal: true
  name: AddResource(String, Object)
  nameWithType: IResourceWriter.AddResource(String, Object)
  fullName: System.Resources.IResourceWriter.AddResource(System.String, System.Object)
  spec.csharp:
  - uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)
    name: AddResource
    nameWithType: IResourceWriter.AddResource
    fullName: System.Resources.IResourceWriter.AddResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)
    name: AddResource
    nameWithType: IResourceWriter.AddResource
    fullName: System.Resources.IResourceWriter.AddResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)
  commentId: M:System.Resources.IResourceWriter.AddResource(System.String,System.String)
  parent: System.Resources.IResourceWriter
  isExternal: true
  name: AddResource(String, String)
  nameWithType: IResourceWriter.AddResource(String, String)
  fullName: System.Resources.IResourceWriter.AddResource(System.String, System.String)
  spec.csharp:
  - uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)
    name: AddResource
    nameWithType: IResourceWriter.AddResource
    fullName: System.Resources.IResourceWriter.AddResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)
    name: AddResource
    nameWithType: IResourceWriter.AddResource
    fullName: System.Resources.IResourceWriter.AddResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXDataNode
  commentId: T:System.Resources.NetStandard.ResXDataNode
  parent: System.Resources.NetStandard
  name: ResXDataNode
  nameWithType: ResXDataNode
  fullName: System.Resources.NetStandard.ResXDataNode
- uid: System.Resources.NetStandard.ResXResourceWriter.Close*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.Close
  name: Close
  nameWithType: ResXResourceWriter.Close
  fullName: System.Resources.NetStandard.ResXResourceWriter.Close
- uid: System.Resources.IResourceWriter.Close
  commentId: M:System.Resources.IResourceWriter.Close
  parent: System.Resources.IResourceWriter
  isExternal: true
  name: Close()
  nameWithType: IResourceWriter.Close()
  fullName: System.Resources.IResourceWriter.Close()
  spec.csharp:
  - uid: System.Resources.IResourceWriter.Close
    name: Close
    nameWithType: IResourceWriter.Close
    fullName: System.Resources.IResourceWriter.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.IResourceWriter.Close
    name: Close
    nameWithType: IResourceWriter.Close
    fullName: System.Resources.IResourceWriter.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.NetStandard.ResXResourceWriter.Dispose*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.Dispose
  name: Dispose
  nameWithType: ResXResourceWriter.Dispose
  fullName: System.Resources.NetStandard.ResXResourceWriter.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.NetStandard.ResXResourceWriter.Generate*
  commentId: Overload:System.Resources.NetStandard.ResXResourceWriter.Generate
  name: Generate
  nameWithType: ResXResourceWriter.Generate
  fullName: System.Resources.NetStandard.ResXResourceWriter.Generate
- uid: System.Resources.IResourceWriter.Generate
  commentId: M:System.Resources.IResourceWriter.Generate
  parent: System.Resources.IResourceWriter
  isExternal: true
  name: Generate()
  nameWithType: IResourceWriter.Generate()
  fullName: System.Resources.IResourceWriter.Generate()
  spec.csharp:
  - uid: System.Resources.IResourceWriter.Generate
    name: Generate
    nameWithType: IResourceWriter.Generate
    fullName: System.Resources.IResourceWriter.Generate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.IResourceWriter.Generate
    name: Generate
    nameWithType: IResourceWriter.Generate
    fullName: System.Resources.IResourceWriter.Generate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
